<!-- 
  - Reciprocal Net project
  - build.xml
  -
  - This is the master build file at the base of the Reciprocal Net source
  - tree.  It knows how to build all the various packages related to the
  - Reciprocal Net project.  It is designed to be intereted by Apache's Ant, 
  - the platform-independent build tool.  Run 'ant -projecthelp' in the
  - same directory as this file for more information.  Works with Ant 1.5.4.
  -
  - 07-Jan-2004: ekoperda wrote first draft, borrowing heavily from the
  -              site software's previous build file
  - 18-Feb-2004: jobollin fixed the "countlines" target as part of task #1121
  - 02-Mar-2004: ekoperda added support for file build/properties to targets
  -              'generate-snapshot-number', 'snapshot-source', and 
  -              'snapshot-javadoc'
  - 04-Mar-2004: midurbin adapted target 'ts-coretest' to new directory
  -              structure
  - 29-Apr-2004: midurbin improved separation of JDK 1.1 target compilation and
  -              added a JDK 1.2 target.
  - 29-Apr-2004: ekoperda added targets 'portal-rpm' and
  -              'p-generate-rpms-from-snapshot' for portal software
  - 19-Aug-2004: ekoperda modified 'pre-compile' and 'javasrc' targets to make
  -              SAAJ and JAF libraries available at compile time
  - 03-Sep-2004: ekoperda modified 'pre-compile' and 'javasrc' targets to make
  -              JAXM library available at compile time
  - 04-Feb-2005: ekoperda modified 'content-jsp-translate' and 'javasrc' 
  -              targets to accommodate Tomcat 5
  - 22-Feb-2005: ekoperda modified 'javasrc-jdk1_1' and 'javasrc-jdk1_2'
  -              targets to accommodate compilation by JDK 1.5
  - 25-Feb-2005: ekoperda modified 'snapshot-javadoc' target to tell the
  -              JavaDoc tool where to find our 3rdparty libraries
  - 02-Jan-2008: ekoperda added 'selinux-compile' target
  -->

<project name="recipnet" default="all" basedir=".">



    <!-- **********************************************************************
    *                                                                         *
    *                      High-level targets are here                        *
    *                                                                         *
    *********************************************************************** -->



    <target name="all" 
            description="Generate all .rpm distributables"
            depends="snapshot, site-server-rpm, portal-rpm" />

    <target name="dev" 
            description="Compile to .jar files (during development)"
            depends="javasrc, content-jsp-translate, selinux-compile,
                     ss-package-into-jars" />

    <target name="snapshot" 
            description="Capture the source tree to .tgz tarballs"
            depends="snapshot-source, snapshot-javadoc" />

    <target name="site-server" 
            description="Compile the site software to .jar files"
            depends="javasrc, content-jsp-translate, selinux-compile, native, 
                     ss-package-into-jars" />

    <target name="site-server-rpm" 
            description="Generate .rpm distributables for the site software"
            depends="snapshot-source, ss-generate-rpms-from-snapshot" />

    <target name="portal-rpm"
            description="Generate .rpm distributables for the portal software"
            depends="snapshot-source, p-generate-rpms-from-snapshot" />

    <target name="rendering-head-server" />

    <target name="rendering-slave-server" />

    <target name="coordinator" />



    <!-- **********************************************************************
    *                                                                         *
    *                       Module-level targets are here                     *
    *                                                                         *
    *********************************************************************** -->



    <target name="javasrc" 
            depends="pre-compile, javasrc-jdk1_1, javasrc-jdk1_2">
        <mkdir dir="build/classes/" />
        <javac srcdir="javasrc/"
                destdir="build/classes/"
                includes="**/*.java"
                source="${java-source-version}"
                deprecation="on"
                debug="${java-debugging-enabled}"
                optimize="${java-optimization-enabled}">
            <classpath>
                <pathelement location="build/" />
                <pathelement location="${tomcat.libdir}/jsp-api.jar" />
                <pathelement location="${tomcat.libdir}/servlet-api.jar" />
                <pathelement location="${saaj.libdir}/saaj-1_2-fr-api.jar" />
                <pathelement location="${jaf.libdir}/activation.jar" />
                <pathelement location="${jaxm.libdir}/jaxm-api.jar" />
            </classpath>
        </javac>
        <rmic base="build/classes/" includesfile="misc/rmi.filelist" />
    </target>

    <target name="javasrc-jdk1_1" depends="pre-compile">
        <mkdir dir="build/classes/" />
        <javac srcdir="javasrc/"
                destdir="build/classes/"
                includesfile="misc/jdk1_1.filelist"
                source="1.3"
                target="1.1"
                deprecation="on"
                debug="${java-debugging-enabled}"
                optimize="${java-optimization-enabled}">
        </javac>
    </target>

    <target name="javasrc-jdk1_2" depends="pre-compile, javasrc-jdk1_1">
        <mkdir dir="build/classes/" />
        <javac srcdir="javasrc/"
                destdir="build/classes/"
                includesfile="misc/jdk1_2.filelist"
                source="1.3"
                target="1.2"
                deprecation="on"
                debug="${java-debugging-enabled}"
                optimize="${java-optimization-enabled}">
        </javac>
    </target>

    <target name="content-jsp-translate" depends="pre-compile, javasrc">
        <!--
          - Translate the site software's JSP's to Java source files.
          -->
        <mkdir dir="build/jsp-translated/org/recipnet/site/content/" />
        <taskdef classname="org.apache.jasper.JspC" name="jasper2">
            <classpath>
                <pathelement 
                      location="build/compile-time-tools/java/lib/tools.jar" />
                <fileset dir="${tomcat.libdir}" includes="*.jar" />
            </classpath>
        </taskdef>
        <jasper2 uriroot="content/site/"
                outputDir="build/jsp-translated/"
                classpath="build/classes/"
                package="org.recipnet.site.content"
                verbose="${jasper-verbosity-level}"
                validateXml="false" />

        <!--
          - Compile all the generated Java source files into classes.
          -->
        <javac srcdir="build/jsp-translated/"
                destdir="build/classes/"
                includes="**/*.java"
                source="${java-source-version}"
                deprecation="off"
                debug="${java-debugging-enabled}"
                optimize="${java-optimization-enabled}">
            <classpath>
                <pathelement location="build/classes/" />
                <fileset dir="${tomcat.libdir}" includes="*.jar" />
            </classpath>
        </javac>
    </target>

    <target name="snapshot-javadoc" 
            depends="generate-snapshot-number, pre-compile">
        <fail unless="snapshot.number" 
                message="Property 'snapshot.number' must be set" />
        <fail unless="snapshot.name" 
                message="Property 'snapshot.name' must be set" />

        <mkdir dir="build/apidocs/" />
        <javadoc destdir="build/apidocs/" 
                additionalparam="-breakiterator"
                access="private"
                source="${java-source-version}"
                windowtitle="Reciprocal Net API - snapshot ${snapshot.number}, ${TODAY_UK}">
            <fileset dir="javasrc/" includes="**/*.java" />
            <classpath>
                <fileset dir="${tomcat.libdir}" includes="*.jar" />
                <fileset dir="${saaj.libdir}" includes="*.jar" />
                <fileset dir="${jaf.libdir}" includes="*.jar" />
                <fileset dir="${jaxm.libdir}" includes="*.jar" />
            </classpath>
        </javadoc>
        <property name="dist.api-snapshot-file" 
                location="build/recipnet-snapshot-${snapshot.name}-api.tgz" />
        <tar destfile="${dist.api-snapshot-file}"
                compression="gzip">
            <tarfileset dir="build/apidocs/" includes="**/*" />
        </tar>
        <propertyfile file="build/properties">
            <entry key="dist.api-snapshot-file" 
                    value="${dist.api-snapshot-file}" />
        </propertyfile>
    </target>

    <target name="snapshot-source" depends="generate-snapshot-number">
        <fail unless="snapshot.number" 
                message="Property 'snapshot.number' must be set" />
        <fail unless="snapshot.name" 
                message="Property 'snapshot.name' must be set" />
        <mkdir dir="build/" />
        <property name="dist.source-snapshot-file"
              location="build/recipnet-snapshot-${snapshot.name}-source.tgz" />
        <tar destfile="${dist.source-snapshot-file}"
                compression="gzip">
            <tarfileset dir=".">
                <include name="**/*" />
                <exclude name="build/**/*" />
            </tarfileset>
        </tar>
        <propertyfile file="build/properties">
            <entry key="dist.source-snapshot-file" 
                    value="${dist.source-snapshot-file}" />
        </propertyfile>
    </target>

    <target name="selinux-compile" depends="pre-compile">
        <exec executable="${checkpolicy.libdir}/usr/bin/checkmodule"
                failonerror="true">
            <arg value="-M" />
            <arg value="-m" />
            <arg value="-o" />
            <arg file="build/recipnet_site_webapp.mod" />
            <arg file="misc/recipnet_site_webapp.te" />
        </exec>
        <exec executable="${policycoreutils.libdir}/usr/bin/semodule_package"
                failonerror="true">
            <arg value="-o" />
            <arg file="build/recipnet_site_webapp.pp" />
            <arg value="-m" />
            <arg file="build/recipnet_site_webapp.mod" />
        </exec>
    </target>

    <target name="native" depends="pre-compile">
        <ant dir="native/" />
    </target>

    <target name="ss-package-into-jars">
        <ant antfile="misc/package-site.xml" target="package-into-jars" />
    </target>

    <target name="ss-generate-rpms-from-snapshot">
        <ant antfile="misc/package-site.xml" 
                target="generate-rpms-from-snapshot" />
    </target>

    <target name="p-generate-rpms-from-snapshot">
        <ant antfile="misc/package-portal.xml" 
                target="generate-rpms-from-snapshot" />
    </target>



    <!-- **********************************************************************
    *                                                                         *
    *                    Developer utility targets are here                   *
    *                                                                         *
    *********************************************************************** -->



    <target name="clean">
        <delete dir="build/" />
    </target>

    <target name="countlines" description="displays a count of lines of code"
            depends="init,pre-compile">
        <exec executable="tools/linecounter.sh" vmlauncher="false"/>
    </target>

    <target name="ts-coretest"
            description="runs a core test against whatever installation of the core is live">
        <javac srcdir="tools/"
                classpath="${classpath}:build/classes/"
                includes="coretest.java"
                debug="yes"
          />
        <move todir="./">
          <fileset dir="tools">
            <include name="**/coretest*.class"/>
          </fileset>
        </move>
        <java classname="coretest"
                fork="yes"
                classpath="${classpath}:build/classes/:./"
          />
        <delete>
          <fileset dir="." includes="coretest*.class" />
        </delete>
    </target>

    <target name="ts-bounce"
            description="stop and restart all Recipnet-related services on the test server" >
        <antcall target="ts-stop" />
        <sleep seconds="3" />
        <antcall target="ts-start" />
    </target>

    <target name="ts-webbounce"
            description="stop and restart the web application part of the Reciprocal Net server software" >
        <antcall target="ts-stopwebapp" />
        <sleep seconds="5" />
        <antcall target="ts-startwebapp" />
    </target>

    <target name="ts-stop"
            description="stop all Reciprocal Net servcies on the test server" >
        <antcall target="ts-stopwebapp" />
        <antcall target="ts-stopcore" />
        <exec executable="sudo">
            <arg line="/sbin/service rmiregistry stop" />
        </exec>
        <exec executable="sudo">
            <arg line="/sbin/service mysqld stop" />
        </exec>
    </target>
 
    <target name="ts-start"
            description="start all Reciprocal Net servcies on the test server" >
        <exec executable="sudo">
            <arg line="/sbin/service mysqld start" />
        </exec>
        <exec executable="sudo">
            <arg line="/sbin/service rmiregistry start" />
        </exec>
        <sleep seconds="1" />
        <antcall target="ts-startcore" />
        <sleep seconds="2" />
        <antcall target="ts-startwebapp" />
    </target>
 
    <target name="ts-stopwebapp"
            description=
                "stop the webapp part of the Reciprocal Net software on the test server" >
        <exec executable="sudo">
            <arg line="/sbin/service httpd stop" />
        </exec>
        <exec executable="sudo">
            <arg line="/sbin/service tomcat4 stop" />
        </exec>
    </target>

    <target name="ts-startwebapp"
            description=
                "start the webapp part of the Reciprocal Net software on the test server" >
        <exec executable="sudo">
            <arg line="/sbin/service tomcat4 start" />
        </exec>
        <sleep seconds="3" />
        <exec executable="sudo">
            <arg line="/sbin/service httpd start" />
        </exec>
    </target>

    <target name="ts-stopcore"
            description=
                "stop the core part of the Reciprocal Net software and its supporting services on the test server" >
        <exec executable="sudo">
            <arg line="/sbin/service recipnetd stop" />
        </exec>
    </target>

    <target name="ts-startcore"
            description=
                "start the core part of the Reciprocal Net software and its supporting services on the test server" >
        <exec executable="sudo">
            <arg line="/sbin/service recipnetd start" />
        </exec>
    </target>

    <target name="ts-fixperms" 
            description="fix permissions of key files on the test server">
        <echo message="Fixing file permissions... (be patient!)" />
        <exec executable="sudo">
            <arg line="/usr/local/recipnet-project/tools/fixpermissions" />
        </exec>
        <echo message="File permissions fixed" />
    </target>



    <!-- **********************************************************************
    *                                                                         *
    *                       Build infrastructure is here                      *
    *                                                                         *
    *********************************************************************** -->



    <target name="init">
        <tstamp>
            <format property="TODAY_UK" pattern="d-MMM-yyyy" locale="en" />
        </tstamp>

        <loadproperties srcfile="misc/build.properties" />

        <!-- The line below imports all of the Unix environment variables as
             Ant properties with the prefix 'env.'. -->
        <property environment="env" />
    </target>
  
    <target name="pre-compile" depends="init">
        <mkdir dir="build/" />

        <ant antfile="misc/compile-time-tools.xml" 
                target="compile-time-tools"
                dir="." />

        <property name="tomcat.libdir"
                location="build/compile-time-tools/tomcat/" />
        <property name="saaj.libdir"
                location="build/compile-time-tools/saaj/" />
        <property name="jaf.libdir"
                location="build/compile-time-tools/jaf/" />
        <property name="jaxm.libdir"
                location="build/compile-time-tools/jaxm/" />
        <property name="checkpolicy.libdir"
                location="build/compile-time-tools/checkpolicy/" />
        <property name="policycoreutils.libdir"
                location="build/compile-time-tools/policycoreutils/" />
    </target>

    <target name="generate-snapshot-number" depends="init">
        <mkdir dir="build/" />

        <!--
          - Determine the sequence number of this snapshot.
          -->
        <propertyfile file="misc/snapshot.number">
            <entry key="snapshot.number" 
                    type="int" 
                    default="0000" 
                    operation="+" 
                    pattern="0000" />
        </propertyfile>
        <loadproperties srcFile="misc/snapshot.number" />

        <!--
          - If no "branch" of the source tree has been explicitly specified
          - by the caller, set the value to blank.
          -->
        <property name="snapshot.branch" value="" />

        <!--
          - Set the "name" of this snapshot that future code will use to
          - generate filenames.
          -->
        <property name="snapshot.name" 
                value="${snapshot.branch}${snapshot.number}-${DSTAMP}" />

        <!--
          - Save the snapshot.name property to a file so others can use it.
          -->
        <propertyfile file="build/properties">
            <entry key="snapshot.name" value="${snapshot.name}" />
        </propertyfile>
    </target>
</project>
