#!/bin/sh
#
# Reciprocal Net project
#
# recipnet-createreposdir
#
# Shell script used by Repository Manager to create a new repository directory
# that has appropriate permissions and ownership.  This script is not designed
# to be invoked by users directly.  
#
# The first (and only) parameter should be the full path to the directory to be
# created.  All necessary parent directories will be created also, and all
# permissions/ownerships of created directories will match those of the deepest
# pre-existing directory.
#
# Exit codes are:
#    -1    invalid argument
#     0    normal completion
#     1    directory creation failed
#     2    directory ownership could not be set
#     3    directory permissions could not be set
#     4    directory SELinux context could not be set
#
# This script must be setuid root to function correctly (changing directory
# ownership requires root privilege)
#
# 13-Aug-2002: ekoperda wrote first draft
# 30-Dec-2002: jobollin complete rewrite while fixing bug #675
# 24-Mar-2003: jobollin fixed bug #816
# 25-Oct-2005: midurbin added code to set the SELinux context to fix bug #1549
# 27-Dec-2007: ekoperda fixed bug #1829 by improving detection of SELinux

# Verify that the argument looks like an absolute pathname
[[ ${1:0:1} == "/" ]] || exit -1

# DIRS is an array that will hold the directory names that need to have
# permissions and ownership set
declare -a DIRS

# BASEPATH, if not empty, is the name of the directory whose ownership and
# permissions are to be the model for those of the new directories
BASEPATH=""

# Figure out the deepest directory in the desired path that already exists
CURRENTPATH=$1
while [[ -n "$CURRENTPATH" ]]; do
    if [[ -d "$CURRENTPATH" ]]; then
        # Found an existing directory -- end processing
        BASEPATH=$CURRENTPATH
        break
    else
        # Non-existant directory -- store its name and remove the leaf
        # directory from the path
        DIRS[${#DIRS[*]}]=$CURRENTPATH
        CURRENTPATH=${CURRENTPATH%/*}
    fi
done


# If any directories need be created then create them and set the ownership and
# permissions.  Also set an SELinux label if this system has SELinux and
# labeling is enabled.
if [[ ${#DIRS[@]} -gt 0 ]]; then
    mkdir -p "$1" || exit 1
    for DIR in "${DIRS[@]}" ; do
        chown --reference="$BASEPATH" "$DIR" || exit 2
        chmod --reference="$BASEPATH" "$DIR" || exit 3
	ORIGINALLABEL=`ls --scontext -d "$DIR" | cut -f 1 -d " "`
	if [[ -n "$ORIGINALLABEL" && -x /usr/bin/chcon ]]; then
	    chcon -t httpd_sys_content_t $DIR || exit 4
        fi
    done
fi

