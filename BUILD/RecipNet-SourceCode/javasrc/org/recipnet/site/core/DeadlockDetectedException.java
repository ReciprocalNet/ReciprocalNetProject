/*
 * Reciprocal Net Project
 * @(#)DeadlockDetectedException.java
 *
 * 12-Feb-2003: jobollin autogenerated skeleton source from UML model
 * 12-Feb-2003: jobollin cleaned up and completed the autogenerated source
 */
package org.recipnet.site.core;

import org.recipnet.site.RecipnetException;

/**
 * A <code>RecipnetException</code> subclass thrown when an apparent deadlock is
 * detected in the core.  This exception should always be caught and handled in
 * core.  If this exception results from a user request then it must not be
 * thrown directly back up the stack, but it may be wrapped in an
 * <code>OperationFailedException</code>.
 */
public class DeadlockDetectedException extends RecipnetException {
    
    /**
     * Creates a new <code>DeadlockDetectedException</code>
     */
    public  DeadlockDetectedException() {
        this(null);
    }
    
    /**
     * Creates a new <code>DeadlockDetectedException</code> with the specified
     * detail message
     *
     * @param message the detail message for this exception
     */
    public  DeadlockDetectedException(String message) {
        super(message);
    }
    
}
