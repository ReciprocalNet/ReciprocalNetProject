/*
 * Reciprocal Net Project
 * 
 * ResourceNotFoundException.java
 *
 * 12-Feb-2003: jobollin autogenerated skeleton source from UML model
 * 12-Feb-2003: jobollin cleaned up and completed the autogenerated source
 * 21-Feb-2003: ekoperda added a 2-param constructor that takes a Throwable
 * 24-Mar-2003: jobollin modified the 2-parm constructor as part of task #808
 * 07-Jul-2006: jobollin reformatted the source
 */
package org.recipnet.site.core;

/**
 * An {@code OperationFailedException} subclass that may be thrown
 * when the reason for the failure is that the requested resource was not
 * found
 */
public class ResourceNotFoundException extends ResourceException {
    
    /**
     * Creates a new {@code ResourceNotFoundException}
     */
    public  ResourceNotFoundException() {
        super();
    }
    
    /**
     * Creates a new {@code ResourceNotFoundException} with the specified
     * resource identifier
     *
     * @param identifier the identifier object for the missing resource
     */
    public  ResourceNotFoundException(Object identifier) {
        super(identifier);
    }
    
    /**
     * Creates a new {@code ResourceNotFoundException} with the specified
     * resource identifer and cause
     *
     * @param identifier the identifier object for the missing resource
     * @param cause the {@code Throwable} cause for this exception
     */
    public ResourceNotFoundException(Object identifier, Throwable cause) {
	super(identifier, cause);
    }

    /**
     * Creates a new {@code ResourceNotFoundException} with the specified detail
     * message and resource identifier
     * 
     * @param message the detail message for this exception
     * @param identifier the identifier object for the missing resource
     */
    public  ResourceNotFoundException(String message, Object identifier) {
        super(message, identifier);
    }
    
}
