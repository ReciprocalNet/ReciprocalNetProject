/*
 * Reciprocal Net Project
 * @(#)IsmProcessingException.java
 *
 * 12-Feb-2003: jobollin autogenerated skeleton source from UML model
 * 12-Feb-2003: jobollin cleaned up and completed the autogenerated source
 * 21-Feb-2003: ekoperda added reason code support
 * 07-Jan-2004: ekoperda changed package references to match source tree
 *              reorganization
 */

package org.recipnet.site.core;
import org.recipnet.site.core.msg.InterSiteMessage;
import org.recipnet.site.shared.db.SiteInfo;

/**
 * An <code>IntersiteException</code> subclass for the particular case of a
 * problem within the intersite messaging subsystem
 */
public class IsmProcessingException extends IntersiteException {
    /**
     * Reason code for when the ISM sender isn't trusted to send the sort of
     * ISM that it did, or isn't considered authoritative for the resource that
     * it advertised, modified, etc.
     */
    public static final int SENDER_NOT_AUTHORIZED = 1;

    /**
     * Reason code for when the resource advertised by an ISM is already known
     * to the local site, possibly a case of conflicting id's.
     */
    public static final int RESOURCE_ALREADY_ADVERTISED = 2;

    /**
     * Reason code for when the resource modified, etc. by an ISM is not
     * already known to the local site, possibly a case of dropped ISM's 
     * previously.
     */
    public static final int RESOURCE_NOT_ADVERTISED = 3;

    /**
     * The reason code describing the processing problems encountered by an
     * ISM; a combination of the specific reason code bitmasks defined in this
     * class
     */
    private int reason;

    /**
     * Creates a new <code>ISMException</code>
     */
    public  IsmProcessingException() {
        this(null, null);
    }
    
    /**
     * Creates a new <code>ISMException</code> with the specified problematic
     * <code>InterSiteMessage</code>
     *
     * @param ism an <code>InterSiteMessage</code> with which a problem was
     * detected thereby causing this exception to be thrown
     */
    public  IsmProcessingException(InterSiteMessage ism) {
        this(null, ism);
    }

    /**
     * Creates a new <code>ISMException</code> with the specified problematic
     * <code>InterSiteMessage</code> and a specific reason.
     *
     * @param ism an <code>InterSiteMessage</code> with which a problem was
     * detected thereby causing this exception to be thrown
     * @param reason one of the possible reason codes defined on this class.
     */
    public  IsmProcessingException(InterSiteMessage ism, int reason) {
        this(null, ism);
	this.reason = reason;
    }
    
    /**
     * Creates a new <code>ISMException</code> with the specified detail
     * message and problematic <code>InterSiteMessage</code>
     *
     * @param message the detail message for this exception
     * @param ism an <code>InterSiteMessage</code> with which
     */
    public  IsmProcessingException(String message, InterSiteMessage ism) {
        super(message,
	        (ism == null) ? SiteInfo.INVALID_SITE_ID : ism.sourceSiteId,
		null, ism);
    }
    
    /**
     * Retrieves the intersite message with which a problem was encountered.
     * This is the same object returned by <code>getForeignObject</code>, but
     * typed as an <code>InterSiteMessage</code>
     *
     * @return the problematic <code>InterSiteMessage</code>
     */
    public InterSiteMessage getIsm() {
        return (InterSiteMessage) getForeignObject();
    }

    /**
     * Returns the reason code describing the data invalidity
     *
     * @return the reason code describing the data invalidity; a combination of
     * the specific reason code bitmasks defined in this class
     */
    public int getReason() {
        return reason;
    }
}
