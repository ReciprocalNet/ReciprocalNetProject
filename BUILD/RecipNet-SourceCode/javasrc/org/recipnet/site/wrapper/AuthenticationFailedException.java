/*
 * Reciprocal Net Project
 *
 * AuthenticationFailedException.java
 *
 * 03-Mar-2003: jobollin autogenerated skeleton source from UML model as part
 *              of task #759
 * 03-Mar-2003: jobollin filled out the skeleton source to complete the class
 *              implementation; part of task #759
 * 25-May-2006: jobollin updated docs and reformatted
 */
package org.recipnet.site.wrapper;

import org.recipnet.site.OperationNotPermittedException;

/**
 * An {@code OperationNotPermitted} subclass for use in the case where
 * a login operation must not be permitted because the provided credentials
 * were not authenticated
 */
public class AuthenticationFailedException
    extends OperationNotPermittedException {

    /**
     * The username provided in the failed authentication attempt
     */
    private String username;

    /**
     * Initializes a new {@code AuthenticationFailedException} with no specified
     * user name
     */
    public AuthenticationFailedException() {
        username = null;
    }

    /**
     * Initializes a new {@code AuthenticationFailedException} with the
     * specified user name
     *
     * @param username the username provided during the authentication attempt
     */
    public AuthenticationFailedException(String username) {
        this.username = username;
    }

    /**
     * Initializes a new {@code AuthenticationFailedException} with the
     * specified detail message and user name
     *
     * @param message the detail message for this exception
     * @param username the username provided during the authentication attempt
     */
    public AuthenticationFailedException(String message, String username) {
        super(message);
        this.username = username;
    }

    /**
     * Gets the user name provided during the failed authentication attempt
     *
     * @return a {@code String} containing the username; may be
     *         {@code null} if no username was supplied at construction
     *         time
     */
    public String getUsername() {
        return username;
    }
}
