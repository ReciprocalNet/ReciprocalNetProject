# Reciprocal Net project
# recipnet-webapp.jar.filelist
#
# Java class files listed here, and any other classes required to instantiate
# them (that can be autodetected), will be bundled into recipnet-webapp.jar and
# distributed as part of the site software.
#
# 05-Feb-2004: ekoperda wrote first draft
# 19-Feb-2004: midurbin added special case inclusion of TEI-classes for custom
#              tags.
# 01-Sep-2004: ekoperda added inclusion rules for each of the application-scope
#              singleton objects that are instantiated by the servlet container
# 26-Apr-2005: midurbin added inclusion for the application-scope listener
#              SessionPreferenceTracker
# 01-Jan-2008: ekoperda added ModRewriteAuthConnector, removed AuthConnector


# Include all the classes needed to run our JSP "content" classes.  Note that
# the compiled JSP's themselves are not bundled into the .jar due to an 
# exclusion rule defined in package-site.xml.  Once you've autodetect all the
# classes that the JSP's depend upon, the rule picks up just about all the
# classes we need.  Everything else listed in this file is an exception to 
# the rule.
org/recipnet/site/content/**/*.class

# RMI stub classes for RMI-accessible objects are instantiated by the RMI
# client, not our code, so we need to force their inclusion in the .jar.
org/recipnet/site/core/*_Stub.class

# ModRewriteAuthConnector is instantiated from the command line but never
# by our Java code, so we need to force its inclusion in the .jar.
org/recipnet/site/wrapper/ModRewriteAuthConnector.class

# The webapp knows about the exceptions it throws but does not know about the
# exceptions thrown by lower layers.  We don't want it to choke when it needs
# to RMI-unmarshall an exception object thrown by core.
org/recipnet/site/**/*Exception.class

# The build script has knowledge of the TEI-class while pre-compiling the JSPs
# but to allow the servlet container to recompile modified JSP's the tei-class
# must be included in the jar file.
org/recipnet/common/**/*ExtraInfo.class

# The servlet container will need class files for each of the singleton
# application-scope classes it will instantiate, as declared in the 
# content/site/WEB-INF/web.xml file.
org/recipnet/site/wrapper/CoreConnector.class
org/recipnet/site/wrapper/FileTracker.class
org/recipnet/site/wrapper/LanguageHelper.class
org/recipnet/site/wrapper/OperationPersister.class
org/recipnet/site/wrapper/SessionPreferenceTracker.class
