/*
 * Reciprocal Net Project
 * @(#)OperationNotPermittedException.java
 *
 * 12-Feb-2003: jobollin autogenerated skeleton source from UML model
 * 12-Feb-2003: jobollin cleaned up and completed the autogenerated source
 */
package org.recipnet.site;

/**
 * A <code>RecipnetException</code> subclass thrown when the requested
 * operation is not permitted; generally this means that some prerequisite
 * was not satisfied
 */
public class OperationNotPermittedException extends RecipnetException {
    
    /**
     * The object of the attempted operation
     */
    private Object object;
    
    /**
     * Creates a new <code>OperationNotPermittedException</code>
     */
    public  OperationNotPermittedException() {
        this(null, null);
    }
    
    /**
     * Creates a new <code>OperationNotPermittedException</code> with the
     * specified detail message
     *
     * @param message the detail message for this exception
     */
    public  OperationNotPermittedException(String message) {
        this(message, null);
    }
    
    /**
     * Creates a new <code>OperationNotPermittedException</code> with the
     * specified object
     *
     * @param object the <code>Object</code> that was the object of the
     * attempted operation
     */
    public  OperationNotPermittedException(Object object) {
        this(null, object);
    }
    
    /**
     * Creates a new <code>OperationNotPermittedException</code> with the
     * specified detail message and object
     *
     * @param message a <code>String</code> containing the detail message for
     * this exception
     * @param object the <code>Object</code> that was the object of the
     * attempted operation
     */
    public  OperationNotPermittedException(String message, Object object) {
        super(message);
	this.object = object;
    }
    
    /**
     * Returns the object of the attempted operation
     *
     * @return the object <code>Object</code> of the attempted operation, if
     * one was recorded; may be <code>null</code>
     */
    public Object getObject() {
        return object;
    }
    
}
