/*
 * Reciprocal Net project
 * 
 * SiteSponsorImage.java
 * 
 * 19-Oct-2004: midurbin wrote first draft
 * 01-Apr-2005: midurbin fixed bug #1455 by adding generateCopy()
 * 15-Aug-2005: midurbin updated reset() to reflect changes to ImageHtmlElement
 * 14-Jun-2006: jobollin reformatted the source
 */

package org.recipnet.site.content.rncontrols;

import java.io.IOException;
import java.util.Map;

import javax.servlet.jsp.JspException;
import javax.servlet.jsp.JspWriter;
import javax.servlet.jsp.PageContext;

import org.recipnet.common.controls.HtmlPageElement;
import org.recipnet.common.controls.ImageHtmlElement;
import org.recipnet.site.shared.db.SiteInfo;

/**
 * A tag that displays the site sponsor image for the site identified by the
 * {@code SiteContext} in which this tag is nested. The image is assumed to be
 * located at address generated by appending "images/sitesponsor.gif" to the
 * site's base URL.
 */
public class SiteSponsorImage extends ImageHtmlElement {

    /**
     * The {@code SiteContext} implementing tag in which this tag is nested.
     * Determined by {@code onRegistrationPhaseBeforeBody()}.
     */
    private SiteContext siteContext;

    /** {@inheritDoc} */
    @Override
    protected void reset() {
        super.reset();
        super.setSrcIsAbsolute(true);
        this.siteContext = null;
    }

    /**
     * {@inheritDoc}; this version looks up the innermost containing
     * {@code SiteContext}.
     * 
     * @throws IllegalStateException if this tag is not nested within a
     *         {@code SiteContext}.
     */
    @Override
    public int onRegistrationPhaseBeforeBody(PageContext pageContext)
            throws JspException {
        int rc = super.onRegistrationPhaseBeforeBody(pageContext);

        // get the siteContext
        this.siteContext = findRealAncestorWithClass(this, SiteContext.class);
        if (this.siteContext == null) {
            // Can't find the required context from ancestry
            throw new IllegalStateException();
        }

        return rc;
    }

    /**
     * {@inheritDoc}; this version sets the 'src' property for this tag based
     * on the data in the {@code SiteInfo} retrieved from the
     * {@code SiteContext}.
     * 
     * @throws IllegalStateException if {@code SiteContext} provides a
     *         {@code null} {@code SiteInfo}
     */
    @Override
    public int onRenderingPhaseAfterBody(JspWriter out) throws IOException,
            JspException {
        assert (this.siteContext != null);
        SiteInfo si = this.siteContext.getSiteInfo();

        if (si == null) {
            throw new IllegalStateException();
        }

        setSrc(si.baseUrl + "images/sitesponsor.gif");
        setAlt(si.shortName);

        return super.onRenderingPhaseAfterBody(out);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HtmlPageElement generateCopy(String newId, Map map) {
        SiteSponsorImage dc = (SiteSponsorImage) super.generateCopy(newId, map);

        dc.siteContext = (SiteContext) map.get(this.siteContext);

        return dc;
    }
}
