/*
 * Reciprocal Net Project
 * @(#)ResourceNotAccessibleException.java
 *
 * 12-Feb-2003: jobollin autogenerated skeleton source from UML model
 * 12-Feb-2003: jobollin cleaned up and completed the autogenerated source
 */
package org.recipnet.site.core;

/**
 * An <code>OperationFailedException</code> subclass that may be thrown
 * when the reason for the failure is that a resource is present but cannot
 * be accessed by the application. If the resource is not present at all
 * then a <code>ResourceNotFoundException</code> should be thrown instead.
 */
public class ResourceNotAccessibleException extends ResourceException {
    
    /**
     * Creates a new <code>ResourceNotAccessibleException</code>
     */
    public  ResourceNotAccessibleException() {
        this(null, null);
    }
    
    /**
     * Creates a new <code>ResourceNotAccessibleException</code> with the
     * specified resource identifier object
     *
     * @param identifier the identifier object for the inaccessible resource
     */
    public  ResourceNotAccessibleException(Object identifier) {
        this(null, identifier);
    }
    
    /**
     * Creates a new <code>ResourceNotAccessibleException</code> with the
     * specified detail message and resource identifier
     *
     * @param message the detail message for this exception
     * @param identifier the identifier object for the inaccessible resource
     */
    public  ResourceNotAccessibleException(String message, Object identifier) {
        super(message, identifier);
    }
    
}
