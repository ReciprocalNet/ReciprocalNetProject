--- ortepold/ortep.f	2002-11-01 13:05:34.000000000 -0500
+++ ortepnew/ortep.f	2002-11-04 15:08:03.000000000 -0500
@@ -19,25 +19,32 @@
 c     represents that its use would not infringe privately owned rights.
 c ******************
 
-      PROGRAM ORTEP
-      REAL*8 TD
-      REAL*8 AIN,ATOMID 
+c
+c This version locally modified for execution under batch control
+c by John C. Bollinger of the Indiana University Molecular Structure Center
+c
+
+      subroutine ortepmain(filename, namelen, drawtype, iorien, ipght)
+      implicit integer (I-N), double precision(A-H, O-Z)
+      character*(*) filename
+      integer namelen,drawtype,iorien,ipght
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
+     2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
       CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
       CHARACTER*8 CHEM
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
-     2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
-      INTEGER*2 IDENT           
-      COMMON /PARMS/ CHEM(505),EV(3,505),P(3,505),PA(3,3,505)        
-     1 ,IDENT(2,505),MAXATM
-      COMMON /QUEUE/ NED,NQUE,NEXT,NBACK,INQ,QUE(96),hque(96)
-      CHARACTER*73 INQ,QUE,hque
-      common /ns/ npf,ndraw,norient,nvar
+      COMMON /PARMS/ EV(3,2525),P(3,2525),PA(3,3,2525),IDENT(2,2525),
+     1 MAXATM
+      COMMON /PARMSA/ CHEM(2525)
+      COMMON /QUEUE/ NQUE,NEXT,NBACK
+      COMMON /QUEUEA/ INQ,QUE(960)
+      CHARACTER*73 INQ,QUE
+      common /ns/ npf,ndraw,NORIEN,nvar
       logical tmpopn    
 
 c *** Drawing Output Options
@@ -45,21 +52,33 @@
 c *** ndraw=1: screen output 
 c *** ndraw=2: Postscript file output
 c *** ndraw=3: HPGL file output
-c *** ndraw=9: reserved for future use
+      ndraw=drawtype
+      if (ndraw.eq.0) return
 
 c *** Logical Unit Numbers ***
-c *** 15,16 are used in subroutine EDITR 
 c *** 18 (variable iu) is used in subroutine PRELIM 
-c *** NOUT is set in subroutine UINPUT 
+      if (namelen.gt.0) then
       IN=3
-      NED=7
+         open(in,file=filename(1:namelen),status='old',err=9998)
+      else
+         IN=5
+      endif
       NSR=8
-      NPF=10
-
-      write (6,1)
-    1 format(' ORTEP-III Version 1.0.3 Jan. 25, 2000')
+      NPF=6
 
-      call uinput(in,nout)
+c *** orientation of drawing
+c *** 1: portrait, 2: landscape
+      if (iorien.ne.0) then
+         norien=iorien
+      else
+         NORIEN=1
+      endif
+c *** height of page
+      if (ipght.ne.0) then
+         nvar=ipght
+      else
+         nvar=11000
+      endif
 
     2 CALL PRIME
 
@@ -69,32 +88,18 @@
       if (tmpopn) close(NSR)
       open(NSR,status='scratch',form='unformatted')
 
-c *** open a temporary file - needed by the editor ***
-c *** if already open, close it first ***
-      inquire(NED,opened=tmpopn)
-      if (tmpopn) close(NED)
-      open(NED,status='scratch')
-
 C     ***** READ JOB TITLE CARD *****
       READ (IN,4)(TITLE(I),I=1,18)
     4 FORMAT(18A4)
-      write (NED,4)(TITLE(I),I=1,18)
-      IF (NOUT.GE.0)
-     &WRITE (NOUT,6)(TITLE(I),I=1,18)
-    5 FORMAT(1H0,10X,18A4)
-    6 FORMAT(1H1,10X,18A4)
       CALL PRELIM
-      IF (NOUT.GE.0)
-     &WRITE (NOUT,6)(TITLE(I),I=1,18)
 C     ***** LOAD INSTRUCTION QUE *****
       NQUE=0
  2005 NQUE=NQUE+1
  2010 READ (IN,2012,END=2015,ERR=3000) QUE(NQUE)
       if (que(nque)(1:1).eq.'#') go to 2010
-      hque(nque)=que(nque)
       if (que(nque)(4:9).eq.'    -2') go to 2020
  2012 FORMAT(A72)
-      IF(NQUE.LT.96) GO TO 2005
+      IF(NQUE.LT.960) GO TO 2005
       GO TO 2020
  2015 NQUE=NQUE-1
 C     ***** REPOSITION TO POINT BEFORE EOF *****
@@ -106,11 +111,8 @@
     7 ISAVE=0
 C     ***** ZERO AIN ARRAY *****
     8 DO 10 J=1,140
-   10 AIN(J)=0.
-   11 FORMAT(1H0,4X,17H((((( INSTRUCTION,I5,6H ))))))
+   10 AIN(J)=0d0
    12 FORMAT(I3,I6,7F9.0)
-   13 FORMAT(I3,I6,7D15.8)
-   14 FORMAT(1H ,9X,7D15.7)
 C     ***** READ NEW INSTRUCTION CARD *****
       NCD=0
       N1=-6
@@ -126,22 +128,14 @@
    22 READ (NSR)IIC,NF,(AIN(I),I=N1,N2)
       IF(IIC)7,24,24
    24 IF(N1-1)26,26,30
-   26 IF (NOUT.GE.0)
-     &WRITE (NOUT,11)NF
-      NF1=NF
+   26 NF1=NF
       IF(NF1)28,8,30
-c *** run editor?
-   28 call go2edtr
-      if (next.lt.nque) go to 8
+   28 if (next.lt.nque) go to 8
       IF(NF1+2)2,2,3000
    30 CONTINUE
-CCC   IF (NOUT.GE.0)
-CCC  &WRITE (NOUT,14)(AIN(I),I=N1,N2)
    32 IIC=IIC+1
       GO TO (90,16,38,50),IIC
    33 FORMAT(I3,6X,5I3,8F6.0)
-   34 FORMAT(6I3,8E12.5)
-   35 FORMAT(1H ,11X,5I3,8F11.5)
 C     ***** READ FORMAT 2 TRAILER CARDS *****
    38 NCD=NCD+1
       IF(ISAVE)44,40,40
@@ -152,9 +146,7 @@
    42 WRITE (NSR)IIC,(KD(I,NCD),I=1,5),(CD(I,NCD),I=1,8)
       GO TO 46
    44 READ (NSR)IIC,(KD(I,NCD),I=1,5),(CD(I,NCD),I=1,8)
-   46 IF (NOUT.GE.0)
-     &WRITE (NOUT,35)(KD(I,NCD),I=1,5),(CD(I,NCD),I=1,8)
-      GO TO 32
+   46 GO TO 32
 C     ***** READ FORMAT 3 TRAILER CARD *****
    50 IF(ISAVE)52,54,54
    52 READ (NSR)(TITLE2(I),I=1,18)
@@ -162,9 +154,7 @@
    54 INQ=QUE(NEXT)
       NEXT=NEXT+1
       READ (INQ,4)(TITLE2(I),I=1,18)
-   55 IF (NOUT.GE.0)
-     &WRITE (NOUT,5)(TITLE2(I),I=1,18)
-      IF(ISAVE)90,90,56
+   55 IF(ISAVE)90,90,56
    56 WRITE (NSR)(TITLE2(I),I=1,18)
 C     ***** EXECUTE INSTRUCTION *****
    90 NJ=NF1/100
@@ -183,25 +173,11 @@
       GO TO 8
 C     ***** ANISOTROPIC TEMP FACTOR OUTPUT *****
   104 DO 164 I=1,NATOM
-      IF(MOD(I,14)-1)134,114,134
-  114 IF (NOUT.GE.0)
-     &WRITE (NOUT,6)(TITLE(J),J=1,18)
-      IF (NOUT.GE.0)
-     &WRITE (NOUT,129)
-  129 FORMAT(1H0,10X,4HATOM,3X,16HRMS DISPLACEMENT,3X,31HROW VECTORS, BA
-     1SED ON REFERENCE,17X,29HPROBABILITY COVARIANCE MATRIX)
-  134 TD=55501.D0+FLOAT(I)*100000.
+  134 TD=55501d0+dble(I)*1d5
       CALL PAXES(TD,-3)
-      IF(NG)144,154,144
+      IF(NG)144,164,144
   144 CALL ERPNT(TD,104)
-  149 FORMAT(1H0,10X,A6,F10.6,6X,3F12.7,10X,3F12.7)
-  154 IF (NOUT.GE.0)
-     &WRITE (NOUT,149)CHEM(I),RMS(1),(PAC(J,1),J=1,3),(Q(J,1)
-     1,J=1,3)
-  164 IF (NOUT.GE.0)
-     &WRITE (NOUT,159)(RMS(K),(PAC(J,K),J=1,3),(Q(J,K),J=1,3)
-     1,K=2,3)
-  159 FORMAT(1H ,16X,F10.6,6X,3F12.7,10X,3F12.7)
+  164 continue
       GO TO 8
 C     *******200 INSTRUCTIONS-PLOTTER CONTROL FUNCTIONS*******
   200 CALL F200
@@ -217,41 +193,29 @@
   351 VIEW=AIN(3)
   361 IF(AIN(4))381,381,371
   371 BRDR=AIN(4)
-  381 IF (NOUT.GE.0)
-     &WRITE (NOUT,389)XLNG(1),XLNG(2),BRDR
-  389 FORMAT(1H0,10X,11HPLOT LIMITS,F6.2,3H BY,F6.2,15H IN.  INCLUDING,
-     1F6.2,12H  IN. MARGIN)
-  391 IF (NOUT.GE.0)
-     &WRITE (NOUT,399)VIEW
-  399 FORMAT(1H ,10X,13HVIEW DISTANCE,F7.3,7H INCHES)
+  381 continue
+  391 continue
       GO TO 8
 C     *******LEGEND ROTATION*******
   302 THETA=AIN(1)
-      T1=THETA*.01745329252
+      T1=AIN(1)*1.745329252d-2
       COSTH=COS(T1)
       SINTH=SIN(T1)
       DO 312 J=1,9
-  312 SYMB(J,1)=0.
+  312 SYMB(J,1)=0d0
       SYMB(1,1)=COSTH
       SYMB(2,2)=COSTH
-      SYMB(3,3)=1.
+      SYMB(3,3)=1d0
       SYMB(2,1)=SINTH
       SYMB(1,2)=-SINTH
-      IF (NOUT.GE.0)
-     &WRITE (NOUT,319)THETA
-  319 FORMAT(1H0,10X,44HREGULAR TITLE AND SYMBOL ROTATION IN DEGREES,
-     1F8.2)
       GO TO 8
 C     ***** RETRACE DISPLACEMENT *****
   303 DISP=AIN(1)
-      IF (NOUT.GE.0)
-     &WRITE (NOUT,313)DISP
-  313 FORMAT(1H0,10X,22HRETRACE DISPLACEMENT =,F7.4,5H INCH)
       GO TO 8
 C     ***** change resolution (smoothness) of ellipses *****
-  304 res(1)=AIN(1)*.75
-      res(2)=.5*res(1)
-      res(3)=.25*res(2)
+  304 res(1)=AIN(1)*.75d0
+      res(2)=.5d0*res(1)
+      res(3)=.25d0*res(2)
       GO TO 8
 C     *******400 INSTRUCTIONS-ATOM LIST FUNCTIONS*******
   400 GO TO (401,401,401,401,401,401,401,490, 94,410,
@@ -259,69 +223,40 @@
   401 CALL F400
       GO TO 490
   410 LATM=0
-      DO 420 I=1,500
-      ATOMID(I)=0.
+      DO 420 I=1,2500
+      ATOMID(I)=0d0
       DO 420 J=1,3
-  420 ATOMS(J,I)=0.
-  490 IF(LATM)8,8,491
-  491 IF (NOUT.GE.0)
-     &WRITE (NOUT,499)(ATOMID(I),I=1,LATM)
-  499 FORMAT(1H0,10X,23HCONTENTS OF ATOMS ARRAY/(15X,10F10.0))
+  420 ATOMS(J,I)=0d0
+  490 continue
       GO TO 8
 C     *******500 INSTRUCTIONS-CARTESIAN COORDINATE SYSTEM FUNCTIONS*******
   500 CALL F500
-      IF (NOUT.GE.0)
-     &WRITE  (NOUT,503)(ORGN(J),J=1,3)
-  503 FORMAT(1H0,10X,    44HORIGIN FOR PROJECTION AXIS IN CRYSTAL COORD.
-     1,3F15.6)
-      IF(NJ3-3)507,539,504
+      IF(NJ3-3)507,507,504
   504 IF(NJ3-6)601,507,601
-  507 IF (NOUT.GE.0)
-     &WRITE (NOUT,529)
-      IF (NOUT.GE.0)
-     &WRITE (NOUT,519)((REFV(J,I),I=1,3),(AAREV(J,I),I=1,3),J
-     1=1,3)
-      GO TO 8
-  509 FORMAT(1H0,10X,49HORTHONORMAL WORKING VECTORS BASED ON CRYSTAL AXE
-     1S,18X,33HPOST-FACTOR TRANSFORMATION MATRIX/16X,8HX VECTOR,8X,8HY V
-     2ECTOR,8X,8HZ VECTOR)
-  519 FORMAT(1H ,10X,3E16.7,8X,3E16.7)
-  529 FORMAT(1H0,10X,51HORTHONORMAL REFERENCE VECTORS BASED ON CRYSTAL A
-     1XES,16X,33HPOST-FACTOR TRANSFORMATION MATRIX/16X,8HX VECTOR,8X,8HY
-     2 VECTOR,8X,8HZ VECTOR)
-  539 IF (NOUT.GE.0)
-     &WRITE (NOUT,509)
-      IF (NOUT.GE.0)
-     &WRITE (NOUT,519)((WRKV(J,I),I=1,3),(AAWRK(J,I),I=1,3),J
-     1=1,3)
-      GO TO 8
+  507 GO TO 8
 C     *******600 INSTRUCTIONS-PLOT CENTERING FUNCTIONS*******
   600 CALL F600
-  601 IF (NOUT.GE.0)
-     &WRITE (NOUT,609)XO(1),XO(2),SCAL1,SCAL2
-  609 FORMAT(1H0,10X,31HORIGIN POINT IN PLOTTER COORD.(,F6.2,2H ,,F6.2,8
-     1H ) IN.  / 11X,15HOVERALL SCALE =,F6.3,32H INCH/ANGSTROM ELLIPSOID
-     2 SCALE =,F6.3)
+  601 continue
       GO TO 391
 C     *******700 INSTRUCTIONS-ELLIPSOID AND SYMBOL PLOT FUNCTIONS*******
 C     ********FILL OUT DETAILS FOR SPECIAL MODELS********
   700 GO TO (701,702,704,705,709,7006,94),NJ3
- 7006 AIN(3)=1.
+ 7006 AIN(3)=1d0
       GO TO 703
-  701 AIN(3)=8.
+  701 AIN(3)=8d0
       GO TO 703
-  702 AIN(3)=0.
-  703 AIN(1)=4.
-      AIN(2)=0.
-      AIN(4)=0.
+  702 AIN(3)=0d0
+  703 AIN(1)=4d0
+      AIN(2)=0d0
+      AIN(4)=0d0
       GO TO 709
-  704 AIN(1)=3.
-      AIN(2)=-5.
+  704 AIN(1)=3d0
+      AIN(2)=-5d0
       GO TO 706
-  705 AIN(1)=1.
-      AIN(2)=0.
-  706 AIN(3)=1.
-      AIN(4)=5.
+  705 AIN(1)=1d0
+      AIN(2)=0d0
+  706 AIN(3)=1d0
+      AIN(4)=5d0
   709 CALL F700
       GO TO 8
 C     *******800 INSTRUCTIONS-BOND FUNCTIONS*******
@@ -345,43 +280,49 @@
  1104 REWIND NSR
       GO TO 8
  3000 CALL EXITNG(NG)
+      stop
+ 9997 format(/' "',a,'" does not exist'/)
+ 9998 write (0,9997) filename(1:namelen)
+      stop 1
+ 9999 write (0,'("Error: cannot open input file ", A)') 
+     1 filename(1:namelen)
+      stop 2
       END
       FUNCTION ARCCOS(X)
 C     ARCCOS(X) IN DEGREES
-      IF(1.0-ABS(X))1,2,2
-    1 X=SIGN(1.0,X)
+      implicit integer (I-N), double precision(A-H, O-Z)
+      IF(ABS(X).gt.1d0) X=SIGN(1d0,X)
     2 IF(X)3,4,5
-    3 ARCCOS=180.0+ATAN(SQRT(1.0-X*X)/X)*57.29577951
+    3 ARCCOS=180d0+ATAN(SQRT(1d0-X*X)/X)*57.29577951d0
       GO TO 6
-    4 ARCCOS=90.0
+    4 ARCCOS=90d0
       GO TO 6
-    5 ARCCOS=ATAN (SQRT(1.0-X*X)/X)*57.29577951
+    5 ARCCOS=ATAN(SQRT(1d0-X*X)/X)*57.29577951d0
     6 RETURN
       END
       SUBROUTINE ATOM(QA,Z)
 C     ATOM COORDINATE SUBROUTINE
-      REAL*8 QA,TA,D100K
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION X(3),Z(3)
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
       CHARACTER*8 CHEM
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
-      INTEGER*2 IDENT
-      COMMON /PARMS/ CHEM(505),EV(3,505),P(3,505),PA(3,3,505)        
-     1 ,IDENT(2,505),MAXATM
-      D100K=100000.0
-      K=QA/D100K      
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
+      CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
+      COMMON /PARMS/ EV(3,2525),P(3,2525),PA(3,3,2525),IDENT(2,2525),
+     1 MAXATM
+      COMMON /PARMSA/ CHEM(2525)
+      D100K=1d5
+      K=int(QA/D100K)
       IF(K)109,109,117
-  109 X(1)=0.0
-      X(2)=0.0
-      X(3)=0.0
+  109 X(1)=0d0
+      X(2)=0d0
+      X(3)=0d0
       GO TO 125
   117 IF(K-NATOM)119,119,503
   503 NG=5
@@ -389,7 +330,7 @@
   119 DO 123 J=1,3
   123 X(J)=P(J,K)
   125 TA=DABS(QA)
-      KSYM=DMOD(TA,D100K)
+      KSYM=int(DMOD(TA,D100K))
       KT=KSYM/100
       KS=KSYM-100*KT
       IF(KS-NSYM)203,203,403
@@ -412,9 +353,9 @@
       K=KT-100*K1
       K2=K/10
       K3=K-10*K2
-      Z(1)=Z(1)+FLOAT(K1-5)
-      Z(2)=Z(2)+FLOAT(K2-5)
-      Z(3)=Z(3)+FLOAT(K3-5)
+      Z(1)=Z(1)+dble(K1-5)
+      Z(2)=Z(2)+dble(K2-5)
+      Z(3)=Z(3)+dble(K3-5)
   325 RETURN
       END
       SUBROUTINE AXEQB(A1,X,B1,JJJ)
@@ -422,6 +363,7 @@
 C     ***** USES METHOD OF TRIANGULAR ELIMINATION *****
 C     ***** B AND X HAVE DIMENSIONS (3,JJJ),A IS ALWAYS (3,3)
 C     ***** TO INVERT A MAKE B 3 BY 3 IDENITY MATRIX *****
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION A1(3,3),A(3,3),B(3,3),B1(3,3),X(3,3)
       NV=JJJ
 C     ***** TRANSFER DATA *****
@@ -432,7 +374,7 @@
     2 A(I,J)=A1(I,J)
 C     ***** TRIANGULARIZE MATRIX A *****
       DO 17 I=1,2
-      S=0.0
+      S=0d0
       DO 4 J=I,3
       R=ABS(A(J,I))
       IF(R-S)4,3,3
@@ -454,7 +396,7 @@
       DO 16 J=IPO,3
       IF(A(J,I))12,16,12
    12 S=A(J,I)/TEM
-      A(J,I)=0.0
+      A(J,I)=0d0
       DO 13 K=IPO,3
    13 A(J,K)=A(J,K)-A(I,K)*S
       DO 15 K=1,NV
@@ -464,7 +406,7 @@
 C     ***** MODIFY SINGULAR MATRIX *****
       DO 20 I=1,3
       IF(A(I,I))20,19,20
-   19 A(I,I)=AMAX1(1.E-25,AMAX1(A(1,1),A(2,2),A(3,3))*1.E-15)
+   19 A(I,I)=dmax1(1d-25,dmax1(A(1,1),A(2,2),A(3,3))*1d-15)
    20 CONTINUE
       DO 24 K=1,NV
       DO 24 I=1,3
@@ -484,15 +426,16 @@
 C     *****IABS(ITYPE)=1 W(1)=U,W(2)=(UXV),W(3)=UX(UXV) *****
 C     *****IABS(ITYPE)=2 W(1)=U,W(2)=(UXV)XU,W(3)=(UXV) *****
 C     ***** ITYPE=0 W(1)=A,W(2)=(AXB)XA,W(3)=(AXB), ABC=CELL VECTORS ***
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION U(3),V(3),W(3,3),X(3,3)
       IT=ITYPE
       IF(IT)115,105,115
-  105 U(1)=1.
-      U(2)=0.
-      U(3)=0.
-      V(1)=0.
-      V(2)=1.
-      V(3)=0.
+  105 U(1)=1d0
+      U(2)=0d0
+      U(3)=0d0
+      V(1)=0d0
+      V(2)=1d0
+      V(3)=0d0
   115 DO 125 J=1,3
   125 W(J,1)=U(J)
       IF(IABS(IT)-1)145,135,145
@@ -510,31 +453,30 @@
       RETURN
       END
       SUBROUTINE BOND(Z1,Z2,NB,NA1,NA2)
-      REAL*8 Z1,Z2,WD(2),TD,D100,D1000,D100K
-      DIMENSION B1(3,3),E(3,3),S(3,3),U(3,3),VUE(3)
-      DIMENSION V7(3),W(13,2),Z(3),RESB(2),r(3)
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
+      implicit integer (I-N), double precision(A-H, O-Z)
+      DIMENSION B1(3,3),E(3,3),r(3),S(3,3),U(3,3),VUE(3),WD(2)
+      DIMENSION V7(3),W(13,2),Z(3),RESB(2)
       CHARACTER*8 CHEM
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
-      INTEGER*2 IDENT           
-      COMMON /PARMS/ CHEM(505),EV(3,505),P(3,505),PA(3,3,505)        
-     1 ,IDENT(2,505),MAXATM
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
+      CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
+      COMMON /PARMS/ EV(3,2525),P(3,2525),PA(3,3,2525),IDENT(2,2525),
+     1 MAXATM
+      COMMON /PARMSA/ CHEM(2525)
 C     ***** OBTAIN POSITIONAL PARAMETERS *****
-      DATA RESB/.2,.08/
-      D100=100.
-      D1000=1000.
-      D100K=100000. 
+      DATA RESB/2d-1,8d-2/
+      D100=1d2
+      D1000=1d3
+      D100K=1d5
       NG1=0
       DO 105 J=1,26
-  105 W(J,1)=0.
+  105 W(J,1)=0d0
       WD(1)=Z1
       WD(2)=Z2
       DO 135 I=1,2
@@ -542,24 +484,16 @@
       IF(NG)125,110,125
   110 DO 115 J=1,3
   115 W(J+6,I)=XT(J)
-      K=WD(I)/D100K  
-      L=DMOD(WD(I)/D100,D1000)
-      L1=DMOD(WD(I),D100)
+      K=int(WD(I)/D100K)
+      L=int(DMOD(WD(I)/D100,D1000))
+      L1=int(DMOD(WD(I),D100))
       CALL PLTXY(W(4,I),W(2,I))
-      IF(EDGE-BRDR*.25)120,128,128
+      IF(EDGE-BRDR*.25d0)120,128,128
   120 NG=10
   125 NG1=1
-      IF (NOUT.GE.0)
-     &WRITE(NOUT,136)CHEM(K),K,L,L1,(W(J,I),J=2,9)
       CALL ERPNT(WD(I),800)
-      GO TO 134
-  128 IF(NJ2-10)130,134,134
-  130 IF (NOUT.GE.0)
-     &WRITE(NOUT,136)CHEM(K),K,L,L1,(W(J,I),J=2,9)
-  134 continue
+  128 continue
   135 CONTINUE
-  136 FORMAT(1H ,10X,A6,3H  (,I3,1H,,I3,I2,4H)   ,2F8.2,5X,3F8.3,13X,
-     13F8.4)
       IF(NG1)999,137,999
   137 CALL DIFV(W(7,1),W(7,2),V7)
       DIST=SQRT(VMV(V7,AA,V7))
@@ -567,14 +501,14 @@
       IF(MOD(NJ2,10).EQ.1) GO TO 143
 c *** Line bonds with NO symbol on atom position (803,813)
       if (iabs(kd(5,nb)).ge.1) then
-         call draw(W(2,1),0.,0.,3)
-         call draw(W(2,2),0.,0.,2)
+         call draw(W(2,1),0d0,0d0,3)
+         call draw(W(2,2),0d0,0d0,2)
          go to 570
       end if
 C *** LINE BONDS AND CENTERED SYMBOLS (803,813) 
-      HGT=SCL*.12
-      CALL SIMBOL(W(2,1),W(3,1),HGT,' ',0.,-1)
-      CALL SIMBOL(W(2,2),W(3,2),HGT,' ',0.,-2)
+      HGT=SCL*.12d0
+      CALL SIMBOL(W(2,1),W(3,1),HGT,' ',0d0,-1)
+      CALL SIMBOL(W(2,2),W(3,2),HGT,' ',0d0,-2)
       GO TO 570
 C     ***** STICK BONDS FOR 801,802,811,812 *****
   143 KODE=KD(5,NB)
@@ -595,8 +529,8 @@
   146 NBND=128/2**KODE
 C     ***** FIND UPPERMOST ATOM PUT IN POSITION ONE *****
   148 IF(VIEW)152,150,152
-  150 W(12,1)=1.
-      W(12,2)=1.
+  150 W(12,1)=1d0
+      W(12,2)=1d0
       IF(W(6,1)-W(6,2))165,175,175
 C     *****VECTOR FROM ATOM TO VIEWPOINT *****
   152 DO 160 I=1,2
@@ -616,34 +550,34 @@
       WD(2)=TD
 C     ***** FORM IDEMFACTOR MATRIX *****
   175 DO 180 J=1,3
-      E(J,J)=1.
-      E(J+1,1)=0.
-  180 E(J+5,1)=0.
+      E(J,J)=1d0
+      E(J+1,1)=0d0
+  180 E(J+5,1)=0d0
 C     ***** FORM VECTOR SET RADIAL TO BOND *****
       CALL DIFV(W(4,2),W(4,1),DA(1,3))
       CALL UNITY(DA(1,3),V3,1)
 C     ***** UNIT VECTOR FROM BOND MIDPOINT TO REFERENCE VIEWPOINT *****
       DO 183 I=1,3
-      V2(I)=0.0
+      V2(I)=0d0
       DO 181 J=1,3
   181 V2(I)=V2(I)+AAREV(J,3)*WRKV(J,I)
       IF(VIEW)183,183,182
-  182 V2(I)=V2(I)*VIEW-0.5*(W(I+3,1)+W(I+3,2))
+  182 V2(I)=V2(I)*VIEW-0.5d0*(W(I+3,1)+W(I+3,2))
   183 CONTINUE
       CALL UNITY(V2,V2,1)
       T6=ABS(VV(V3,V2))
-      IF(.9994-T6)185,185,187
+      IF(.9994d0-T6)185,185,187
 C     ***** ALTERNATE CALC IF BOND IS ALONG REFERENCE VIEW DIRECTION ***
   185 DO 186 J=1,3
   186 V2(J)=W(J+9,1)+W(J+9,2)
       CALL UNITY(V2,V2,1)
       T6=ABS(VV(V3,V2))
-      IF(.9994-T6)390,390,187
+      IF(.9994d0-T6)390,390,187
   187 CALL AXES(V3,V2,B1,1)
   188 T1=CD(3,NB)/SCAL2
       DO 190 J=1,3
-      DA(J,1)=-B1(J,2)*T1
-  190 DA(J,2)=-B1(J,3)*T1
+      DA(J,1)=-(B1(J,2)*T1)
+  190 DA(J,2)=-(B1(J,3)*T1)
       IF(NBND)500,500,195
 C     ***** SET PLOTTING RESOLUTION FOR BOND *****
   195 T1=CD(3,NB)*SCL
@@ -666,19 +600,19 @@
   210 T1=3-II*2
       DO 212 J=1,3
       V3(J)=V3(J)*T1
-  212 VUE(J)=0.
+  212 VUE(J)=0d0
       IF(KD(5,NB))260,260,215
   215 IF(VMV(V3,Q,W(10,II)))220,260,260
   220 IBND=0
       IF(VIEW)240,240,225
 C     ***** DERIVE TANGENT CONE DIRECTLY WITHOUT ROTATING COORDINATES **
-  225 T2=-(SCAL2*RMS(1)*RMS(2)*RMS(3))**2
+  225 T2=-((SCAL2*RMS(1)*RMS(2)*RMS(3))**2)
       DO 230 J=1,3
-      V1(J)=-W(J+9,II)/SCAL1
+      V1(J)=-(W(J+9,II)/SCAL1)
       VUE(J)=V1(J)/SCAL2
 C     ***** INVERT ELLIPSOID MATRIX *****
       DO 230 K=J,3
-      T1=0.0
+      T1=0d0
       DO 228 I=1,3
   228 T1=T1+PAC(J,I)*PAC(K,I)*RMS(I)**2
       U(J,K)=T1
@@ -695,27 +629,27 @@
       S(J,K)=T2*Q(J,K)+(VJ2*(U(J1,K1)*V1(K2)-U(J1,K2)*V1(K1))
      1                + VJ1*(U(J2,K2)*V1(K1)-U(J2,K1)*V1(K2)))
   235 S(K,J)=S(J,K)
-      T5=0.0
+      T5=0d0
       GO TO 300
 C     ***** DERIVE TANGENT CYLINDER WITH AXIS ALONG Z *****
-  240 T1=-1.0/Q(3,3)
+  240 T1=-(1d0/Q(3,3))
       DO 250 J=1,2
       DO 245 K=1,2
   245 S(K,J)=Q(K,J)+Q(K,3)*Q(J,3)*T1
-      S(3,J)=0.0
-  250 S(J,3)=0.0
-      S(3,3)=0.0
+      S(3,J)=0d0
+  250 S(J,3)=0d0
+      S(3,3)=0d0
       GO TO 270
 C     ***** TRANSFER ELLIPSOID *****
   260 DO 265 J=1,9
   265 S(J,1)=Q(J,1)
       IBND=II
-  270 T5=1.
+  270 T5=1d0
 C     ***** CHECK FOR BOND TAPER *****
   300 IF(II-2)305,310,310
-  305 RADIUS=1.+T6*TAPER
+  305 RADIUS=1d0+T6*TAPER
       GO TO 320
-  310 RADIUS=1.-T6*TAPER
+  310 RADIUS=1d0-T6*TAPER
   320 CALL MV(S,V3,V4)
       T2=VV(V3,V4)
 C     ***** COMPUTE BOND INTERSECTION *****
@@ -748,7 +682,7 @@
       GO TO 999
   350 T1=(SQRT(T4)-T3)/T2
       DO 355 J=1,3
-      T4=(T1*V3(J)*SCL-0.5*(D(J,KL)+D(J,KL+64)))*1.001
+      T4=(T1*V3(J)*SCL-0.5d0*(D(J,KL)+D(J,KL+64)))*1.001d0
       D(J,KL)=D(J,KL)+T4
   355 D(J,KL+64)=D(J,KL+64)+T4
   360 CALL PROJ(D(1,KL),DP(1,II),W(4,II),XO,VIEW,1,65,KSTP)
@@ -767,8 +701,8 @@
   380 CONTINUE
 C     ***** CHECK FOR LOCAL OVERLAP OR HIDDEN BOND *****
       DO 395 K=1,65,32
-      T1=0.
-      T2=0.
+      T1=0d0
+      T2=0d0
       DO 385 J=1,2
       T1=T1+(DP(J,K)-W(J+1,1))**2
   385 T2=T2+(DP(J,K+1)-W(J+1,1))**2
@@ -783,36 +717,36 @@
 c *** draw dashed stick bonds
       if (kdash.ne.0) then
 c        draw bond ends
-         call draw(dp(1,1),0.,0.,3)
+         call draw(dp(1,1),0d0,0d0,3)
          do 406 k=nres1,129,nresol
-  406    call draw(dp(1,k),0.,0.,2)
-         call draw(dp(1,2),0.,0.,3)
+  406    call draw(dp(1,k),0d0,0d0,2)
+         call draw(dp(1,2),0d0,0d0,3)
          do 408 k=2,66,nresol
-  408    call draw(dp(1,k),0.,0.,2)
+  408    call draw(dp(1,k),0d0,0d0,2)
 c        draw dashed parts
-         r(3)=0.
+         r(3)=0d0
          sdash=kdash/10
          fract=mod(kdash,10)
-         if (fract.eq.0.) fract=5.
+         if (fract.eq.0d0) fract=5d0
          do 410 k=1,65,64
             x1=dp(1,k+1)
             y1=dp(2,k+1)
             x2=dp(1,k)
             y2=dp(2,k)
-            denom=sdash*fract+(sdash-1.)*(10.-fract)
+            denom=sdash*fract+(sdash-1d0)*(10d0-fract)
             ddx=(x2-x1)/denom
             ddy=(y2-y1)/denom
-            call draw(dp(1,k+1),0.,0.,3)
-            npart=2.*sdash-1.
+            call draw(dp(1,k+1),0d0,0d0,3)
+            npart=2d0*sdash-1d0
             do 410 j=1,npart
                if (mod(j,2).eq.1) then
                   r(1)=x1+ddx*fract
                   r(2)=y1+ddy*fract
-                  call draw(r,0.,0.,2)
+                  call draw(r,0d0,0d0,2)
                else
-                  r(1)=x1+ddx*(10.-fract)
-                  r(2)=y1+ddy*(10.-fract)
-                  call draw(r,0.,0.,3)
+                  r(1)=x1+ddx*(10d0-fract)
+                  r(2)=y1+ddy*(10d0-fract)
+                  call draw(r,0d0,0d0,3)
                end if
                x1=r(1)
                y1=r(2)
@@ -821,22 +755,22 @@
       end if      
 c *** draw non-dashed stick bonds
 C     ***** DRAW BOND OUTLINE *****
-      CALL DRAW(DP(1,1),0.,0.,3)
+      CALL DRAW(DP(1,1),0d0,0d0,3)
       DO 415 K=NRES1,129,NRESOL
-  415 CALL DRAW(DP(1,K),0.,0.,2)
+  415 CALL DRAW(DP(1,K),0d0,0d0,2)
       DO 420 K=2,66,NRESOL
-  420 CALL DRAW(DP(1,K),0.,0.,2)
-      CALL DRAW(DP(1,65),0.,0.,2)
+  420 CALL DRAW(DP(1,K),0d0,0d0,2)
+      CALL DRAW(DP(1,65),0d0,0d0,2)
 C     ***** DRAW BOND DETAIL *****
   425 K=65
   430 K=K-NBND
       IF(K-1)500,500,435
-  435 CALL DRAW(DP(1,K),0.,0.,3)
-      CALL DRAW(DP(1,K+1),0.,0.,2)
+  435 CALL DRAW(DP(1,K),0d0,0d0,3)
+      CALL DRAW(DP(1,K+1),0d0,0d0,2)
       K=K-NBND
       IF(K-1)500,500,440
-  440 CALL DRAW(DP(1,K+1),0.,0.,3)
-      CALL DRAW(DP(1,K),0.,0.,2)
+  440 CALL DRAW(DP(1,K+1),0d0,0d0,3)
+      CALL DRAW(DP(1,K),0d0,0d0,2)
       GO TO 430
 
   500 HGT=CD(4,NB)
@@ -849,17 +783,17 @@
       CALL VM(V7,AAREV,V1)
       CALL AXES(V1,E(1,3),U,1)
       DO 535 I=1,3
-      T1=1.
+      T1=1d0
       IF(I-2)515,515,520
   515 IF(VV(U(1,I),SYMB(1,I)))525,530,530
   520 IF(MOD(K,2))530,525,530
-  525 T1=-1.
+  525 T1=-1d0
       K=K+1
   530 DO 535 J=1,3
       U(J,I)=U(J,I)*T1
   535 VT(J,I)=B1(J,I)*T1
       DO 540 J=1,3
-  540 VT(J,4)=.5*(W(J+3,1)+W(J+3,2))
+  540 VT(J,4)=.5d0*(W(J+3,1)+W(J+3,2))
 C     ***** CHECK FOR EXCESS FORESHORTENING *****
       IF(FORE-ABS(U(3,1)))545,550,550
   545 CALL NORM(U(1,2),SYMB(1,3),VT(1,1),1)
@@ -870,20 +804,17 @@
       OFF=CD(7,NB)
       IF(HGT)550,999,550
   550 T1=CD(8,NB)
-      Z(1)=VT(1,4)-HGT*(11.+3.*T1)/7.
-      Z(2)=VT(2,4)+OFF-HGT*.5
+      Z(1)=VT(1,4)-HGT*(11d0+3d0*T1)/7d0
+      Z(2)=VT(2,4)+OFF-HGT*.5d0
       Z(3)=VT(3,4)
       XO(3)=Z(3)
       ITILT=1
-      I9=T1+2.
-      T9=10.**I9
-      DISTR=AINT((DIST*T9)+0.5)/T9 +.0001
-      CALL NUMBUR(Z(1),Z(2),HGT,DISTR,0.,I9)
+      I9=T1+2d0
+      T9=(10d0)**I9
+      DISTR=AINT((DIST*T9)+0.5d0)/T9 +.0001d0
+      CALL NUMBUR(Z(1),Z(2),HGT,DISTR,0d0,I9)
   570 ITILT=0
-      IF(NJ2-10)580,999,999
-  580 IF (NOUT.GE.0)
-     &WRITE (NOUT,571)DIST
-  571 FORMAT(1H ,59X,10HDISTANCE =,F8.3/1H )
+  580 continue
       GO TO 999
   390 NG=14
       CALL ERPNT(WD(2),800)
@@ -892,24 +823,24 @@
       SUBROUTINE DIFV(X,Y,Z)
 C     VECTOR - VECTOR
 C     Z(3)=X(3)-Y(3)
-      DIMENSION X(3),Y(3),Z(3)
+      double precision X(3),Y(3),Z(3)
       Z(1)=X(1)-Y(1)
       Z(2)=X(2)-Y(2)
       Z(3)=X(3)-Y(3)
       RETURN
       END
       SUBROUTINE DRAW(W,DX,DY,NPEN)
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION W(3),X(3),Y(3),Z(3)
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
+      CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
       Y(1)=W(1)+DX
       Y(2)=W(2)+DY
       IF(ITILT)115,140,115
@@ -922,10 +853,10 @@
       CALL PLTXY(X,Y)
 C     ***** CHECK BOUNDRY *****
   140 DO 160 J=1,2
-      IF(Y(J)-XLNG(J)+.1)150,150,145
-  145 Y(J)=XLNG(J)-.1
-  150 IF(Y(J)-.1)155,160,160
-  155 Y(J)=.1
+      IF(Y(J)-XLNG(J)+.1d0)150,150,145
+  145 Y(J)=XLNG(J)-.1d0
+  150 IF(Y(J)-.1d0)155,160,160
+  155 Y(J)=.1d0
   160 CONTINUE
 C     ***** CHECK FOR OVERLAP *****
       NCQ=0
@@ -935,214 +866,22 @@
   165 CALL SCRIBE(Y,NPEN)
   170 RETURN
       END
-      SUBROUTINE EDITR
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
-      CHARACTER*8 CHEM
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
-     2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
-      INTEGER*2 IDENT           
-      COMMON /PARMS/ CHEM(505),EV(3,505),P(3,505),PA(3,3,505)        
-     1 ,IDENT(2,505),MAXATM
-      COMMON /QUEUE/ NED,NQUE,NEXT,NBACK,INQ,QUE(96),hque(96)
-      common /ns/ npf,ndraw,norient,nvar
-      CHARACTER*73 INQ,QUE,hque,tline
-      character*80 answer,card
-      CHARACTER*1 CH 
-   10 FORMAT(6X,'         1111111111222222222233333333334444444444555',
-     *'55555556666666666777',/,1x,'LINE',1x,'1234567890123456789012345',
-     *'67890123456789012345678901234567890123456789012')
-      NUM=1
-C *** PRINT PART OR ALL OF COMMAND QUE ***
-      NUM1=MAX0(1,NUM-2)
-  100 WRITE(*,103)
-  103 FORMAT(1X)
-      WRITE(*,111)(J,QUE(J),J=NUM1,NQUE)
-  111 FORMAT(1X,I3,2X,A72)
-C *** DISPLAY PROMPT ***
-  115 WRITE(*,121)  
-  121 FORMAT(/,' C=Change line #                         D=Delete line(s
-     &) # [#]',/,' I=Insert line before #                  T=Type line(s
-     &) [#] [#]'
-     &,/,' S=Save modified instruction set         O=Restore original in
-     &struction set'
-     &,/,' P=Save drawing as Postscript            H=Save drawing as HPG
-     &L'
-     &,/,' R=Redraw structure on screen            Q=Quit',/,' >-> ',$)
-C *** READ COMMAND CHARACTER AND LINE NUMBER(S) *** 
-      read(*,131)answer
-  131 format(a)
-      if (answer(1:1).eq.' ') go to 133
-      if (answer(1:1).ge.'1' .and. answer(1:1).le.'9') go to 133
-      last=iend(answer)
-      do 132 i=2,last
-         ch=answer(i:i)
-         if ((ch.ge.'a'.and.ch.le.'z') .or.
-     *       (ch.ge.'A'.and.ch.le.'Z')) go to 133
-         ich=ichar(ch)-48
-         if ((ch.ne.' ') .and. ((ich.lt.0) .or. (ich.gt.9))) go to 133
-  132 continue
-      go to 135
-  133 write(*,134)
-  134 format (/,'***INVALID INPUT! Enter 1 letter and 0, 1, or 2 integer
-     *s separated by spaces.***')
-      go to 115
-  135 answer=answer(1:last)//' 0 0'
-c     read(answer,*)ch,num,num2
-      open(15,status='scratch')
-      write(15,136) answer(1:1),answer(2:75)
-  136 format('''',a1,'''',1x,a)
-      rewind(15)
-      read(15,*)ch,num,num2
-      close(15)
-      numz=num
-      NUM=MAX0(1,NUM)
-      if (num2.gt.nque) then
-         write(*,137)
-  137    format (/,'*** value out of range ***')
-         go to 115
-      end if
-      IF(NUM.GT.NUM2) NUM2=NUM
-      write(6,*) ' '
-      IF(CH.EQ.'T'.or.ch.eq.'t') GO TO 210 
-      IF(CH.EQ.'D'.or.ch.eq.'d') GO TO 240 
-      IF(CH.EQ.'C'.or.ch.eq.'c') GO TO 270 
-      IF(CH.EQ.'I'.or.ch.eq.'i') GO TO 310 
-      IF(CH.EQ.'O'.or.ch.eq.'o') GO TO 410
-      IF(CH.EQ.'S'.or.ch.eq.'s') GO TO 420
-      IF(CH.EQ.'R'.or.ch.eq.'r') GO TO 540
-      IF(CH.EQ.'Q'.or.ch.eq.'q') GO TO 590
-      IF(CH.EQ.'P'.or.ch.eq.'p') GO TO 510
-      IF(CH.EQ.'H'.or.ch.eq.'h') GO TO 520
-      GO TO 115 
-C *** TYPE LINES ***
-  210 if (numz.eq.0) num2=nque
-      WRITE(*,10)
-      WRITE(*,111)(J,QUE(J),J=NUM,NUM2)
-      GO TO 115
-C *** DELETE LINES ***
-  240 if (numz.eq.0) then
-         write(6,*) ' *** Supply line number(s) with command ***'
-         go to 115
-      end if
-      DO 260 I=NUM,NUM2
-      NQUE=NQUE-1
-      NEXT=NEXT-1
-      DO 250 J=NUM,NQUE
-  250 QUE(J)=QUE(J+1)
-  260 QUE(NQUE+1)= '                        '
-      GO TO 100
-C *** CHANGE AN OLD LINE ***
-  270 if (numz.eq.0) then
-         write(6,*) ' *** Supply line number with command ***'
-         go to 115
-      end if
-c     NUM3=MAX0(1,NUM-3) 
-c     WRITE(*,111)(J,QUE(J),J=NUM3,NUM)
-      write(*,271)
-  271 format(' *** NOTE: Type @ to substitute a space in the original li
-     &ne. ***',/)
-      WRITE(*,10)
-      WRITE(*,111)NUM,QUE(NUM)
-      WRITE(*,276)NUM
-  276 FORMAT(1X,I3,'  ',$)
-      read(*,281) tline
-  281 FORMAT(A72)
-      do 282 i=1,72
-         if (tline(i:i).ne.' ') then
-            if (tline(i:i).eq.'@') then
-               que(num)(i:i)=' '
-            else 
-               que(num)(i:i)=tline(i:i)
-            end if
-         end if
-  282 continue
-      write(*,283)
-  283 format(/,'      Line now reads:')
-      WRITE(*,284)QUE(NUM)
-  284 format(6x,a)
-      write(*,285)
-  285 format(/,' Hit ENTER or RETURN key ',$)
-      read(*,131) CH
-      GO TO 100
-C *** INSERT A NEW LINE ***
-  310 if (numz.eq.0) then
-         write(6,*) ' *** Supply line number with command ***'
-         go to 115
-      end if
-      IF(NQUE+1 .GT. 96) GO TO 115
-      NQUE=NQUE+1
-      NN=NQUE  
-      N=NQUE-NUM
-      DO 320 J=1,N      
-      QUE(NN)=QUE(NN-1)
-  320 NN=NN-1     
-      NUM4=MAX0(1,NUM-4)
-      NUM1=MAX0(1,NUM-1)
-      write(*,10)
-      WRITE(*,111)(J,QUE(J),J=NUM4,NUM1)
-      WRITE(*,276)NUM
-      READ(*,281) QUE(NUM)
-      NEXT=NEXT+1
-      GO TO 100
-C *** RETRIEVE OLD SET OF INSTRUCTIONS ***
-  410 DO 415 J=1,NBACK
-  415 que(j)=hque(j)
-      NUM=1
-      NUM1=1
-      NQUE=NBACK
-      NUM2=NQUE
-      GO TO 100
-C *** SAVE CURRENT SET OF INSTRUCTIONS ***
-  420 CONTINUE
-  421 write (*,422)
-  422 format(' Enter file name:  ',$)
-      read (*,131) answer
-      open (16,file=answer,status='new',err=460)
-      rewind(NED)
-  430 read (NED,131,end=440) card
-      write (16,131) card(1:iend(card))
-      go to 430
-  440 WRITE(16,450)(QUE(I),I=1,NQUE) 
-  450 FORMAT(A73)
-      close(16)
-      GO TO 115
-  460 write(6,*) 'File already exists.  Choose a different name.'
-      go to 421
-C *** SAVE PICTURE AS POSTSCRIPT***
-  510 ndraw=2
-      go to 541
-C *** SAVE PICTURE AS HPGL***
-  520 ndraw=3
-      go to 541
-C *** REDRAW PICTURE ***
-  540 ndraw=1
-c *** default instruction save
-  541 open (16,file='TEP.NEW',status='unknown')
-      rewind(NED)
-  542 read (NED,131,end=543) card
-      write (16,131) card(1:iend(card))
-      go to 542
-  543 WRITE(16,450)(QUE(I),I=1,NQUE) 
-      close(16)
-      call recycle
-  590 RETURN
-      END
       SUBROUTINE EIGEN (W,VALU,VECT)
 C     ***** EIGENVALUES AND EIGENVECTORS OF 3X3 MATRIX *****
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION W(3,3),VALU(3),VECT(3,3),A(3,3),B(3,3),V(3),U(3)
-      COMMON NG
+      COMMON ATX(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
+     2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
 C     ***** STATEMENT FUNCTION *****
       PHIF(Z)=((B2-Z)*Z+B1)*Z+B0
 C     ***** START OF PROGRAM *****
-      ERRND=5.E-7
-      SIGMA=0.
+      ERRND=5d-7
+      SIGMA=0d0
       DO 115 J=1,3
       DO 115 I=1,3
       TEM=W(I,J)
@@ -1153,32 +892,33 @@
   120 SIGMA=SQRT(SIGMA)
 C     ***** FORM CHARACTERISTIC EQUATION *****
       B2=A(1,1)+A(2,2)+A(3,3)
-      B1=-A(1,1)*A(2,2)-A(1,1)*A(3,3)-A(2,2)*A(3,3)+A(1,3)*A(3,1)
-     1+A(2,3)*A(3,2)+A(1,2)*A(2,1)
-      B0=A(1,1)*A(2,2)*A(3,3)+A(1,2)*A(2,3)*A(3,1)+A(1,3)*A(3,2)*A(2,1)-
-     1A(1,3)*A(3,1)*A(2,2)-A(1,1)*A(2,3)*A(3,2)-A(1,2)*A(2,1)*A(3,3)
+      B1=-(A(1,1)*A(2,2))-(A(1,1)*A(3,3))-(A(2,2)*A(3,3))+
+     & (A(1,3)*A(3,1))+(A(2,3)*A(3,2))+(A(1,2)*A(2,1))
+      B0=(A(1,1)*A(2,2)*A(3,3))+(A(1,2)*A(2,3)*A(3,1))+
+     & (A(1,3)*A(3,2)*A(2,1))-(A(1,3)*A(3,1)*A(2,2))-
+     & (A(1,1)*A(2,3)*A(3,2))-(A(1,2)*A(2,1)*A(3,3))
 C     ***** FIRST ROOT BY BISECTION *****
-      X=0.
+      X=0d0
       Y=SIGMA
       TEM=PHIF(SIGMA)
-      VNEW=0.0
+      VNEW=0d0
       IF(B0)135,250,145
   135 IF(TEM)140,140,165
   140 Y=-Y
       GO TO 165
-  145 Y=0.
+  145 Y=0d0
       X=SIGMA
       IF(TEM)165,165,150
   150 X=-X
 C     ***** NOW PHIF(X).LT.0.AND.PHIF(Y).GT.0. *****
-  165 VNEW=(X+Y)*.5
+  165 VNEW=(X+Y)*.5d0
       DO 225 I=1,40
   175 IF(PHIF(VNEW))180,250,185
   180 X=VNEW
       GO TO 200
   185 Y=VNEW
   200 VOLD=VNEW
-      VNEW=(X+Y)*.5
+      VNEW=(X+Y)*.5d0
       TEM=ABS(VOLD-VNEW)
       IF(TEM-ERRND)250,250,205
   205 IF(VOLD)210,225,210
@@ -1193,14 +933,14 @@
       C1=B2-VNEW
       C0=B1+C1*VNEW
 C     ***** SOLVE QUADRATIC *****
-      TEM=C1*C1+4.*C0
+      TEM=C1*C1+4d0*C0
       IF(TEM)255,265,260
 C     ***** IGNORE IMAGINARY COMPONENT OF COMPLEX ROOT *****
-  255 TEM=0.
+  255 TEM=0d0
       GO TO 265
   260 TEM=SQRT(TEM)
-  265 U(1)=.5*(C1-TEM)
-      U(2)=.5*(C1+TEM)
+  265 U(1)=.5d0*(C1-TEM)
+      U(2)=.5d0*(C1+TEM)
 C     ***** SORT ROOTS *****
       DO 275 J=1,2
       IF(U(J)-U(3))275,275,270
@@ -1211,7 +951,7 @@
       LLL=-2
       DO 375 III=1,2
 C     ***** CHECK FOR MULTIPLE ROOTS *****
-      TEM=ERRND*100.
+      TEM=ERRND*1d2
       NG=0
       L=1
       DO 305 I=1,2
@@ -1231,11 +971,11 @@
   310 IF(NG+5-II)315,322,315
 C     ***** ALL VECTORS NULL FOR TRIPLE ROOT *****
   315 DO 320 J=1,3
-  320 VECT(J,II)=0.0
+  320 VECT(J,II)=0d0
       GO TO 375
   322 DO 325 J=1,3
   325 A(J,J)=W(J,J)-T1
-      SMAX=0.0
+      SMAX=0d0
       DO 355 I=1,3
       I1=1
       IF(I-2)335,335,340
@@ -1256,7 +996,7 @@
   365 V(J)=B(IMAX,J)/SMAX
 C     ***** REFINE EIGENVECTOR *****
       CALL AXEQB(A,V,V,1)
-      TEM=AMAX1(ABS(V(1)),ABS(V(2)),ABS(V(3)))
+      TEM=dmax1(ABS(V(1)),ABS(V(2)),ABS(V(3)))
       DO 370 J=1,3
   370 V(J)=V(J)/TEM
       CALL UNITY(V,VECT(1,II),1)
@@ -1267,55 +1007,28 @@
   400 RETURN
       END
       SUBROUTINE ERPNT(TD,N)
-      REAL*8 TD
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      implicit integer (I-N), double precision(A-H, O-Z)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
-      character*63 msg(16)
-      data msg /
-     1 'No sentinel found after reading 96 symmetry cards',
-     2 'No sentinel found after reading parameter cards for 100 atoms',
-     3 'Aniso temp factor coefs form non-positive definite matrix',
-     4 'Symmetry operation no. is higher than no. of input operations',      
-     5 'Atom number is higher than the number of input atoms',
-     6 'Null temp factor matrix or failure in bisection routine',
-     7 'Eigenvector routine failure due to null vector',
-     8 'Error initializing screen driver',
-     9 'Unidentified instruction number',
-     a 'Atom out of bounds',
-     b 'No vector search codes',
-     c 'Insufficient number of atoms in ATOMS list',
-     d 'Imaginary bond intersection (i.e., bond larger than atom)',
-     e 'Hidden (end-on) bond',
-     f 'Null vector as base line',
-     g 'ATOMS list is full' /
-      IF (NOUT.GE.0) then
-         WRITE (NOUT,115)NG,TD,N
-  115    FORMAT(1H ,10X,10HFAULT NG =,I3,F10.0,I6)
-         write (nout,116) msg(ng)
-  116    format(1H ,10x,a,/)
-      end if
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
       NG=0
       RETURN
       END
       SUBROUTINE EXITNG(ING)
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      implicit integer (I-N), double precision(A-H, O-Z)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
+      CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
       character*12 routin(16)
       character*63 msg(16)
       data routin /
@@ -1340,42 +1053,37 @@
      f 'Null vector as base line',
      g 'ATOMS list is full' /
       if (ng.gt.0) then
-         if (nout.gt.0) then
-            write (nout,101) ing
-            write (nout,102) routin(ing)
-            write (nout,103) msg(ing)
-         end if
-         write (*,101) ing
-         write (*,102) routin(ing)
-         write (*,103) msg(ing)
+         write (0,101) ing
+         write (0,102) routin(ing)
+         write (0,103) msg(ing)
       end if
-      IF(NOUT.GT.0) CLOSE(NOUT,STATUS='KEEP')
  101  format('Fault Indicator:  ',i2)
  102  format('Subroutine(s) Involved:  ',a)
  103  format('Fault:  ',a)
       STOP
       END
       SUBROUTINE F200
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      implicit integer (I-N), double precision(A-H, O-Z)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
-      common /ns/ npf,ndraw,norient,nvar
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
+      CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
+      common /ns/ npf,ndraw,NORIEN,nvar
       common /trfac/ xtrans,ytrans
 
 c *** NO drawing
-      if (ndraw.eq.0) return
+C     if (ndraw.eq.0) return
+
 
       go to (201,202,201,204,205), nj2
 c *** initialize plotting (201 or 203 inst) *** 
-  201 xtrans=0.
-      ytrans=0.
+  201 xtrans=0d0
+      ytrans=0d0
       if (ndraw .eq. 1) call initsc
       if (ndraw .eq. 2) call initps
       if (ndraw .eq. 3) call inithp
@@ -1385,7 +1093,7 @@
       end if
       return
 c *** change origin of plotting area or terminate (202 inst) *** 
-  202 if (ain(1) .eq. 0. .and. ain(2) .eq. 0.) then
+  202 if (ain(1) .eq. 0d0 .and. ain(2) .eq. 0d0) then
          if (ndraw .eq. 2) call endps
          if (ndraw .eq. 3) call endhp
          if (ndraw .eq. 1) call endsc
@@ -1398,7 +1106,7 @@
       end if
       return
 c *** change plot color (204 inst) *** 
-  204 icolor=ain(1)
+  204 icolor=int(ain(1))
       if (ndraw .eq. 1) call colrsc(icolor)
       if (ndraw .eq. 2) call colrps(icolor)
       if (ndraw .eq. 3) call colrhp(icolor)
@@ -1415,24 +1123,23 @@
       end
       SUBROUTINE F400
 C     ***** ATOM LIST FUNCTIONS *****
-      REAL*8 D100,D1000,D100K,TD,TD1,TD2         
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
+      implicit integer (I-N), double precision(A-H, O-Z)
       CHARACTER*8 CHEM
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
-      INTEGER*2 IDENT           
-      COMMON /PARMS/ CHEM(505),EV(3,505),P(3,505),PA(3,3,505)        
-     1 ,IDENT(2,505),MAXATM
-      D100=100. 
-      D1000=1000. 
-      D100K=100000.
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
+      CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
+      COMMON /PARMS/ EV(3,2525),P(3,2525),PA(3,3,2525),IDENT(2,2525),
+     1 MAXATM
+      COMMON /PARMSA/ CHEM(2525)
+      D100=1d2 
+      D1000=1d3 
+      D100K=1d5
       NG=0
       IF(LATM)402,402,400
   400 DO 401 I=1,LATM
@@ -1451,9 +1158,9 @@
       IF(140-II)499,405,405
   420 JJ=II
 C     ***** SET INITIAL RUN VALUES *****
-      M1=TD1/D100K  
-      M2=DMOD(TD1,D100)
-      M5=DMOD(TD1/D100,D1000)
+      M1=int(TD1/D100K)
+      M2=int(DMOD(TD1,D100))
+      M5=int(DMOD(TD1/D100,D1000))
       IF(M5)422,422,423
   422 M5=555
   423 M3=M5/100
@@ -1473,9 +1180,9 @@
       GO TO 450
   440 II=JJ
 C     ***** SET TERMINAL RUN VALUES *****
-      N1=TD2/D100K
-      N2=DMOD(TD2,D100)
-      N5=DMOD(TD2/D100,D1000)
+      N1=int(TD2/D100K)
+      N2=int(DMOD(TD2,D100))
+      N5=int(DMOD(TD2/D100,D1000))
       IF(N5)445,445,446
   445 N5=555
   446 N3=N5/100
@@ -1498,7 +1205,7 @@
       ID2=IDENT(2,L1)
       IF(NCD)490,490,465
   465 DO 470 J=1,NCD
-         if (kd(1,j).gt.0. .and. kd(3,j).gt.0.) then
+         if (kd(1,j).gt.0d0 .and. kd(3,j).gt.0d0) then
             if ((id1.ge.kd(1,j) .and. id1.le.kd(2,j)) .and.
      &          (id2.ge.kd(3,j) .and. id2.le.kd(4,j))) go to 475
          else if (kd(1,j).gt.0.) then
@@ -1506,10 +1213,6 @@
          else if (kd(3,j).gt.0.) then
             if (id2.ge.kd(3,j) .and. id2.le.kd(4,j)) go to 475
          end if
-c     IF(ID1-KD(1,J))470,467,467
-c 467 IF(KD(2,J)-ID1)470,468,468
-c 468 IF(ID2-KD(3,J))470,469,469
-c 469 IF(KD(4,J)-ID2)470,475,475
   470 CONTINUE
       GO TO 490
   475 CALL STOR(TD)
@@ -1518,37 +1221,31 @@
   499 RETURN
       END
       SUBROUTINE F500
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION RM(3,3),V(3,4),PAT1(3,3)
-      REAL*8 TD,D100,D1000,D100K
+      REAL*8 TD,D100K
       REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),ATOMS(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
-      INTEGER*2 IDENT           
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
+      CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
       CHARACTER*8 CHEM
-      COMMON /PARMS/ CHEM(505),EV(3,505),P(3,505),PA(3,3,505)        
-     1 ,IDENT(2,505),MAXATM
-      NG=0
-      D100=100.
-      D1000=1000.
-      D100K=100000.
+      COMMON /PARMS/ EV(3,2525),P(3,2525),PA(3,3,2525),IDENT(2,2525)
+     1 ,MAXATM
+      COMMON /PARMSA/ CHEM(2525)
+      D100K=1d5
       IF(NJ2-11)500,700,710
   500 IF(NJ2-1)710,501,510
   501 TD=AIN(1)
       CALL ATOM(TD,ORGN)
-      IF(NG)502,504,502
-  502 CALL ERPNT(TD,501)
-      CALL EXITNG(NG)
   504 DO 506 K=1,4
       TD=AIN(K+1)
       CALL ATOM(TD,V(1,K))
-      IF(NG)502,506,502
   506 CONTINUE
       DO 507 J=1,3
       V1(J)=V(J,2)-V(J,1)
@@ -1613,7 +1310,7 @@
       GO TO 699
   599 IF(NJ2-5)699,600,607
   600 IF(LATM-1)605,610,610
-  605 NG=12
+  605 CONTINUE
   606 CALL ERPNT(0.D0,506)
       CALL EXITNG(NG)
   607 IF(NJ2-6)699,608,710
@@ -1709,35 +1406,39 @@
       END
       SUBROUTINE F600
 C     ***** SCALING AND CENTERING FUNCTIONS *****
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION MAX(3),SCAL(4),X(3),XMAX(3),XMIN(3)
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
+      CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
       dimension crtval(99)
       data crtval /
-     1 0.3389, 0.4299, 0.4951, 0.5479, 0.5932, 0.6334, 0.6699, 0.7035,
-     2 0.7349, 0.7644, 0.7924, 0.8192, 0.8447, 0.8694, 0.8932, 0.9162,
-     3 0.9386, 0.9605, 0.9818, 1.0026, 1.0230, 1.0430, 1.0627, 1.0821,
-     4 1.1012, 1.1200, 1.1386, 1.1570, 1.1751, 1.1932, 1.2110, 1.2288,
-     5 1.2464, 1.2638, 1.2812, 1.2985, 1.3158, 1.3330, 1.3501, 1.3672,
-     6 1.3842, 1.4013, 1.4183, 1.4354, 1.4524, 1.4695, 1.4866, 1.5037,
-     7 1.5209, 1.5382, 1.5555, 1.5729, 1.5904, 1.6080, 1.6257, 1.6436,
-     8 1.6616, 1.6797, 1.6980, 1.7164, 1.7351, 1.7540, 1.7730, 1.7924,
-     9 1.8119, 1.8318, 1.8519, 1.8724, 1.8932, 1.9144, 1.9360, 1.9580,
-     a 1.9804, 2.0034, 2.0269, 2.0510, 2.0757, 2.1012, 2.1274, 2.1544,
-     b 2.1824, 2.2114, 2.2416, 2.2730, 2.3059, 2.3404, 2.3767, 2.4153,
-     c 2.4563, 2.5003, 2.5478, 2.5997, 2.6571, 2.7216, 2.7955, 2.8829,
-     d 2.9912, 3.1365, 3.3682 /
+     1 0.3389d0, 0.4299d0, 0.4951d0, 0.5479d0, 0.5932d0, 0.6334d0,
+     2 0.6699d0, 0.7035d0, 0.7349d0, 0.7644d0, 0.7924d0, 0.8192d0,
+     3 0.8447d0, 0.8694d0, 0.8932d0, 0.9162d0, 0.9386d0, 0.9605d0,
+     4 0.9818d0, 1.0026d0, 1.0230d0, 1.0430d0, 1.0627d0, 1.0821d0,
+     5 1.1012d0, 1.1200d0, 1.1386d0, 1.1570d0, 1.1751d0, 1.1932d0,
+     6 1.2110d0, 1.2288d0, 1.2464d0, 1.2638d0, 1.2812d0, 1.2985d0,
+     7 1.3158d0, 1.3330d0, 1.3501d0, 1.3672d0, 1.3842d0, 1.4013d0,
+     8 1.4183d0, 1.4354d0, 1.4524d0, 1.4695d0, 1.4866d0, 1.5037d0,
+     9 1.5209d0, 1.5382d0, 1.5555d0, 1.5729d0, 1.5904d0, 1.6080d0,
+     a 1.6257d0, 1.6436d0, 1.6616d0, 1.6797d0, 1.6980d0, 1.7164d0,
+     b 1.7351d0, 1.7540d0, 1.7730d0, 1.7924d0, 1.8119d0, 1.8318d0,
+     c 1.8519d0, 1.8724d0, 1.8932d0, 1.9144d0, 1.9360d0, 1.9580d0,
+     d 1.9804d0, 2.0034d0, 2.0269d0, 2.0510d0, 2.0757d0, 2.1012d0,
+     e 2.1274d0, 2.1544d0, 2.1824d0, 2.2114d0, 2.2416d0, 2.2730d0,
+     f 2.3059d0, 2.3404d0, 2.3767d0, 2.4153d0, 2.4563d0, 2.5003d0,
+     g 2.5478d0, 2.5997d0, 2.6571d0, 2.7216d0, 2.7955d0, 2.8829d0,
+     h 2.9912d0, 3.1365d0, 3.3682d0 /
 C     ***** DEL = 1. FOR INCRUMENTING FUNCTIONS *****
 C     ***** DEL = 0. FOR REGULAR FUNCTIONS *****
-      DEL=FLOAT(MOD(NJ2/10,2))
+      DEL=dble(MOD(NJ2/10,2))
       NJ2=MOD(NJ2,10)
 C     ***** EXPLICIT ORIGIN AND SCALE *****
       T1=AIN(1)
@@ -1758,22 +1459,22 @@
   614 SCAL2=T4
       go to 616
   615 t4=-t4
-      if (t4.gt.0. .and. t4.lt.1.) t4=100.*t4
-      it4=t4
+      if (t4.gt.0. .and. t4.lt.1.) t4=(1d2)*t4
+      it4=int(t4)
       scal2=crtval(it4)
 C     ***** AUTOMATIC ORIGIN AND/OR SCALE *****
   616 IF(NJ2-2)790,622,620
-  620 XO(1)=XLNG(1)*.5
-      XO(2)=XLNG(2)*.5
+  620 XO(1)=XLNG(1)*.5d0
+      XO(2)=XLNG(2)*.5d0
   622 IF(NJ2-3)625,640,625
-  625 SCAL1=1.
+  625 SCAL1=1d0
   630 IF(LATM-1)635,635,640
   635 NG=12
-      CALL ERPNT(0.D0,602)
+      CALL ERPNT(0D0,602)
       CALL EXITNG(NG)
   640 DO 650 J=1,3
-      XMAX(J)=-1.E5
-  650 XMIN(J)=1.E5
+      XMAX(J)=-1d5
+  650 XMIN(J)=1d5
 C     ***** FIT BOX AROUND SET OF ATOMS *****
       DO 670 I=1,LATM
       CALL XYZ(ATOMID(I),ATOMS(1,I),3)
@@ -1791,20 +1492,20 @@
   670 CONTINUE
 C     ***** KM=TOP ATOM *****
       KM=MAX(3)
-      SMULT=1.
+      SMULT=1d0
       DO 780 M=1,5
       IF(M-2)740,675,678
 C     ***** CHECK VIEW DISTANCE *****
   675 IF(VIEW)785,785,680
   678 IF(NJ2-3)680,785,680
   680 T1=ATOMS(3,KM)*SMULT
-      IF(VIEW*.5-T1)685,690,690
+      IF(VIEW*.5d0-T1)685,690,690
 C     ***** INCREASE VIEW DISTANCE *****
-  685 VIEW=2.*T1
+  685 VIEW=(2d0)*T1
 C     ***** FIND PERSPECTIVE PROJECTION LIMITS *****
   690 DO 700 J=1,2
-      XMAX(J)=-1.E5
-  700 XMIN(J)=1.E5
+      XMAX(J)=-1d5
+  700 XMIN(J)=1d5
       DO 725 I=1,LATM
       DO 705 J=1,3
   705 X(J)=ATOMS(J,I)*SMULT
@@ -1818,22 +1519,22 @@
   725 CONTINUE
 C     ***** REFINE PARAMETERS *****
   740 IF(NJ2 -3)745,742,755
-  742 SMUL2=1.
+  742 SMUL2=1d0
       GO TO 765
 C     ***** AUTOMATIC SCALE ONLY *****
   745 DO 750 J=1,2
       T2=XO(J)
       SCAL(J)=(BRDR-T2)/XMIN(J)
   750 SCAL(J+2)=(XLNG(J)-BRDR-T2)/XMAX(J)
-      SMUL2=AMIN1(SCAL(1),SCAL(2),SCAL(3),SCAL(4))
+      SMUL2=dmin1(SCAL(1),SCAL(2),SCAL(3),SCAL(4))
       GO TO 780
 C     ***** AUTOMATIC SCALE AND POSITION *****
   755 DO 760 J=1,2
-  760 SCAL(J)=(XLNG(J)-BRDR*2.)/(XMAX(J)-XMIN(J))
-      SMUL2=AMIN1(SCAL(1),SCAL(2))
+  760 SCAL(J)=(XLNG(J)-BRDR*2d0)/(XMAX(J)-XMIN(J))
+      SMUL2=dmin1(SCAL(1),SCAL(2))
 C     ***** AUTOMATIC POSITION *****
   765 DO 770 J=1,2
-  770 XO(J)=.5*(XLNG(J)-SMUL2*(XMAX(J)+XMIN(J)))
+  770 XO(J)=(.5d0)*(XLNG(J)-SMUL2*(XMAX(J)+XMIN(J)))
   780 SMULT=SMULT*SMUL2
       VIEW=VIEW*SMUL2
   785 SCAL1=SCAL1*SMULT
@@ -1844,46 +1545,45 @@
       END
       SUBROUTINE F700
 C     ***** SUBROUTINE TO DRAW ELLIPSOIDS *****
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION EYE(3),VIEWV(3),X(3),Z(3)
-      REAL*8 TD,TD2,D100,D1000,D100K
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
       CHARACTER*8 CHEM
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
-      INTEGER*2 IDENT           
-      COMMON /PARMS/ CHEM(505),EV(3,505),P(3,505),PA(3,3,505)        
-     1 ,IDENT(2,505),MAXATM
-      common /ns/ npf,ndraw,norient,nvar
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
+      CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
+      COMMON /PARMS/ EV(3,2525),P(3,2525),PA(3,3,2525),IDENT(2,2525),
+     1 MAXATM
+      COMMON /PARMSA/ CHEM(2525)
+      common /ns/ npf,ndraw,NORIEN,nvar
       common /trfac/ xtrans,ytrans
 C     ***** SET ELLIPSOID GRAPHIC DETAILS *****
-      D100=100.
-      D1000=1000.
-      D100K=100000.
+      D100=1d2
+      D1000=1d3
+      D100K=1d5
       ITILT=0
       NG=0
       NFIRST=1
-      NPLANE=AIN(1)
+      NPLANE=int(AIN(1))
       IF(NPLANE-1)720,715,720
   715 NFIRST=4
       NPLANE=4
-  720 NSOLID=AIN(2)
+  720 NSOLID=int(AIN(2))
       NDOT=64/2**(IABS(NSOLID))
-      LINES=AIN(3)
-      NDASH=AIN(4)
+      LINES=int(AIN(3))
+      NDASH=int(AIN(4))
       CHSYM=AIN(5)
       T6=AIN(6)
-      DH=T6-CHSYM*17./7.
+      DH=T6-CHSYM*17d0/7d0
       T7=AIN(7)
-      DV=T7-CHSYM*.5
+      DV=T7-CHSYM*.5d0
 C     ***** ESTABLISH REFERENCE POINT OF VIEW *****
-      T1=1.E6
+      T1=1d6
       IF(VIEW)740,740,735
   735 T1=VIEW/SCAL1
   740 DO 741 J=1,3
@@ -1892,7 +1592,7 @@
 C     ***** LOOP THROUGH ATOM LIST *****
       DO 1105 ITOM=1,LATM
       TD=ATOMID(ITOM)
-      K=TD/D100K
+      K=int(TD/D100K)
       IF(AIN(10))744,744,7412
  7412 IF(AIN(12)-1.0D0)742,7414,7416
  7414 TD2=IDENT(1,K) 
@@ -1905,28 +1605,17 @@
   744 CALL XYZ(TD,X,2)
       IF(NG)758,746,758
   746 CALL PLTXY(X,Z)
-      L=DMOD(TD/D100,D1000)
-      L1=DMOD(TD,D100)
+      L=int(DMOD(TD/D100,D1000))
+      L1=int(DMOD(TD,D100))
       if (ndraw.eq.1) WRITE (npf,750) CHEM(K),K,L,L1,
      &                                Z(1)+xtrans,Z(2)+ytrans
       IF(NJ2-10)747,754,754
   747 LNS=MOD(LNS+1,18)
-      IF(LNS)749,748,749
-  748 IF (NOUT.GE.0)
-     &WRITE (NOUT,751)(TITLE(I),I=1,18)
-      IF (NOUT.GE.0)
-     &WRITE (NOUT,752)
-  749 IF (NOUT.GE.0)
-     &WRITE (NOUT,750) CHEM(K),K,L,L1,Z(1),Z(2),
-     1(X(I),I=1,3),(XT(I),I=1,3)
-  750 FORMAT(1H ,10X,A6,3H  (,I3,1H,,I3,I2,4H)   ,2F8.2,3X,3F8.3,11X,
-     13F8.4)
-  751 FORMAT(1H1,10X,18A4)
-  752 FORMAT(1H0,10X,18HSYMBOL   ATOM CODE,7X,16HPLOTTER X,Y(IN.) ,3X,21
-     1HCARTESIAN X,Y,Z (IN.),15X,20HCRYSTAL SYSTEM X,Y,Z/1H ,19X,45H(DIR
-     2ECTION COSINES(I,J),I=1,3),RMSD(J)),J=1,3,12X,42HFOR PRINCIPAL AXE
-     3S BASED ON WORKING SYSTEM/1H )
-  754 IF(EDGE-BRDR*.75)755,760,760
+  748 continue
+  749 continue
+  750 FORMAT(' ',10X,A6,'  (',I3,',',I3,I2,')   ',2F8.2,3X,3F8.3,11X,
+     & 3F8.4)
+  754 IF(EDGE-BRDR*.75d0)755,760,760
   755 NG=10
   758 CALL ERPNT(TD,700)
       GO TO 1105
@@ -1939,21 +1628,21 @@
       GO TO 758
   764 IF(CHSYM)775,775,765
 C     ***** PLOT CHEMICAL SYMBOLS *****
-  765 T4=1.
+  765 T4=1d0
       IF(VIEW)767,767,766
   766 T4=VIEW/(VIEW-X(3))
   767 T3=CHSYM*T4
-      T4=DISP*T4*.5
+      T4=DISP*T4*.5d0
       V1(1)=X(1)+DH*SYMB(1,1)+DV*SYMB(1,2)
       V1(2)=X(2)+DH*SYMB(2,1)+DV*SYMB(2,2)
       V1(3)=X(3)
       CALL PLTXY(V1,V3)
       IF(EDGE-CHSYM)775,768,768
-  768 V2(3)=0.
+  768 V2(3)=0d0
       DO 770 I=1,3,2
-      V2(1)=V3(1)+FLOAT(I-2)*T4
+      V2(1)=V3(1)+dble(I-2)*T4
       DO 770 J=1,3,2
-      V2(2)=V3(2)+FLOAT(J-2)*T4
+      V2(2)=V3(2)+dble(J-2)*T4
       CALL SIMBOL(V2(1),V2(2),T3,CHEM(K),THETA,6)
       IF(T4)775,775,770
   770 CONTINUE
@@ -1973,10 +1662,7 @@
       DO 800 J=1,3
       PAC(J,4)=PAC(J,1)
   800 PAC(J,5)=PAC(J,2)
-      IF(NJ2-10)802,803,803
-  801 FORMAT(1H ,13X,3(3X,3F8.4,F8.5)/1H )
-  802 IF (NOUT.GE.0)
-     &WRITE (NOUT,801) ((PAC(J,K),J=1,3),RMS(K) ,K=1,3)
+  802 continue
 C     ***** V4 = VECTOR NORMAL TO POLAR PLANE *****
   803 continue
       CALL VM(VIEWV,AAWRK,V6)
@@ -1987,7 +1673,7 @@
       t3a=sqrt(rms(3)*rms(2))
       t3b=sqrt(rms(2)*rms(1))
       t3c=sqrt(rms(3)*rms(1))
-      T3=((t3a+t3b+t3c)/3.0)*SCL
+      T3=((t3a+t3b+t3c)/3d0)*SCL
       NRESOL=1
       NBIS=5
       DO 805 J=1,3
@@ -2001,7 +1687,7 @@
       II1=MOD(II,3)+1
       II2=MOD(II+1,3)+1
 C     ***** GENERATE CONJUGATE DIAMETERS *****
-      IF(.99938- ABS(VV(V4,PAC(1,II2))))820,820,830
+      IF(.99938d0-ABS(VV(V4,PAC(1,II2))))820,820,830
   820 T1=RMS(II0)*SCL
       T2=RMS(II1)*SCL
       DO 825 J=1,3
@@ -2033,9 +1719,9 @@
       DO 857 J=1,129,NDOT
       CALL DRAW(DP(1,J),DISP,DISP,3)
       DO 856 I=1,3,2
-      T1=FLOAT(I-2)*DISP
+      T1=dble(I-2)*DISP
       DO 856 K=1,3,2
-      T2=FLOAT(K-2)*DISP
+      T2=dble(K-2)*DISP
       CALL DRAW(DP(1,J),T1,T2,2)
       IF(DISP)857,857,856
   856 CONTINUE
@@ -2043,33 +1729,33 @@
       GO TO 1100
 C     ***** PLOT SOLID BOUNDARY ELLIPSE *****
   859 CALL PROJ(D,DP,X,XO,VIEW,1,129,NRESOL)
-      CALL DRAW(DP,0.,0.,3)
+      CALL DRAW(DP,0d0,0d0,3)
       DO 860 J=NRES1,129,NRESOL
-  860 CALL DRAW(DP(1,J),0.,0.,2)
+  860 CALL DRAW(DP(1,J),0d0,0d0,2)
       IF(DISP)1100,1100,865
 C     ***** BOUNDARY ANNULUS AS A LINEAR FUNCTION OF HEIGHT *****
   865 CALL DIFV(XT,ORGN,V1)
       T5=VV(V1,AAREV(1,3))*SCAL1
       T8=AIN(8)
       T9=AIN(9)
-      NCYCLE=.5+(T8+T5*T9)/DISP
+      NCYCLE=int(.5d0+(T8+T5*T9)/DISP)
       IF(NCYCLE)1100,1100,870
-  870 T3=(2.*DISP)/(T1+T2)
+  870 T3=(2d0*DISP)/(T1+T2)
 C     ***** INCREASE ANNULAR THICKNESS *****
       DO 875 I=1,NCYCLE
-      T4=T3*FLOAT(I)
+      T4=T3*dble(I)
       DO 875 J=1,129,NRESOL
   875 CALL DRAW(DP(1,J),D(1,J)*T4,D(2,J)*T4,2)
       GO TO 1100
   900 CALL PROJ(D,DP,X,XO,VIEW,1,65,NRESOL)
 C     ***** PLOT HALF AN ELLIPSE *****
-      CALL DRAW(DP,0.,0.,3)
+      CALL DRAW(DP,0d0,0d0,3)
       DO 905 J=NRES1,65,NRESOL
-  905 CALL DRAW(DP(1,J),0.,0.,2)
+  905 CALL DRAW(DP(1,J),0d0,0d0,2)
       IF(DISP)930,930,910
 C     ***** ACCENTUATE FRONT HALF *****
   910 DO 925 I=1,3,2
-      T2=FLOAT(I-2)*DISP
+      T2=dble(I-2)*DISP
       DO 915 J=1,65,NRESOL
       K=66-J
   915 CALL DRAW(DP(1,K),DISP,T2,2)
@@ -2087,9 +1773,9 @@
   950 DO 958 J=65,129,NDOT
       CALL DRAW(DP(1,J),DISP,DISP,3)
       DO 955 I=1,3,2
-      T1=FLOAT(I-2)*DISP
+      T1=dble(I-2)*DISP
       DO 955 K=1,3,2
-      T2=FLOAT(K-2)*DISP
+      T2=dble(K-2)*DISP
       CALL DRAW(DP(1,J),T1,T2,2)
       IF(DISP)958,958,955
   955 CONTINUE
@@ -2097,14 +1783,14 @@
       GO TO 967
 C     ***** SINGLE LINE ON REVERSE SIDE *****
   960 DO 965 J=65,129,NRESOL
-  965 CALL DRAW(DP(1,J),0.,0.,2)
+  965 CALL DRAW(DP(1,J),0d0,0d0,2)
 C     ***** DETAIL INTERIOR FEATURES *****
   967 T2=NDASH*2
       DO 975 J=1,3
       T1=PAC(J,II0)*RMS(II0)*SCL
       DA(J,1)=T1
       DA(J,2)=PAC(J,II1)*RMS(II1)*SCL
-      DA(J,3)=0.
+      DA(J,3)=0d0
       IF(NDASH)975,975,970
   970 V1(J)=-T1
       V2(J)=T1/T2
@@ -2115,15 +1801,15 @@
       DO 985 K=1,2
       L=4-K
       CALL PROJ(V1,DP,X,XO,VIEW,1,1,1)
-      CALL DRAW(DP,0.,0.,L)
+      CALL DRAW(DP,0d0,0d0,L)
       DO 985 I=1,3
   985 V1(I)=V1(I)+V2(I)
 C     ***** SOLID LINE FOR FORWARD AXIS *****
   987 IF(LINES)1100,1100,988
   988 CALL PROJ(DA,DP,X,XO,VIEW,1,3,1)
-      T1=DISP*.5
+      T1=DISP*.5d0
       DO 990 I=1,3,2
-      T2=FLOAT(2-I)*T1
+      T2=dble(2-I)*T1
       CALL DRAW(DP,T1,T2,3)
       CALL DRAW(DP(1,3),T1,T2,2)
       IF(DISP)1000,1000,989
@@ -2134,8 +1820,8 @@
       IF(L)1100,1100,1005
  1005 T2=LINES
       DO 1025 I=1,L
-      T1=FLOAT(I)/T2
-      T3=SQRT(1.-T1*T1)
+      T1=dble(I)/T2
+      T3=SQRT(1d0-T1*T1)
       IF(MOD(I,2))1010,1015,1010
  1010 M=I*2
       N=M-1
@@ -2149,8 +1835,8 @@
       L=L*2
       CALL PROJ(D,DP,X,XO,VIEW,1,L,1)
       DO 1030 I=2,L,2
-      CALL DRAW(DP(1,I-1),0.,0.,3)
- 1030 CALL DRAW(DP(1,I),0.,0.,2)
+      CALL DRAW(DP(1,I-1),0d0,0d0,3)
+ 1030 CALL DRAW(DP(1,I),0d0,0d0,2)
  1100 CONTINUE
  1105 CONTINUE
 C     ***** ELIMINATE LOCAL OVERLAP INFORMATION BEFORE RETURNING *****
@@ -2159,29 +1845,28 @@
       END
       SUBROUTINE F800
 C     ***** SUBROUTINE FINDS ATOM PAIRS FOR BONDS *****
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION IA(3),W1(6)
-      REAL*8 TD1,TD2,TD3,D100K
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
       CHARACTER*8 CHEM
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
-      INTEGER*2 IDENT
-      COMMON /PARMS/ CHEM(505),EV(3,505),P(3,505),PA(3,3,505)        
-     1 ,IDENT(2,505),MAXATM
-      COMMON/OLAP/CONIC(7,500),COVER(6,20),KC(20),KQ(30),NCONIC,NCOVER,
-     1 NQOVER,NQUAD,OVMRGN,QOVER(3,4,30),QUAD(9,600),SEGM(50,2)
-      D100K=100000.
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
+      CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
+      COMMON /PARMS/ EV(3,2525),P(3,2525),PA(3,3,2525),IDENT(2,2525),
+     1 MAXATM
+      COMMON /PARMSA/ CHEM(2525)
+      COMMON/OLAP/CONIC(7,2500),COVER(6,20),KC(20),KQ(30),NCONIC,NCOVER,
+     1 NQOVER,NQUAD,OVMRGN,QOVER(3,4,30),QUAD(9,3000),SEGM(50,2)
+      D100K=1d5
 c *** old
 c     NJ4=MOD(NJ2,10)-4
 c *** new 
-      IAN=AIN(2)
+      IAN=int(AIN(2))
       NJ4=(MOD(NJ2,10)-4)+(IAN*2)
       if (nj.eq.10) nj4=(ian*2)-2
       LNS=-4
@@ -2201,14 +1886,7 @@
       IF(TD2)815,815,830
   830 IF(NJ2-10)832,838,838
   832 LNS=MOD(LNS+4,56)
-      IF(LNS)838,834,838
-  834 IF (NOUT.GE.0)
-     &WRITE (NOUT,835)(TITLE(I),I=1,18)
-  835 FORMAT(1H1,10X,18A4)
-      IF (NOUT.GE.0)
-     &WRITE (NOUT,837)
-  837 FORMAT(1H0,10X,18HSYMBOL   ATOM CODE,6X,16HPLOTTER X,Y(IN.) ,6X,
-     121HCARTESIAN X,Y,Z (IN.),17X,20HCRYSTAL SYSTEM X,Y,Z/1H )
+  834 continue
 C     ***** CHECK IF BOND ATOMS ARE IN ATOMS LIST (FOR OVERLAP CALC) ***
   838 NA1=0
       NA2=0
@@ -2236,35 +1914,28 @@
 C     ***** IMPLICIT DESCRIPTION *****
   848 IF(LATM-2)810,850,850
   850 SCAL3=SCAL1
-      SCAL1=1.
+      SCAL1=1d0
       DO 855 I=1,LATM
   855 CALL XYZ(ATOMID(I),ATOMS(1,I),2)
       SCAL1=SCAL3
       IF(NCD)810,810,860
-  860 IF (NOUT.GE.0)
-     &WRITE (NOUT,861)
-  861 FORMAT(1H0,10X,20HBOND SELECTION CODES//11X,94H(SEQUENCE(A))(SEQUE
-     1NCE(B)) (BOND) (DISTANCES)( BOND )(PERSP.--LABELS)(NORMAL--LABELS)
-     2(DIGITS) /11X,93H(  MIN  MAX )(  MIN  MAX ) (TYPE) (MIN   MAX)(RAD
-     3IUS)(HEIGHT  OFFSET)(HEIGHT  OFFSET)(NUMBER))
-      DMAX=0.
+  860 continue
+      DMAX=0d0
       DO 870 I=1,NCD
       IF(DMAX-CD(2,I))865,866,866
   865 DMAX=CD(2,I)
-  866 IF (NOUT.GE.0)
-     &WRITE (NOUT,871)(KD(J,I),J=1,5),(CD(J,I),J=1,8)
+  866 continue
   870 CONTINUE
-  871 FORMAT(1H ,10X,I6,I5,I8,I5,I8,2F6.2,5F8.3,F7.0)
       DMAX=DMAX*DMAX
 C     ***** LOOP THROUGH ATOMS ARRAY *****
       DO 977 M=1,LATM
       NA1=M
       TD1=ATOMID(M)
-      MI=TD1/D100K
+      MI=int(TD1/D100K)
       IF(NJ4)8722,8724,8718
  8718 IF(NJ4-2)8724,8726,8720
  8720 IF(NJ4-4)8726,8722,8722
- 8722 IA(1)=TD1/D100K   
+ 8722 IA(1)=int(TD1/D100K)
       GO TO 8728
  8724 IA(1)=IDENT(1,MI)
       GO TO 8728
@@ -2285,14 +1956,8 @@
       IF(DMAX-DIST)975,875,875
   875 DIST=SQRT(DIST)
       TD2=ATOMID(N)
-      NI=TD2/D100K
-c     IF(NJ4)876,877,878
-c 876 IA(2)=TD2/D100K
-c     GO TO 879
-c 877 IA(2)=IDENT(1,NI) 
-c     GO TO 879 
-c 878 IA(2)=IDENT(2,NI)
-      IF(NJ4.LT.0) IA(2)=TD2/D100K
+      NI=int(TD2/D100K)
+      IF(NJ4.LT.0) IA(2)=int(TD2/D100K)
       IF(NJ4.EQ.0.OR.NJ4.EQ.1) IA(2)=IDENT(1,NI) 
       IF(NJ4.GT.1) IA(2)=IDENT(2,NI) 
 C     ***** SELECT BONDS ACCORDING TO CODES *****
@@ -2312,13 +1977,13 @@
   900 W1(4)=ATOMS(1,N)
       W1(5)=ATOMS(2,N)
       W1(6)=ATOMS(3,N)
-      KM1=ABS(CD(4,J))
-      KM2=ABS(CD(5,J))
-      DSQ1=(CD(6,J))**2
-      DSQ2=(CD(7,J))**2
+      KM1=int(ABS(CD(4,J)))
+      KM2=int(ABS(CD(5,J)))
+      DSQ1=CD(6,J)**2
+      DSQ2=CD(7,J)**2
 C     ***** SEARCH FOR POLYHEDRA CENTER *****
       DO 935 IM=1,LATM
-      K3=ATOMID(IM)/D100K
+      K3=int(ATOMID(IM)/D100K)
       if (ian.eq.1) k3=ident(1,im)
       if (ian.eq.2) k3=ident(2,im)
       IF(K3-KM1)935,905,905
@@ -2341,11 +2006,7 @@
 C     ***** PREPARE TO DRAW BOND *****
   955 IF(NJ2-10)960,970,970
   960 LNS=MOD(LNS+4,56)
-      IF(LNS)965,965,970
-  965 IF (NOUT.GE.0)
-     &WRITE (NOUT,835)(TITLE(I),I=1,18)
-      IF (NOUT.GE.0)
-     &WRITE (NOUT,837)
+  965 continue
   970 CALL BOND(TD1,TD2,JB,NA1,NA2)
   975 CONTINUE
   977 CONTINUE
@@ -2353,37 +2014,29 @@
   980 IF(NJ2-21)985,990,990
   985 CALL LAP500(-1)
   990 if (nj2.eq.22) then
-      IF(NQUAD)993,993,991
-C     ***** PRINT OUT NUMBER OF BOND QUADRANGLES STORED *****
-C     ***** PRINT OUT QUADRANGLE IDENTIFICATION ARRAY *****
-  991 IF (NOUT.GE.0)
-     &WRITE (NOUT,992)NQUAD,(QUAD(9,J),J=1,NQUAD)
-  992 FORMAT(1H0,10X,27HBOND OVERLAP ARRAY CONTAINS,I4,23H BONDS (MAXIMU
-     1M IS 599)/  11X,  66HATOM-PAIR NUMBERS IN ARRAY REFER TO SEQUENCE
-     2IN SORTED ATOMS ARRAY/(15X,10F10.0))
+  991 continue
       end if
   993 RETURN
       END
       SUBROUTINE F900
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION X(3),XW(3,5),Y(3),Z(3)
-      REAL*8 D100K
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
       CHARACTER*8 CHEM
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
-      INTEGER*2 IDENT           
-      COMMON /PARMS/ CHEM(505),EV(3,505),P(3,505),PA(3,3,505)        
-     1 ,IDENT(2,505),MAXATM
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
+      CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
+      COMMON /PARMS/ EV(3,2525),P(3,2525),PA(3,3,2525),IDENT(2,2525),
+     1 MAXATM
+      COMMON /PARMSA/ CHEM(2525)
       character*72 tmpti, tmpti2
 C     ***** LABELING FUNCTION SUBROUTINE *****
-      D100K=100000.
+      D100K=1d5
       ITILT=0
       NJ3=MOD(NJ2,10)
       TH=THETA
@@ -2391,7 +2044,7 @@
       COSTH=SYMB(1,1)
       ILAST=1
       T2=AIN(2)
-      IF(T2-11100.)910,910,905
+      IF(T2-11100d0)910,910,905
   905 ILAST=2
   910 DO 925 II=1,ILAST
 C     ***** OBTAIN WORKING CARTESIAN COORDINATES *****
@@ -2404,9 +2057,9 @@
       T2=XW(J,ILAST)
       T1=XW(J,1)
       XW(J,3)=T2-T1
-  930 X(J)=(T2+T1)*.5
+  930 X(J)=(T2+T1)*.5d0
 C     ***** PERSPECTIVE SCALING FACTOR *****
-      SCAL=1.
+      SCAL=1d0
       IF(VIEW)940,940,935
   935 SCAL=VIEW/(VIEW-X(3))
   940 T1=AIN(5)
@@ -2431,7 +2084,7 @@
       T7=AIN(7)
       Y(1)=SCAL*(X(1)+T6*COSTH-T7*SINTH)+XO(1)
       Y(2)=SCAL*(X(2)+T6*SINTH+T7*COSTH)+XO(2)
-      Y(3)=0.
+      Y(3)=0d0
 C     ***** CHECK FOR LEGEND RESET *****
       DO 980 J=1,2
       T1=AIN(J+2)
@@ -2443,15 +2096,15 @@
 C     ***** SET PARAMETERS FOR INDIVIDUAL FUNCTIONS *****
   985 GO TO(990,995,995,1000,1000,1000,915,1105,1105,915,915,915,1005,10
      105,1005,1005,915),NJ2
-  990 T6=17.
-      L=AIN(1)/D100K
+  990 T6=17d0
+      L=int(AIN(1)/D100K)
       ILAST=1
-      DXW=0.
-      DYW=0.
+      DXW=0d0
+      DYW=0d0
       GO TO 1030
-  995 T6=215.
+  995 T6=215d0
       ILAST=18
-      T1=HGT*24./7.
+      T1=HGT*24d0/7d0
       DXW=COSTH*T1
       DYW=SINTH*T1
       GO TO 1030
@@ -2460,7 +2113,7 @@
       GO TO 1030
 C     ***** TRUE PERSPECTIVE LABELS *****
  1005 CALL UNITY(XW(1,3),VT(1,1),1)
-      IF(ABS(VT(3,1))-.9994)1010,912,912
+      IF(ABS(VT(3,1))-.9994d0)1010,912,912
 C     ***** FORM PERSPECTIVE ROTATION MATRIX *****
  1010 CALL NORM(AID(1,3),VT(1,1),VT(1,2),1)
       CALL UNITY(VT(1,2),VT(1,2),1)
@@ -2469,27 +2122,27 @@
  1015 VT(J,4)=X(J)
       ITILT=1
       HGT=AIN(5)
-      TH=0.
+      TH=0d0
       Y(3)=X(3)
       TT7=AIN(7)
-      Y(2)=X(2)+TT7-HGT*.5
+      Y(2)=X(2)+TT7-HGT*.5d0
       TT6=AIN(6)
       IF(NJ2-13)1030,1025,1020
 C     ***** PERSPECTIVE BOND LABELS *****
- 1020 Y(1)=X(1)+TT6-HGT*FLOAT(22+3*(6-NJ3))/7.
+ 1020 Y(1)=X(1)+TT6-HGT*dble(22+3*(6-NJ3))/7d0
       DIST=SQRT(VV(XW(1,3),XW(1,3)))/SCAL1
       GO TO 1050
 C     ***** PERSPECTIVE TITLES *****
- 1025 Y(1)=X(1)+TT6-HGT*215./7.
+ 1025 Y(1)=X(1)+TT6-HGT*215d0/7d0
       ILAST=18
-      DXW=HGT*24./7.
-      DYW=0.
+      DXW=HGT*24d0/7d0
+      DYW=0d0
       GO TO 1050
- 1030 DH=HGT*T6/7.
-      DV=HGT*.5
+ 1030 DH=HGT*T6/7d0
+      DV=HGT*.5d0
       Y(1)=Y(1)-DH*COSTH+DV*SINTH
       Y(2)=Y(2)-DH*SINTH-DV*COSTH
-      Y(3)=0.
+      Y(3)=0d0
 C     ***** PLOT VARIOUS LABELS *****
  1050 Z(3)=Y(3)
       XO(3)=Y(3)
@@ -2510,9 +2163,9 @@
                go to 104
             end if
   103    continue
-  104    ioffset = (72 - klast) / 2
+  104    IOFFST = (72 - klast) / 2
          do 105 i=1,klast
-            tmpti2(i+ioffset:i+ioffset) = tmpti(i:i)
+            tmpti2(i+IOFFST:i+IOFFST) = tmpti(i:i)
   105    continue
          do 106 i=1,18
             title2(i) = tmpti2(i*4-3:i*4)
@@ -2520,9 +2173,9 @@
       end if
  1061 DO 1085 I=1,ILAST
       DO 1075 J=1,3,2
-      Z(1)=Y(1)+FLOAT(J-2)*DISP*.5
+      Z(1)=Y(1)+dble(J-2)*DISP*.5d0
       DO 1075 K=1,3,2
-      Z(2)=Y(2)+FLOAT(K-2)*DISP*.5
+      Z(2)=Y(2)+dble(K-2)*DISP*.5d0
       IF(NJ3-2)1065,1068,1068
 C     ***** PLOT CHEMICAL SYMBOL *****
  1065 CALL SIMBOL(Z(1),Z(2),HGT,CHEM(L),TH,6)
@@ -2536,18 +2189,18 @@
       GO TO 1199
 C     ***** PLOT BOND DISTANCE LABELS *****
  1090 I9=NJ3-3
-      T9=10.**I9
-      DISTR=AINT((DIST*T9)+0.5)/T9 +.0001
+      T9=(10d0)**I9
+      DISTR=AINT((DIST*T9)+0.5d0)/T9 +1d-4
       CALL NUMBUR(Y(1),Y(2),HGT,DISTR,TH,I9)
       GO TO 1199
 C     ***** PLOT CENTERED SYMBOLS *****
- 1105 TT8=AIN(8)
+C 1105 TT8=AIN(8)
 c *** ORTEP-II call
 c     CALL SIMBOL(Y(1),Y(2),HGT,IFIX(TT8),TH,7-NJ3)
 c *** Only one centered symbol (*) is available in ORTEP-III.
 c *** It is triggered by the negative value for argument 6.
 c *** Argument 4 is ignored by SIMBOL.
-      CALL SIMBOL(Y(1),Y(2),HGT,' ',TH,7-NJ3)
+ 1105 CALL SIMBOL(Y(1),Y(2),HGT,' ',TH,7-NJ3)
       GO TO 1199
   912 NG=15
   915 CALL ERPNT(AIN(II),NJ*100+NJ2)
@@ -2573,20 +2226,19 @@
       end
       SUBROUTINE LAP500(NTYPE)
 C     ***** STORE PROJECTED ATOM CONICS AND BOND QUADRANGLES *****
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION QC(3,3),QD(3,3),VD1(3),VD2(3)
-      REAL*8 QC,QD,VD1,VD2,TD1,TD2,TD3,TD   
-      COMMON/OLAP/CONIC(7,500),COVER(6,20),KC(20),KQ(30),NCONIC,NCOVER,
-     1 NQOVER,NQUAD,OVMRGN,QOVER(3,4,30),QUAD(9,600),SEGM(50,2)
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      COMMON/OLAP/CONIC(7,2500),COVER(6,20),KC(20),KQ(30),NCONIC,NCOVER,
+     1 NQOVER,NQUAD,OVMRGN,QOVER(3,4,30),QUAD(9,3000),SEGM(50,2)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
+      CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
 C     ***** ELIMINATE ALL PREVIOUSLY STORED LOCAL OVERLAP INFORMATION **
       NCOVER=0
       NQOVER=0
@@ -2598,20 +2250,18 @@
 C     ***** CONSTANT FOR OVERLAP MARGIN (WHITE MARGIN AT OVERLAP) *****
   200 IF(AIN(1))205,215,210
 C     ***** NEGATIVE NUMBER OR POSITIVE INTEGER GIVES OVMRGN=0.0 *****
-  205 OVMRGN=0.0
+  205 OVMRGN=0d0
       GO TO 220
 C     ***** SET OVERLAP MARGIN WIDTH DIRECTLY IN INCHES *****
   210 OVMRGN=AIN(1)-DINT(AIN(1))
       GO TO 220
 C      ***** DEFAULT OPTION, OVERLAP MARGIN WIDTH AS A FUNCTION OF SCAL1
-  215 if (scal1.lt..25) then
-         OVMRGN=AMAX1(SQRT(SCAL1)*0.050,0.010)
+  215 if (scal1.lt..25d0) then
+         OVMRGN=dmax1(SQRT(SCAL1)*5d-2,1d-2)
       else
-         OVMRGN=AMAX1(SQRT(SCAL1)*0.030,0.025)
+         OVMRGN=dmax1(SQRT(SCAL1)*3d-2,2.5d-2)
       end if
-  220 IF (NOUT.GE.0)
-     &WRITE (NOUT,2) OVMRGN
-    2 FORMAT(1H0,10X,17HOVERLAP MARGIN IS, F6.3,5H INCH)
+  220 continue
   225 IF(LATM)230,230,235
   230 NG=12
       CALL ERPNT(0.D0,510+NJ2)
@@ -2669,7 +2319,7 @@
       QC(J,K)= QD(J1,K1)*QD(J2,K2)-QD(J1,K2)*QD(J2,K1)
   315 QC(K,J)=QC(J,K)
 C     ***** FORM POLARIZED COFACTOR MATRIX AND ADD TO ELLIPSOID MATRIX *
-      TD2=-SCL**2
+      TD2=-(SCL**2)
 C     ***** TD1 IS AN ARBITRARY SCALING FACTOR *****
       TD1=VMV(V1,Q,V1)
       DO 325 J=1,3
@@ -2682,10 +2332,10 @@
      1 +VD1(J1)*(VD1(K1)*QC(J2,K2)-VD1(K2)*QC(J2,K1)))+TD2*QD(J,K))/TD1
   320 QD(K,J)=QD(J,K)
 C     ***** PROJECTED ELLIPSE IN HOMOGENEOUS COORD OF WORKING SYSTEM ***
-      QD(J,3)=-QD(J,3)*VIEW
-  325 QD(3,J)=-QD(3,J)*VIEW
+      QD(J,3)=-(QD(J,3)*VIEW)
+  325 QD(3,J)=-(QD(3,J)*VIEW)
 C     ***** PROJECT CENTER OF ATOM ONTO PROJECTION PLANE *****
-      TD1=-VIEW/VD1(3)
+      TD1=-(VIEW/VD1(3))
       VD2(1)=VD1(1)*TD1
       VD2(2)=VD1(2)*TD1
 C     ***** TRANSFORM TO NEW ORIGIN TO IMPROVE CONDITION OF MATRIX Q ***
@@ -2703,11 +2353,11 @@
       DO 345 K=1,2
   345 QD(J,K)=QD(J,K)-QD(J,3)*QD(K,3)/QD(3,3)
       DO 350 J=1,2
-      QD(J,3)=0.0
-      QD(3,J)=0.0
+      QD(J,3)=0d0
+      QD(3,J)=0d0
   350 V6(J)=XO(J)+ATOMS(J,IA)
 C     ***** PROJECTED ELLIPSE IN HOMOGENEOUS COORD ABOUT CENTER OF ATOM
-      QD(3,3)=-SCL**2
+      QD(3,3)=-(SCL**2)
 C     ***** FIT RECTANGLE AROUND ELLIPSE ALLOWING OVERLAP MARGIN *****
 C     ***** FORM MATRIX OF COFACTORS *****
   355 DO 360 J=1,3
@@ -2730,7 +2380,7 @@
       IF(T1)370,370,375
 C     ***** ROUNDOFF PROBLEMS, RESET LIMITS IN X OR Y *****
   370 NDG=1
-      V5(J)=0.001+OVMRGN
+      V5(J)=(1d-3)+OVMRGN
       GO TO 380
   375 V5(J)=  SQRT(T1)+OVMRGN
       V6(J)=V6(J)+QC(3,J)
@@ -2740,62 +2390,46 @@
       IF(NDG)390,390,395
   390 IF(TD2)400,395,395
 C     ***** ELLIPSE IMAGINARY DUE TO ROUNDOFF, RESET TO REAL VALUE *****
-  395 CONIC(5,IA)=1.0/((CONIC(2,IA)-CONIC(1,IA))*0.5)**2
-      CONIC(6,IA)=0.0
-      CONIC(7,IA)=1.0/((CONIC(4,IA)-CONIC(3,IA))*0.5)**2
+  395 CONIC(5,IA)=1d0/((CONIC(2,IA)-CONIC(1,IA))*0.5d0)**2
+      CONIC(6,IA)=0d0
+      CONIC(7,IA)=1d0/((CONIC(4,IA)-CONIC(3,IA))*0.5d0)**2
       GO TO 405
 C     ***** STORE NORMALIZED QUADRATIC COEFFICIENTS FOR ELLIPSE *****
 C     ***** SCALED BY OVERLAP MARGIN PARAMETER *****
-  400 TD3= -(1.0-2.0*OVMRGN/(V5(1)+V5(2)))**2 /TD2
+  400 TD3= -(((1d0-2d0*OVMRGN/(V5(1)+V5(2)))**2) / TD2)
       CONIC(5,IA)=QD(1,1)*TD3
       CONIC(6,IA)=QD(1,2)*TD3
       CONIC(7,IA)=QD(2,2)*TD3
   405 CONTINUE
       NCONIC=LATM
-C     ***** PRINT OUT SORTED ATOMS ARRAY *****
-      IF (NOUT.GE.0)
-     &WRITE (NOUT,4)(ATOMID(J),J=1,LATM)
-    4 FORMAT(1H0,10X,30HCONTENTS OF SORTED ATOMS ARRAY/(15X,10F10.0))
 C     ***** STORE BOND QUADRANGLES IF SEARCH CODES ARE GIVEN *****
       IF(NCD)420,420,410
 C     ***** GENERATE PSEUDO-INSTRUCTION 822 TO CALCULATE BONDS *****
   410 NJ2=22
       CALL F800
-c *** the lines below have been moved to the end of F800
-c       IF(NQUAD)420,420,415
-c C     ***** PRINT OUT NUMBER OF BOND QUADRANGLES STORED *****
-c C     ***** PRINT OUT QUADRANGLE IDENTIFICATION ARRAY *****
-c   415 IF (NOUT.GE.0)
-c      &WRITE (NOUT,6)NQUAD,(QUAD(9,J),J=1,NQUAD)
-c     6 FORMAT(1H0,10X,27HBOND OVERLAP ARRAY CONTAINS,I4,23H BONDS (MAXIMU
-c      1M IS 599)/  11X,  66HATOM-PAIR NUMBERS IN ARRAY REFER TO SEQUENCE
-c      2IN SORTED ATOMS ARRAY/(15X,10F10.0))
-c *** the lines above have been moved to the end of F800
   420 RETURN
       END
       SUBROUTINE LAP700(NA,ICQ)
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION DETER(2),QA(3,3,2),QC(3,3,2),V12(3,2),YMIN(2),YMAX(2)
       DIMENSION OVMR(2)
-      REAL*8 AOV3,AOV3SQ,BOV3,DETER,PI,PHI,POV3,POV3CU,QA,QC,QOV2,QOV2SQ
-      REAL*8 ROOT,TD,TIDD
-      COMMON/OLAP/CONIC(7,500),COVER(6,20),KC(20),KQ(30),NCONIC,NCOVER,
-     1 NQOVER,NQUAD,OVMRGN,QOVER(3,4,30),QUAD(9,600),SEGM(50,2)
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      COMMON/OLAP/CONIC(7,2500),COVER(6,20),KC(20),KQ(30),NCONIC,NCOVER,
+     1 NQOVER,NQUAD,OVMRGN,QOVER(3,4,30),QUAD(9,3000),SEGM(50,2)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
-      PI=3.1415926535897932
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
+      CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
+      PI=3.1415926535897932d0
       ICQ=0
       NCOVER=0
       NQOVER=0
       OVMR(1)=OVMRGN
-      OVMR(2)=0.0
+      OVMR(2)=0d0
       IF(NCONIC-NA)200,200,205
   200 RETURN
 C     ***** ROUGH CHECK FOR OVERLAPPING ATOMS *****
@@ -2817,7 +2451,7 @@
       DO 245 K=1,3
   245 QA(J,K,L)=DA(J,K)
 C     ***** CALCULATE COFACTORS AND DETERMINANTS *****
-      DETER(L)=0.0
+      DETER(L)=0d0
       DO 250 J=1,3
       J1=MOD(J+3,3)+1
       J2=MOD(J+1,3)+1
@@ -2830,8 +2464,8 @@
 C     ***** DETER(L) IS THE DETERMINANT TIMES 3 *****
       IF(L-1)420,420,255
 C     ***** FORM CHARACTERISTIC EQUATION AND EXAMINE ITS ROOTS *****
-  255 AOV3=0.0
-      BOV3=0.0
+  255 AOV3=0d0
+      BOV3=0d0
       DO 260 J=1,3
       DO 260 K=1,3
       AOV3=AOV3+QC(J,K,2)*QA(J,K,1)
@@ -2842,14 +2476,13 @@
       POV3=BOV3-AOV3SQ
       QOV2=AOV3*(AOV3SQ-BOV3*1.5D0)+DETER(1)/(DETER(2)*2.0D0)
 C     ***** CHECK DISCRIMINANT OF CHARACTERISTIC CUBIC EQUATION *****
-      ITYPE=0
       POV3CU=POV3**3
       QOV2SQ=QOV2**2
       IF(POV3CU+QOV2SQ)270,310,265
-  265 IF(POV3CU*1.00001 +QOV2SQ)310,310,400
-  270 IF(POV3CU+1.00001 *QOV2SQ)275,310,310
+  265 IF(POV3CU*1.00001d0 +QOV2SQ)310,310,400
+  270 IF(POV3CU+1.00001d0 *QOV2SQ)275,310,310
 C     ***** THREE REAL ROOTS, ALL DIFFERENT *****
-  275 ITYPE=1
+  275 continue
 C     ***** NO INTERSECTION IF A/3 AND B/3 INVARIANTS ARE NEGATIVE *****
       IF(AOV3)280,285,285
   280 IF(BOV3)420,285,285
@@ -2857,13 +2490,13 @@
   285 IF(QOV2)295,290,295
   290 PHI=PI/2.0D0
       GO TO 305
-  295 PHI=DATAN(-DSQRT(-POV3CU-QOV2SQ)/QOV2)
+  295 PHI=DATAN(-(DSQRT(-POV3CU-QOV2SQ)/QOV2))
       IF(PHI)300,305,305
   300 PHI=PHI+PI
   305 ROOT=2.0D0*DSQRT(-POV3)*DCOS(PHI/3.0D0)-AOV3
       GO TO 325
 C     ***** THREE REAL ROOTS, AT LEAST TWO ARE EQUAL *****
-  310 ITYPE=2
+  310 continue
 C     ***** CHECK SIGNS OF INVARIANTS A/3 AND B/3 *****
       IF(AOV3)315,320,320
   315 IF(BOV3)420,320,320
@@ -2879,18 +2512,18 @@
 C     ***** NEGATIVE DENOTES REAL INTERSECTING LINE PAIR *****
 C     ***** POSITIVE DENOTES IMAGINARY LINES INTERSECTING AT REAL POINT
       IF(T6-T7)335,345,340
-  335 IF(T6*1.0001  -T7)400,345,345
-  340 IF(T6-1.0001  *T7)345,345,365
+  335 IF(T6*1.0001d0  -T7)400,345,345
+  340 IF(T6-1.0001d0  *T7)345,345,365
   345 T8=DA(3,3)*(DA(1,1)+DA(2,2))
       T9=DA(1,3)**2+DA(2,3)**2
 C     ***** NEGATIVE DENOTES REAL PARALLEL LINE PAIR *****
 C     ***** POSITIVE DENOTES IMAGINARY PARALLELS *****
 C     ***** ZERO DENOTES ONE REAL LINE (COINCIDENT PARALLELS) *****
       IF(T8-T9)350,360,355
-  350 IF(T8*1.0001  -T9)400,360,360
-  355 IF(T8-1.0001  *T9)360,360,365
+  350 IF(T8*1.0001d0  -T9)400,360,360
+  355 continue
 C     ***** COINCIDENT LINE PAIR FOUND FOR THE REPEATED ROOT *****
-  360 ITYPE=3
+  360 continue
 C     ***** COMPARE AREAS OF CONICS *****
   365 KA=1
       KB=2
@@ -2898,7 +2531,7 @@
   370 KA=2
       KB=1
 C     ***** SEE IF ONE CONIC IS INSIDE THE OTHER CONIC *****
-  375 T1=0.0
+  375 T1=0d0
       DO 385 J=1,3
       T2=QA(J,3,KB)
       DO 380 K=1,2
@@ -2930,14 +2563,12 @@
 C     ***** ROUGH CHECK FOR OVERLAPPING BONDS *****
       DO 465 IQ=1,NQUAD
       TID=QUAD(9,IQ)
-      TIDD=TID
-      NA1=TID/1000.
-      NA2=AMOD(TID,1000.)
+      NA2=int(dmod(TID,1d3))
       IF(NA-NA2)435,435,465
   435 DO 445 J=1,2
-      IF(YMAX(J)-AMIN1(QUAD(J,IQ),QUAD(J+2,IQ),QUAD(J+4,IQ),QUAD(J+6,IQ)
+      IF(YMAX(J)-dmin1(QUAD(J,IQ),QUAD(J+2,IQ),QUAD(J+4,IQ),QUAD(J+6,IQ)
      1 ))465,465,440
-  440 IF(YMIN(J)-AMAX1(QUAD(J,IQ),QUAD(J+2,IQ),QUAD(J+4,IQ),QUAD(J+6,IQ)
+  440 IF(YMIN(J)-dmax1(QUAD(J,IQ),QUAD(J+2,IQ),QUAD(J+4,IQ),QUAD(J+6,IQ)
      1 ))445,465,465
   445 CONTINUE
 C     ***** EXACT CHECK FOR OVERLAPPING BONDS *****
@@ -2955,44 +2586,43 @@
       END
       SUBROUTINE LAP800(NA1,NA2,ICQ)
 C     ***** SUBROUTINE CHECKS FOR ATOMS AND BONDS OVERLAPPING A BOND ***
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION FL(4,4),Y1(2),Y2(2),YMAX(2),YMIN(2),QUA(3,4)
       DIMENSION VUE(3)
-      REAL*8 TIDD
-      COMMON/OLAP/CONIC(7,500),COVER(6,20),KC(20),KQ(30),NCONIC,NCOVER,
-     1 NQOVER,NQUAD,OVMRGN,QOVER(3,4,30),QUAD(9,600),SEGM(50,2)
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      COMMON/OLAP/CONIC(7,2500),COVER(6,20),KC(20),KQ(30),NCONIC,NCOVER,
+     1 NQOVER,NQUAD,OVMRGN,QOVER(3,4,30),QUAD(9,3000),SEGM(50,2)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
+      CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
       IQ=0
       ICQ=0
       IF(NA1*NA2)245,245,195
-  195 TID1=FLOAT(NA1)*1000.+FLOAT(NA2)
+  195 TID1=dble(NA1)*1d3+dble(NA2)
       IF(NCONIC)245,245,200
   200 IF(NJ2-21)250,205,205
 C     ***** PART 1, CALLED FROM BOND, STORES BOND OUTLINE INFORMATION **
-  205 IF(NQUAD-599)215,210,210
+  205 IF(NQUAD-2999)215,210,210
   210 NG=16
       CALL ERPNT(ATOMID(NA1),822)
       GO TO 245
   215 NQUAD=NQUAD+1
 C     ***** CALCULATE OVERLAP MARGIN FOR BOND QUADRANGLE *****
-      T1=0.0
-      T2=0.0
+      T1=0d0
+      T2=0d0
       DO 220 J=1,2
       Y1(J)=DP(J,1)-DP(J,65)
       Y2(J)=DP(J,2)-DP(J,66)
       T1=T1+Y1(J)**2
   220 T2=T2+Y2(J)**2
       IF(T1*T2)225,225,230
-  225 T1=0.0
-      T2=0.0
+  225 T1=0d0
+      T2=0d0
       GO TO 235
   230 T1=OVMRGN/SQRT(T1)
       T2=OVMRGN/SQRT(T2)
@@ -3009,7 +2639,7 @@
 C     ***** PART 2, CALLED FROM BOND, OVERLAP CHECK FOR BOND NA1-NA2 ***
   250 NCOVER=0
       NQOVER=0
-      TOL=1.E-5
+      TOL=1d-5
       IF(NCONIC-NA1)245,245,255
 C     ***** SAVE QUADRANGLE TEMPORARILY *****
   255 IQ=NQUAD+1
@@ -3021,8 +2651,8 @@
       QUAD(9,IQ)=TID1
 C     ***** FIT RECTANGLE AROUND QUADRANGLE *****
   265 DO 270 J=1,2
-      YMIN(J)=AMIN1(DP(J,1),DP(J,2),DP(J,66),DP(J,65))
-  270 YMAX(J)=AMAX1(DP(J,1),DP(J,2),DP(J,66),DP(J,65))
+      YMIN(J)=dmin1(DP(J,1),DP(J,2),DP(J,66),DP(J,65))
+  270 YMAX(J)=dmax1(DP(J,1),DP(J,2),DP(J,66),DP(J,65))
 C     ***** ROUGH CHECK FOR ATOM-OVER-BOND OVERLAP *****
       NA1P1=NA1+1
       ITY=0
@@ -3053,13 +2683,13 @@
       DO 495 IB=1,NQUAD
       TID2=QUAD(9,IB)
       IF(TID1-TID2)320,495,320
-  320 NB2=AMOD(TID2,1000.)
-      NB1=TID2/1000.
+  320 NB2=int(dmod(TID2,1d3))
+      NB1=int(TID2/1d3)
       IF(NA1-NB2)325,495,495
   325 DO 335 J=1,2
-      IF(YMAX(J)-AMIN1(QUAD(J,IB),QUAD(J+2,IB),QUAD(J+4,IB),QUAD(J+6,IB)
+      IF(YMAX(J)-dmin1(QUAD(J,IB),QUAD(J+2,IB),QUAD(J+4,IB),QUAD(J+6,IB)
      1 ))495,495,330
-  330 IF(YMIN(J)-AMAX1(QUAD(J,IB),QUAD(J+2,IB),QUAD(J+4,IB),QUAD(J+6,IB)
+  330 IF(YMIN(J)-dmax1(QUAD(J,IB),QUAD(J+2,IB),QUAD(J+4,IB),QUAD(J+6,IB)
      1 ))335,495,495
   335 CONTINUE
 C     ***** SET UP LINEAR FORMS FOR EDGES OF QUADRANGLE *****
@@ -3075,24 +2705,24 @@
   340 DO 345 J=1,3
   345 QUA(J,L)=QUA(J,L)/T1
 C     ***** EVALUATE LINEAR FORMS AND SIGNATURES FOR QUADRANGLE *****
-      T3=3.0
+      T3=3d0
       DO 365 K=1,4
-      T2=3.0
+      T2=3d0
       J=K*2
       DO 355 L=1,4
       T1=QUAD(J-1,IQ)*QUA(1,L)+QUAD(J,IQ)*QUA(2,L)+QUA(3,L)
       IF(T1)350,355,355
-  350 T2=T2-1.0
+  350 T2=T2-1d0
   355 FL(L,K)=T1
       IF(T2)360,365,365
-  360 T3=T3-1.0
+  360 T3=T3-1d0
   365 CONTINUE
 C     ***** CHECK FOR 4 POINTS INSIDE QUADRANGLE *****
       IF(T3)370,375,375
   370 ITYPE=-1
       GO TO 415
 C     ***** CHECK FOR 1 TO 3 POINTS INSIDE QUADRANGLE ****
-  375 IF(T3-3.0)380,385,385
+  375 IF(T3-3d0)380,385,385
   380 ITYPE=0
       GO TO 415
 C     ***** DETERMINE WHICH EDGES ARE CROSSED BY THE 4 LINE SEGMENTS ***
@@ -3110,7 +2740,7 @@
 C     ***** T1 AND T2 MUST HAVE OPPOSITE SIGNS FOR INTERSECTION TO OCCUR
       IF(T1*T2)390,390,405
 C     ***** COMPONENT OF SEGMENT L PERPENDICULAR TO EDGE K OF IB IS T3
-  390 IF(ABS(T3)-1.E-5)405,405,395
+  390 IF(ABS(T3)-1d-5)405,405,395
 C     ***** CALCULATE COORDINATES OF INTERSECTION *****
   395 T4=(T1*Y2(1)-T2*Y1(1))/T3
       T5=(T1*Y2(2)-T2*Y1(2))/T3
@@ -3119,7 +2749,7 @@
 C     ***** IS INTERSECTION WITHIN QUADRANGLE IQ *****
       T6=(T4-QUAD(K0-1,IB))*(QUAD(K1-1,IB)-T4)+(T5-QUAD(K0,IB))*
      1 (QUAD(K1,IB)-T5)
-      IF(ABS(T6)-1.E-4)410,410,400
+      IF(ABS(T6)-1d-4)410,410,400
   400 IF(T6)405,410,410
   405 CONTINUE
       GO TO 495
@@ -3169,29 +2799,28 @@
       SUBROUTINE LAPAB(IQ,IA,ICQ,ITY)
 C     ***** SUBROUTINE CHECKS FOR OVERLAP BETWEEN ATOMS AND BONDS *****
 C     ***** CALLED BY SUBROUTINES LAP700 AND LAP800 *****
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION BF(4),CON(3,3),QF(5),QUA(3,4)
-      COMMON/OLAP/CONIC(7,500),COVER(6,20),KC(20),KQ(30),NCONIC,NCOVER,
-     1 NQOVER,NQUAD,OVMRGN,QOVER(3,4,30),QUAD(9,600),SEGM(50,2)
-      REAL*8 TIDD
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      COMMON/OLAP/CONIC(7,2500),COVER(6,20),KC(20),KQ(30),NCONIC,NCOVER,
+     1 NQOVER,NQUAD,OVMRGN,QOVER(3,4,30),QUAD(9,3000),SEGM(50,2)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
+      CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
       TID=QUAD(9,IQ)
-      NA1=TID/1000.
-      NA2=AMOD(TID,1000.)
+      NA1=int(TID/1d3)
+      NA2=int(dmod(TID,1d3))
 C     ***** ITY.GT.0, CHECK FOR ATOMS OVER A BOND ****
 C     ***** ITY.LT.0, CHECK FOR BONDS OVER AN ATOM *****
       ICQ=0
       IF(ITY)210,200,205
   200 RETURN
-  205 CALL LAPCON(CONIC(1,IA),CON,V1,0.0)
+  205 CALL LAPCON(CONIC(1,IA),CON,V1,0d0)
       IF(ITY-2)220,240,240
   210 IF(ITY+2)220,220,215
   215 CALL LAPCON(CONIC(1,IA),CON,V1,OVMRGN)
@@ -3211,17 +2840,17 @@
   230 DO 235 J=1,3
   235 QUA(J,L)=QUA(J,L)/T1
 C     ***** EVALUATE 4 QUADRATIC AND 4 BILINEAR FORMS *****
-  240 V2(3)=1.0
-      V3(3)=1.0
-      T2=3.0
+  240 V2(3)=1d0
+      V3(3)=1d0
+      T2=3d0
       DO 265 L=1,4
       L1=(MOD(L,4)+1)*2
       V2(1)=QUAD(2*L-1,IQ)
       V2(2)=QUAD(2*L,IQ)
       V3(1)=QUAD(L1-1,IQ)
       V3(2)=QUAD(L1,IQ)
-      QF(L)=0.0
-      BF(L)=0.0
+      QF(L)=0d0
+      BF(L)=0d0
       DO 250 K=1,3
       T1=CON(3,K)
       DO 245 J=1,2
@@ -3229,9 +2858,9 @@
       QF(L)=QF(L)+T1*V2(K)
   250 BF(L)=BF(L)+T1*V3(K)
       IF(QF(L))260,255,265
-  255 T2=T2-0.8
+  255 T2=T2-0.8d0
       GO TO 265
-  260 T2=T2-1.0
+  260 T2=T2-1d0
   265 CONTINUE
       QF(5)=QF(1)
 C     ***** CHECK FOR 4 POINTS OF QUADRANGLE INSIDE OR ON ELLIPSE *****
@@ -3239,7 +2868,7 @@
   270 ITYPE=-1
       GO TO 330
 C     ***** CHECK FOR 1 TO 3 POINTS OF QUADRANGLE INSIDE THE ELLIPSE ***
-  275 IF(T2-2.2)280,285,285
+  275 IF(T2-2.2d0)280,285,285
   280 ITYPE=0
       IF(NA2-IA)340,375,335
 C     ***** CHECK FOR QUADRANGLE-ELLIPSE INTERSECTION *****
@@ -3251,20 +2880,20 @@
 C     ***** IS INTERSECTION WITHIN BOUNDS OF QUADRANGLE *****
       T3=QF(K)-BF(K)
       T4=T3+QF(K+1)-BF(K)
-      IF(ABS(T4)-1.E-5)305,305,295
+      IF(ABS(T4)-1d-5)305,305,295
   295 T5=(T3-T1)/T4
       IF(T5)305,280,300
-  300 IF(1.0-T5)305,305,280
+  300 IF(1d0-T5)305,305,280
   305 CONTINUE
 C     ***** NO VALID INTERSECTION FOUND *****
 C     ***** CHECK FOR CENTER OF ELLIPSE WITHIN THE QUADRANGLE ****
-      T3=3.0
+      T3=3d0
       DO 320 K=1,4
       T1=QUA(3,K)
       DO 310 J=1,2
   310 T1=T1+V1(J)*QUA(J,K)
       IF(T1)315,320,320
-  315 T3=T3-1.0
+  315 T3=T3-1d0
   320 CONTINUE
       IF(T3)325,370,370
   325 ITYPE=1
@@ -3276,7 +2905,7 @@
       CALL UNITY(V2,V2,1)
       CALL UNITY(V3,V3,1)
       CALL NORM(V2,V3,V4,1)
-      IF(VV(V4,V4)-1.E-5)345,345,350
+      IF(VV(V4,V4)-1d-5)345,345,350
 C     ***** CENTER OF ATOM IQ IS ON THE BOND LINE *****
   345 IF(ITY)370,370,385
 C     ***** CENTER OF ATOM IQ IS NOT ON THE BOND LINE *****
@@ -3286,7 +2915,7 @@
   355 T1=V5(3)*(ATOMS(3,IA)-VIEW)
       DO 360 J=1,2
   360 T1=T1+V5(J)*ATOMS(J,IA)
-  365 IF(T1*FLOAT(ITY))375,375,370
+  365 IF(T1*dble(ITY))375,375,370
 C     ***** NO INTERFERENCE FOUND *****
   370 ICQ=0
       GO TO 430
@@ -3326,18 +2955,19 @@
       SUBROUTINE LAPCON(CON1,CON,Y,OVMR)
 C     ***** TRANSFORM CONIC TO PLOTTER HOMOGENEOUS COORDINATE SYSTEM ***
 C     ***** CALLED BY SUBROUTINES LAP700 AND LAPAB *****
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION CON1(7),CON(3,3),Y(3)
-      Y(1)=(CON1(1)+CON1(2))*0.5
-      Y(2)=(CON1(3)+CON1(4))*0.5
-      Y(3)=1.0
+      Y(1)=(CON1(1)+CON1(2))*0.5d0
+      Y(2)=(CON1(3)+CON1(4))*0.5d0
+      Y(3)=1d0
       CON(1,1)=CON1(5)
       CON(1,2)=CON1(6)
       CON(2,1)=CON1(6)
       CON(2,2)=CON1(7)
-      T1=(CON1(2)-CON1(1)+CON1(4)-CON1(3))*0.25
-      CON(3,3)=-((T1-OVMR)/T1)**2
+      T1=(CON1(2)-CON1(1)+CON1(4)-CON1(3))*0.25d0
+      CON(3,3)=-(((T1-OVMR)/T1)**2)
       DO 205 K=1,2
-      CON(K,3)=0.0
+      CON(K,3)=0d0
       DO 200 J=1,2
   200 CON(K,3)=CON(K,3)-Y(J)*CON(J,K)
       CON(3,K)=CON(K,3)
@@ -3346,19 +2976,10 @@
       END
       SUBROUTINE LAPDRW(Y,NPEN,NCQ)
 C     ***** SUBROUTINE ELIMINATES HIDDEN LINES AND DRAWS VISIBLE LINES *
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION CB(20),CQ(50,2),QL(4,30,2),SEG(2),Y(3),YN(3),YO(3),Z(3)
-      COMMON/OLAP/CONIC(7,500),COVER(6,20),KC(20),KQ(30),NCONIC,NCOVER,
-     1 NQOVER,NQUAD,OVMRGN,QOVER(3,4,30),QUAD(9,600),SEGM(50,2)
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
-     2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
+      COMMON/OLAP/CONIC(7,2500),COVER(6,20),KC(20),KQ(30),NCONIC,NCOVER,
+     1 NQOVER,NQUAD,OVMRGN,QOVER(3,4,30),QUAD(9,3000),SEGM(50,2)
       NCQ=NCOVER+NQOVER
       IF(NCQ)200,200,205
   200 RETURN
@@ -3368,8 +2989,7 @@
 C     ***** SAVE INFORMATION FROM LAST POINT IF PEN IS DOWN *****
   210 YO(1)=YN(1)
       YO(2)=YN(2)
-      YO(3)=1.0
-      NPO=NPN
+      YO(3)=1d0
       DO 215 K=1,NCQ
   215 CQ(K,1)=CQ(K,2)
       IF(NQOVER)230,230,220
@@ -3379,7 +2999,7 @@
 C     ***** EVALUATE CONIC QUADRATIC FORMS AT NEW POINT YN *****
   230 YN(1)=Y(1)
       YN(2)=Y(2)
-      YN(3)=1.0
+      YN(3)=1d0
       NPN=NPEN
       IF(NCOVER)250,250,235
   235 DO 245 K=1,NCOVER
@@ -3395,11 +3015,11 @@
   250 IF(NQOVER)275,275,255
   255 KCQ=NCOVER
       DO 270 K=1,NQOVER
-      T2=3.0
+      T2=3d0
       DO 265 J=1,4
       T1=YN(1)*QOVER(1,J,K)+YN(2)*QOVER(2,J,K)+QOVER(3,J,K)
       IF(T1)260,265,265
-  260 T2=T2-1.0
+  260 T2=T2-1d0
   265 QL(J,K,2)=T1
       KCQ=KCQ+1
 C     ***** T2=-1 INSIDE, =0 ACROSS ANY EDGE, =1 ACROSS ANY VERTEX *****
@@ -3425,11 +3045,11 @@
 C     ***** SOLVE QUADRATIC EQATION *****
       T2=CQ(K,1)-CB(K)
       T3=T2+CQ(K,2)-CB(K)
-      IF(ABS(T3)-1.E-5)325,325,310
+      IF(ABS(T3)-1d-5)325,325,310
   310 T4=(T2-T1)/T3
       T5=(T2+T1)/T3
 C     ***** VALID INTERSECTION IF T4.LT.1 AND T5.GT.0 *****
-      IF(T4-1.0)315,325,325
+      IF(T4-1d0)315,325,325
   315 IF(T5)325,325,320
 C     ***** SAVE VALID CONIC INTERSECTIONS *****
   320 NINT=NINT+1
@@ -3444,8 +3064,8 @@
 C     ***** CHECK FOR SINGLE INSIDE POINT *****
       SEG(1)=CQ(KCQ,1)
       IF(SEG(1))345,340,340
-  340 SEG(1)=1.0-CQ(KCQ,2)
-      IF(SEG(1)-1.0)350,350,345
+  340 SEG(1)=1d0-CQ(KCQ,2)
+      IF(SEG(1)-1d0)350,350,345
 C     ***** INSIDE POINT FOUND, ONLY ONE INTERSECTION POSSIBLE *****
   345 I12=1
 C     ***** FIND WHICH EDGES ARE CROSSED BY THE SEGMENT *****
@@ -3455,7 +3075,7 @@
       T3=T1-T2
       IF(T1*T2)355,355,410
 C     ***** CHECK FOR SEGMENT ON AN EDGE *****
-  355 IF(ABS(T3)-1.E-5)420,420,360
+  355 IF(ABS(T3)-1d-5)420,420,360
 C     ***** CALCULATE COORDINATES OF INTERSECTION *****
   360 T4=(T1*YN(1)-T2*YO(1))/T3
       T5=(T1*YN(2)-T2*YO(2))/T3
@@ -3464,7 +3084,7 @@
 C     ***** IS INTERSECTION WITHIN LIMITS OF QUADRANGLE *****
       T6=(T4-QUAD(2*J-1,IQ))*(QUAD(J1-1,IQ)-T4)+(T5-QUAD(2*J,IQ))*
      1 (QUAD(J1,IQ)-T5)
-      IF(ABS(T6)-1.E-4)370,370,365
+      IF(ABS(T6)-1d-4)370,370,365
   365 IF(T6)410,370,370
 C     ***** CALCULATE FRACTION PARAMETER AND STORE IT *****
   370 T1=T1/T3
@@ -3516,77 +3136,35 @@
   485 J=J+1
       IF(J-K)450,450,440
 C     ***** FIND STARTING POINT P0 AND END POINT P1 *****
-  490 P0=0.0
+  490 P0=0d0
       K=0
   495 K=K+1
       IF(K-NINT)500,500,515
   500 P1=SEGM(K,1)
       IF(P1)510,505,505
   505 IF(P1-P0)510,510,520
-  510 P0=AMAX1(P0,SEGM(K,2))
-      IF(P0-1.0)495,530,525
-  515 P1=1.0
+  510 P0=dmax1(P0,SEGM(K,2))
+      IF(P0-1d0)495,530,525
+  515 P1=1d0
 C     ***** DRAW SEGMENT FROM P0 TO P1 *****
   520 IF(P0)535,535,530
-  525 P0=1.0
-  530 Z(1)=YO(1)*(1.-P0)+YN(1)*P0
-      Z(2)=YO(2)*(1.-P0)+YN(2)*P0
+  525 P0=1d0
+  530 Z(1)=YO(1)*(1d0-P0)+YN(1)*P0
+      Z(2)=YO(2)*(1d0-P0)+YN(2)*P0
       NPN=3
       CALL SCRIBE(Z,NPN)
-      IF(P0-1.0)535,540,540
-  535 Z(1)=YO(1)*(1.-P1)+YN(1)*P1
-      Z(2)=YO(2)*(1.-P1)+YN(2)*P1
+      IF(P0-1d0)535,540,540
+  535 Z(1)=YO(1)*(1d0-P1)+YN(1)*P1
+      Z(2)=YO(2)*(1d0-P1)+YN(2)*P1
       NPN=2
       CALL SCRIBE(Z,NPN)
-      IF(P1-1.0)510,540,540
+      IF(P1-1d0)510,540,540
   540 RETURN
       END
-      character*(*) function maksym(k,gp)
-c *** returns character string representation of symmetry operator
-      dimension gp(3,4,192)
-      character*1 xyz(3)
-      character*5 fract(23)
-      character*12 part(3)
-      data fract/'1/24','1/12','1/8','1/6','5/24','1/4','7/24','1/3',
-     *           '3/8','5/12','11/24','1/2','13/24','7/12','5/8','2/3',
-     *           '17/24','3/4','19/24','5/6','7/8','11/12','23/24'/
-      data xyz/'x','y','z'/
-      do 200 i=1,3
-         part(i) = ' '
-         iff = 0
-         do 300 j=1,3
-            if (ifix(gp(i,j,k)) .ne. 0) then
-               if (ifix(gp(i,j,k)) .eq. -1)
-     *            part(i) = part(i)(1:iend(part(i))) // '-' // xyz(j)
-               if (ifix(gp(i,j,k)) .eq. 1 .and. iff .eq. 0)
-     *            part(i) = part(i)(1:iend(part(i))) // ' ' // xyz(j)
-               if (ifix(gp(i,j,k)) .eq. 1 .and. iff .eq. 1)
-     *            part(i) = part(i)(1:iend(part(i))) // '+' // xyz(j)
-               iff = 1
-            end if
-  300    continue
-         gpval = gp(i,4,k)
-         if(gpval.gt..01 .or. gpval.lt.-.01) then
-            if (gpval.lt.0.) then
-               part(i) = part(i)(1:iend(part(i))) // '-'
-            else
-               part(i) = part(i)(1:iend(part(i))) // '+'
-            end if
-            gpval=abs(gpval)
-            tfour=1./24.
-            do 301 mm=1,23
-               tf=float(mm)*tfour
-               if (gpval.gt.(tf-.01) .and. gpval.lt.(tf+.01)) iw=mm
-  301       continue
-            part(i) = part(i)(1:iend(part(i))) // fract(iw)
-         end if
-  200 continue
-      maksym = part(1) // part(2) // part(3)
-      return
-      end
       SUBROUTINE MM(X,Y,Z)
 C     MULTIPLY TWO MATRICES
 C     Z(3,3)=X(3,3)*Y(3,3)
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION X(3,3),Y(3,3),Z(3,3)
       X11=X(1,1)
       X12=X(1,2)
@@ -3620,6 +3198,7 @@
       SUBROUTINE MV(X,Y,Z)
 C     MATRIX * VECTOR
 C     Z(3)=X(3,3)*Y(3)
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION X(3,3),Y(3),Z(3)
       Y1=Y(1)
       Y2=Y(2)
@@ -3632,17 +3211,17 @@
       SUBROUTINE NORM(X,Y,Z,ITYPE)
 C     ***** VECTOR PRODUCT  Z=X*Y *****
 C     ***** ITYPE .GT.0 FOR CARTESIAN,.LE.0 FOR TRICLINIC *****
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION X(3),Y(3),Z(3),Z1(3)
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
+      CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
       DO 125 I=1,3
       I1=MOD(I+3,3)+1
       I2=MOD(I+1,3)+1
@@ -3658,6 +3237,7 @@
       END
       SUBROUTINE NUMBUR(W,W2,HGT,DIST,THT,ND)
 C-----CONVERT BOND DISTANCE FOR PLOTTING IN ORTEP
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION W(3)
       CHARACTER*8 IFMT,ITXT 
       CHARACTER*1 ITEX(8)
@@ -3665,10 +3245,10 @@
 C-----COMPUTE NUMBER OF CHARACTERS FOR OUTPUT
       NC=ND+1
       XD=DIST
-   10 IF(XD.LT.1.0) GO TO 20
+   10 IF(XD.LT.1d0) GO TO 20
       IF(NC.GE.9) GO TO 30
       NC=NC+1
-      XD=XD/10.0
+      XD=XD/10d0
       GO TO 10
 C-----SET UP FORMAT STATEMENT
    20 WRITE (IFMT,25) NC,ND
@@ -3685,30 +3265,29 @@
 C     ***** =2 OR 3 FOR WORKING OR REFERENCE CARTESIAN SYSTEMS *****
 C     ***** CONTRAVARIANT EIGENVECTORS FOR Q IN COLUMNS OF PAC *****
 C     ***** CHECK ATOM CODE *****
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION X(3)
-      REAL*8 DCODE,D100,D100K
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
       CHARACTER*8 CHEM
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
-      INTEGER*2 IDENT           
-      COMMON /PARMS/ CHEM(505),EV(3,505),P(3,505),PA(3,3,505)        
-     1 ,IDENT(2,505),MAXATM
-      D100=100.
-      D100K=100000.
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
+      CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
+      COMMON /PARMS/ EV(3,2525),P(3,2525),PA(3,3,2525),IDENT(2,2525),
+     1 MAXATM
+      COMMON /PARMSA/ CHEM(2525)
+      D100=1d2
+      D100K=1d5
       IT=IABS(ITYPE)-1
-      KS=DMOD(DCODE,D100)
+      KS=int(DMOD(DCODE,D100))
       IF(NSYM-KS)105,115,115
   105 NG=4
       GO TO 300
-  115 II=DCODE/D100K
+  115 II=int(DCODE/D100K)
       IF(NATOM-II)125,130,130
   125 NG=5
       GO TO 300
@@ -3731,14 +3310,14 @@
   175 DO 205 J=1,3
       T1=EV(J,II)
       IF(ITYPE)195,195,185
-  185 X(J)=1./(T1*T1)
+  185 X(J)=1d0/(T1*T1)
       GO TO 205
   195 X(J)=T1*T1
   205 RMS(J)=T1
 C     ***** FORM QUADRATIC FORM *****
       DO 245 I=1,3
       DO 245 J=I,3
-      T1=0.0
+      T1=0d0
       DO 225 K=1,3
   225 T1=T1+PAC(I,K)*PAC(J,K)*X(K)
       Q(J,I)=T1
@@ -3747,37 +3326,38 @@
       END
       SUBROUTINE PLTXY(X,Y)
 C     ***** PLOT COORD. AND CLOSEST EDGE AFTER PROJECTION *****
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION X(3),Y(2)
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
-      T4=1.
-      T1=1.
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
+      CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
+      T4=1d0
+      T1=1d0
       IF(VIEW)125,125,110
   110 T4=VIEW-X(3)
       IF(T4)115,115,120
-  115 Y(1)=-99.
-      Y(2)=-99.
+  115 Y(1)=-99d0
+      Y(2)=-99d0
       GO TO 130
   120 T1=VIEW/T4
   125 Y(1)=X(1)*T1+XO(1)
       Y(2)=X(2)*T1+XO(2)
-      T1=XLNG(1)-ABS(Y(1)*2.-XLNG(1))
-      T2=XLNG(2)-ABS(Y(2)*2.-XLNG(2))
-      EDGE=AMIN1(T1,T2)*.5
-      IF(T4-VIEW*.5)130,300,300
-  130 EDGE=-99.
+      T1=XLNG(1)-ABS(Y(1)*2d0-XLNG(1))
+      T2=XLNG(2)-ABS(Y(2)*2d0-XLNG(2))
+      EDGE=dmin1(T1,T2)*.5d0
+      IF(T4-VIEW*.5d0)130,300,300
+  130 EDGE=-99d0
   300 RETURN
       END
       SUBROUTINE PLOT(x,y,ipen)
-      common /ns/ npf,ndraw,norient,nvar
+      implicit integer (I-N), double precision(A-H, O-Z)
+      common /ns/ npf,ndraw,NORIEN,nvar
       if (ndraw .eq. 0) return
       if (ndraw .eq. 1) call pensc(x,y,ipen)
       if (ndraw .eq. 2) call penps(x,y,ipen)
@@ -3787,48 +3367,46 @@
       end
       SUBROUTINE PRELIM
 C     ***** DATA INPUT ROUTINE *****
-      REAL*8 TD
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION B(9)
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
       CHARACTER*8 CHEM
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
-      INTEGER*2 IDENT           
-      COMMON /PARMS/ CHEM(505),EV(3,505),P(3,505),PA(3,3,505)        
-     1 ,IDENT(2,505),MAXATM
-      COMMON /QUEUE/ NED,NQUE,NEXT,NBACK,INQ,QUE(96),hque(96)
-      CHARACTER*73 INQ,QUE,hque
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
+      CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
+      COMMON /PARMS/ EV(3,2525),P(3,2525),PA(3,3,2525),IDENT(2,2525),
+     1 MAXATM
+      COMMON /PARMSA/ CHEM(2525)
+      COMMON /QUEUE/ NQUE,NEXT,NBACK
+      COMMON /QUEUEA/ INQ,QUE(960)
+      CHARACTER*73 INQ,QUE
       character*80 card
-      character*24 sympart(3)
+      character*24 SYMPRT(3)
       dimension fsym(3,4)
-      character*36 maksym
 C     ***** CELL DIMENSIONS *****
-      D100K=100000.
+      D100K=1d5
   106 FORMAT(i1,f8.6,5F9.6)
       READ (IN,107)card
   107 format(a)
-      write (NED,107) card
       READ (card,106)iflag,(A(I),I=1,6)
-      T1=ABS(A(4))-1.
+      T1=ABS(A(4))-1d0
       DO 125 J=1,3
       IF(T1)115,110,110
 C     ***** CELL ANGLES IN DEGREES *****
   110 A(J+6)=A(J+3)
-      A(J+3)=COS(A(J+6)*1.745329E-2)
+      A(J+3)=dCOS(A(J+6)*1.745329d-2)
       GO TO 120
 C     ***** COSINES OF CELL ANGLES *****
   115 A(J+6)=ARCCOS(A(J+3))
 C     ***** STORE IDEMFACTOR MATRIX *****
-  120 AID(J,J)=1.
-      AID(J+1,1)=0.
-      AID(J+5,1)=0.
+  120 AID(J,J)=1d0
+      AID(J+1,1)=0d0
+      AID(J+5,1)=0d0
 C     ***** STORE METRIC TENSOR *****
   125 AA(J,J)=A(J)**2
       AA(1,2)=A(1)*A(2)*A(6)
@@ -3848,7 +3426,7 @@
       DO 130 J=1,3
   130 B(J+6)=ARCCOS(B(J+3))
 C     ***** WAS INPUT FOR REAL OR RECIPROCAL CELL *****
-      IF(A(1)-1.)135,150,150
+      IF(A(1)-1d0)135,150,150
   135 DO 140 J=1,9
       T1=AA(J,1)
       AA(J,1)=BB(J,1)
@@ -3856,20 +3434,7 @@
       T1=A(J)
       A(J)=B(J)
   140 B(J)=T1
-C     ***** WRITE OUT CELL PARAMETERS *****
-  143 FORMAT(1H0,10X,22HDIRECT CELL PARAMETERS/1H ,15X,1HA,14X,1HB,14X,
-     11HC,14X,5HALPHA,10X,4HBETA,11X,5HGAMMA)
-  145 FORMAT(1H ,10X,F9.5,2F15.6,3F15.3/1H ,48X,6HCOSINE,F12.8,2F15.8)
-  147 FORMAT(1H0,10X,26HRECIPROCAL CELL PARAMETERS/1H ,15X,2HA*,13X,
-     12HB*,13X,2HC*,13X,6HALPHA*,9X,5HBETA*,10X,6HGAMMA*)
-  150 IF (NOUT.GE.0)
-     &WRITE (NOUT,143)
-      IF (NOUT.GE.0)
-     &WRITE (NOUT,145)(A(I),I=1,3),(A(I),I=7,9),(A(I),I=4,6)
-      IF (NOUT.GE.0)
-     &WRITE (NOUT,147)
-      IF (NOUT.GE.0)
-     &WRITE (NOUT,145)(B(I),I=1,3),(B(I),I=7,9),(B(I),I=4,6)
+  150 continue
 C     ***** STORE STANDARD VECTORS *****
       CALL AXES(AID,AID(1,2),REFV,0)
       CALL MM(AA,REFV,AAREV)
@@ -3879,20 +3444,11 @@
       Q(J,I)=REFV(I,J)
   160 WRKV(J,I)=REFV(J,I)
 C     ***** READ AND WRITE SYMMETRY TRANSFORMATIONS *****
-  171 FORMAT(1H0,10X,24HSYMMETRY TRANSFORMATIONS/1H ,14X,3HNO.)
-c 171 FORMAT(1H010X,24HSYMMETRY TRANSFORMATIONS/1H 14X,3HNO.12X,13HTRANS
-c    1FORMED X18X,13HTRANSFORMED Y18X,13HTRANSFORMED Z)
   173 FORMAT(I1,F14.10,3F3.0,2(F15.10,3F3.0))
-  175 FORMAT(1H ,13X,I2,3(F13.6,F4.0,2H X,F4.0,2H Y,F4.0,2H Z))
-  176 FORMAT(1H ,13X,I2,5x,a)
-  177 FORMAT(1H1,10X,18A4)
-      IF (NOUT.GE.0)
-     &WRITE (NOUT,171)
       LINES=14
       DO 190 I=1,96
       LINES=MOD(LINES+1,56)
       READ (IN,107)card
-      write (NED,107) card
       if(iflag.eq.0)READ(card,173)IS,(TS(J,I),(FS(K,J,I),K=1,3),J=1,3)      
       if (iflag.eq.1) then
          read (card,1771) is
@@ -3900,7 +3456,7 @@
          ipart=1
          do 1772 jk=1,3
          do 1772 kl=1,24
- 1772    sympart(jk)(kl:kl)=' ' 
+ 1772    SYMPRT(jk)(kl:kl)=' ' 
          jk=2
  1773    if (card(jk:jk).eq.' ') go to 1776
          lm=1
@@ -3909,34 +3465,28 @@
                jk=kl
                go to 1775
             end if
-            sympart(ipart)(lm:lm)=card(kl:kl)
+            SYMPRT(ipart)(lm:lm)=card(kl:kl)
             lm=lm+1
  1774    continue
  1775    ipart=ipart+1
  1776    jk=jk+1
          if (jk.lt.80) go to 1773
          do 1777 isymp=1,3
-            call tepsym(sympart(isymp),i,isymp)
+            call tepsym(SYMPRT(isymp),i,isymp)
  1777    continue
       end if
       do 178 j=1,3
          fsym(j,4)=ts(j,i)
          do 178 k=1,3
   178       fsym(j,k)=fs(k,j,i)
-      IF(LINES)185,180,185
-  180 IF (NOUT.GE.0)
-     &WRITE (NOUT,177)(TITLE(J),J=1,18)
-      IF (NOUT.GE.0)
-     &WRITE (NOUT,171)
+  180 continue
 c *** ORTEP II symmetry output
-c 185 IF (NOUT.GE.0)
-c    &WRITE (NOUT,175)I,(TS(J,I),(FS(K,J,I),K=1,3),J=1,3)
-  185 if (nout.ge.0) WRITE (NOUT,176)I,maksym(1,fsym)
+  185 continue
 C     ***** NON-CRYSTALLOGRAPHIC HELIX-SYMMETRY INPUT *****
-      IF(FS(3,3,I)-5.)188,186,186
+      IF(FS(3,3,I)-5d0)188,186,186
   186 T1=FS(1,3,I)/FS(3,3,I)
       TS(3,I)=TS(3,I)+T1
-      T1=AMOD(T1*FS(2,3,I),1.)*6.28318531
+      T1=dmod(T1*FS(2,3,I),1d0)*6.28318531d0
       T2=COS(T1)
       T1=SIN(T1)
       DO 187 J=1,9
@@ -3956,58 +3506,31 @@
   196 ISW=IS
       NATOM=0
 C     ***** POSITIONAL AND THERMAL PARAMETERS *****
-  207 FORMAT(11H0 NO. ATOM ,8X,1HX,10X,1HY,10X,1HZ,13X,3HB11,8X,3HB22,
-     18X,3HB33,8X,3HB12,8X,3HB13,8X,10HB23   TYPE)
-  209 FORMAT(1H ,I3,1X,A6,3F11.6,5X,6F11.6,F5.0)
-  210 FORMAT(1H ,I3,1X,A6,3F11.6,5X,2F11.6,4F11.0,F5.0)
   211 FORMAT(A6,3X,6F9.0)
   213 FORMAT(I1,F8.0,5F9.0,7X,F2.0)
       LINES=LINES+2
       IF(LINES-56)220,215,215
   215 LINES=-1
-      GO TO 225
-  220 IF (NOUT.GE.0)
-     &WRITE (NOUT,207)
-      if (isw.eq.2) then
-         iu=18
-         call gtafil(iu)
-      end if
-C     ***** MAXIMUM NUMBER OF ATOMS EQUALS MAXATM *****
+  220 continue
   225 MATOM=NATOM+1
       DO 245 I=MATOM,MAXATM
       LINES=MOD(LINES+1,56)
-      IF(ISW.EQ.1) GO TO 226
-C     ***** CALL SPECIAL PURPOSE READIN ROUTINE *****
-      CALL readin(iu,CHEM(I),IDENT(1,I),IDENT(2,I),P(1,I),P(2,I),P(3,I)     
-     1,IT1,IS,PA(1,1,I),PA(2,1,I),PA(3,1,I),PA(1,2,I),PA(2,2,I)           
-     2,PA(3,2,I),PA(1,3,I))
-      T1=IT1 
-      K=IT1+1
-      GO TO 229 
   226 continue
       READ (IN,107)card
-      write (NED,107) card
       READ (card,211)CHEM(I),V1(1),V1(2),(P(J,I),J=1,3),T1
-      IDENT(1,I)=V1(1)
-      IDENT(2,I)=V1(2)
-      K=1.+T1
-      IF(FLOAT(K-1)-T1)227,228,227
+      IDENT(1,I)=int(V1(1))
+      IDENT(2,I)=int(V1(2))
+      K=int(T1)+1
+      IF(dble(K-1)-T1)227,228,227
   227 K=1
   228 continue
       READ (IN,107)card
-      write (NED,107) card
       READ (card,213)IS,(PA(J,1,I),J=1,7)
-  229 IF(LINES)230,230,232
-  230 IF (NOUT.GE.0)
-     &WRITE (NOUT,177)(TITLE(J),J=1,18)
-      IF (NOUT.GE.0)
-     &WRITE (NOUT,207)
-  232 IF(PA(3,1,I)-10000.)235,234,234
-  234 IF (NOUT.GE.0)
-     &WRITE (NOUT,210)I,CHEM(I),(P(J,I),J=1,3),(PA(J,1,I),J=1,7)
-      GO TO 238
-  235 IF (NOUT.GE.0)
-     &WRITE (NOUT,209)I,CHEM(I),(P(J,I),J=1,3),(PA(J,1,I),J=1,7)
+  229 continue
+  230 continue
+  232 continue
+  234 continue
+  235 continue
   238 GO TO (244,239,241,242,244),K
 C     ***** TYPE 1 POSITIONAL PARAMETERS (ANGSTROMS) *****
   239 DO 240 J=1,3
@@ -4019,7 +3542,7 @@
       GO TO 243
 C     ***** TYPE 3 POSITIONAL PARAMETERS *****
 C     ***** CYLINDRICAL COORDINATES REFERRED TO STANDARD CARTESIAN *****
-  242 T2=P(2,I)*.01745329252
+  242 T2=P(2,I)*.01745329252d0
       V1(1)=V1(1)+P(1,I)*COS(T2)
       V1(2)=V1(2)+P(1,I)*SIN(T2)
   243 V1(3)=P(3,I)
@@ -4037,18 +3560,18 @@
       T1=PA(1,1,I)
 c     interim fix for IBM AIX
       K9=7
-      K=1.+PA(K9,1,I)
+      K=int(PA(K9,1,I))+1
       IF(T1)255,250,255
-  250 T1=.1
+  250 T1=.1d0
       GO TO 405
-  255 T6=.0506605918
+  255 T6=.0506605918d0
       GO TO(270,260,265,265,270,260,400,405,270,260,270,450),K
 C     ***** TYPE 1 *****
   260 DO 262 J=4,6
-  262 PA(J,1,I)=PA(J,1,I)*.5
+  262 PA(J,1,I)=PA(J,1,I)*.5d0
       GO TO 270
 C     ***** TYPES 2 AND 3 (BASE 2 SYSTEMS) *****
-  265 T6=.351152464
+  265 T6=.351152464d0
       IF(K-4)270,260,270
 C     ***** TYPES 0 THROUGH 5 *****
   270 IF(PA(2,1,I))400,400,272
@@ -4058,13 +3581,13 @@
       IF(K-5)285,275,275
   275 IF(K-6)280,280,281
 C     ***** TYPES 4 AND 5 *****
-  280 T2=B(J)*B(L)*T2*.25
+  280 T2=B(J)*B(L)*T2*.25d0
       GO TO 285
 C     ***** TYPES 8 AND 9 (U(I,J) TENSOR SYSTEMS) *****
   281 T2=B(J)*B(L)
       IF(K-11)285,282,282
 C     ***** TYPE 10, (CARTESIAN TENSOR SYSTEM) *****
-  282 T2=1.0
+  282 T2=1d0
   285 IF(J-L)290,287,290
   287 VT(J,J)=T2*PA(J,1,I)
       GO TO 300
@@ -4085,7 +3608,7 @@
   330 NG1=1
       CALL ERPNT(DBLE(I)*D100K+55501.D0,0)
 C     ***** 3 EQUAL EIGENVALUES, USE REFERENCE VECTORS *****
-  340 T3=SIGN(SQRT(ABS(RMS(1)+RMS(2)+RMS(3))/3.),RMS(1))
+  340 T3=SIGN(SQRT(ABS(RMS(1)+RMS(2)+RMS(3))/3d0),RMS(1))
       DO 345 J=1,3
       DO 342 K=1,3
   342 PA(J,K,I)=REFV(J,K)
@@ -4096,7 +3619,7 @@
   352 N=NG+5
       CALL UNITY(PAT(1,N),V1,-1)
       DO 354 K=1,3
-      IF(ABS(VMV(V1,AA,REFV(1,K)))-.58)356,354,354
+      IF(ABS(VMV(V1,AA,REFV(1,K)))-.58d0)356,354,354
   354 CONTINUE
   356 CALL MM(AA,DA,VT)
       CALL AXES(V1,REFV(1,K),DA,-1)
@@ -4115,7 +3638,7 @@
   375 EV(J,I)=SIGN(SQRT(ABS(T2)),T2)
       GO TO 450
 C     ***** TYPE 6 (ISOTROPIC TEMP FACTOR) *****
-  400 T1=SQRT(T1*1.266515E-2)
+  400 T1=SQRT(T1*1.266515d-2)
 C     ***** TYPE 7 (DUMMY SPHERE OR ELLIPSOID OF REVOLUTION) *****
   405 IF(PA(2,1,I))409,409,406
 C     ***** ELLIPSOID OF REVOLUTION FOR PASS OR PALE *****
@@ -4142,7 +3665,7 @@
 C     ***** SECOND DEFINED VECTOR FOR SPHERE OR CRITICAL POINT *****
       DO 420 J=3,4
       TD=PA(J+2,1,I)
-      IF(TD.EQ.0.0)GO TO 422
+      IF(TD.EQ.0d0)GO TO 422
       CALL ATOM(TD,VT(1,J))
       IF(NG)419,420,419
   419 CALL ERPNT(TD,0)
@@ -4153,9 +3676,9 @@
       DO 421 J=1,3
   421 V2(J)=V2(J)/T11
 C     ***** CHECK FOR NEARLY PARALLEL UNIT VECTORS *****
-      IF(ABS(VMV(V1,AA,V2)).LT.0.9) GO TO 429
+      IF(ABS(VMV(V1,AA,V2)).LT.0.9d0) GO TO 429
 C     ***** SUBSTITUTE BEST REFERENCE VECTOR *****
-  422 T22=1.0
+  422 T22=1d0
       J22=0
       DO 424 J=1,3
       T11=ABS(VMV(V1,AA,REFV(1,J)))
@@ -4175,80 +3698,69 @@
       LINES=LINES+2
       IF(LINES-56)458,458,455
   455 LINES=-1
-      GO TO 460
-  458 IF (NOUT.GE.0)
-     &WRITE (NOUT,461)
+  458 continue
   460 DO 465 I=1,NATOM
       LINES=MOD(LINES+1,56)
-      IF(LINES)465,462,465
-  461 FORMAT(10H0NO. ATOM ,8X,1HX,10X,1HY,10X,1HZ,13X,7HRMSD 1 ,4X,
-     17HRMSD 2 ,4X,7HRMSD 3 )
-  462 IF (NOUT.GE.0)
-     &WRITE (NOUT,177)(TITLE(J),J=1,18)
-      IF (NOUT.GE.0)
-     &WRITE (NOUT,461)
-  463 FORMAT(1H ,I3,1X,A6,3F11.6)
-  465 IF (NOUT.GE.0)
-     &WRITE (NOUT,209)I,CHEM(I),(P(J,I),J=1,3),(EV(J,I),J=1,3
-     1)
+  465 continue
       IF(NG1)999,999,470
   470 CALL EXITNG(NG)
   999 RETURN
       END
       SUBROUTINE PRIME
 C     ****GENERAL INITIALIZATION OF PRIME PARAMETERS****
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
+      implicit integer (I-N), double precision(A-H, O-Z)
       CHARACTER*8 CHEM
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
-      INTEGER*2 IDENT           
-      COMMON /PARMS/ CHEM(505),EV(3,505),P(3,505),PA(3,3,505)        
-     1 ,IDENT(2,505),MAXATM
-      BRDR=0.5
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
+      CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
+      COMMON /PARMS/ EV(3,2525),P(3,2525),PA(3,3,2525),IDENT(2,2525),
+     1 MAXATM
+      COMMON /PARMSA/ CHEM(2525)
+      BRDR=0.5d0
 C     ****CALCULATE CONSTANTS****
       DO 2950 I=1,5
- 2950 CONT(I)=SQRT(1./(2.*(1.+COS(3.141593   /2.**I))))
+ 2950 CONT(I)=SQRT(1d0/(2d0*(1d0+COS(3.1415927d0/2d0**I))))
 c     DISP=.005
-      disp=0.
-      FORE=.866
+      disp=0d0
+      FORE=.866d0
       ITILT=0
       LATM=0
-      MAXATM=505
+      MAXATM=2525
       NCD=0
       NG=0
       DO 3000 J=1,3
- 3000 ORGN(J) = 0.0
-      RES(1)=.75
-      RES(2)=.5*res(1)
-      RES(3)=.25*res(2)
-      SCAL1=1.0
-      SCAL2=1.54
-      SCL=1.54
+ 3000 ORGN(J) = 0d0
+      RES(1)=.75d0
+      RES(2)=.5d0*res(1)
+      RES(3)=.25d0*res(2)
+      SCAL1=1d0
+      SCAL2=1.54d0
+      SCL=1.54d0
       DO 3005 I=1,3
-      SYMB(I,I)=1.
-      SYMB(I+1,1)=0.
- 3005 SYMB(I+5,1)=0.
-      TAPER=.375
-      THETA=0.0
-      VIEW=0.0
-      XLNG(1)=10.5
-      XLNG(2)=8.0
-      XO(1)=5.25
-      XO(2)=4.0
-      XO(3)=0.0
+      SYMB(I,I)=1d0
+      SYMB(I+1,1)=0d0
+ 3005 SYMB(I+5,1)=0d0
+      TAPER=.375d0
+      THETA=0d0
+      VIEW=0d0
+      XLNG(1)=10.5d0
+      XLNG(2)=8d0
+      XO(1)=5.25d0
+      XO(2)=4d0
+      XO(3)=0d0
 C     ***** INITIATE OVERLAP ROUTINES *****
       CALL LAP500(0)
       RETURN
       END
       SUBROUTINE PROJ(D,DP,X,XO,VIEW,I1,I2,I3)
 C     ***** 3D CARTESIAN TO 2D PLOTTER COORDINATES *****
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION D(3,129),DP(2,129),X(3),XO(3)
       T3=VIEW-X(3)
       DO 145 I=I1,I2,I3
@@ -4266,16 +3778,16 @@
 C     ***** GENERATE ELLIPSE FROM TWO CONJUGATE VECTORS *****
 C     ***** ORTHONORMAL VECTORS PRODUCE 8-128 SPOKED CIRCLE *****
 C     ***** ND DENOTES NUMBER OF SUBDIVISIONS (1 TO 5) *****
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      implicit integer (I-N), double precision(A-H, O-Z)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
+      CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
       DO 115 J=1,3
       T1=DA(J,1)
       D(J,1)=T1
@@ -4298,79 +3810,9 @@
   135 D(N,M+64)=-T2
       RETURN
       END
-      subroutine readin(iu,chem,id1,id2,x1,x2,x3,it,is,b1,b2,b3,b4,
-     1                 b5,b6,btype)
-      integer*2 id1,id2
-      character*1 chain
-      character*3 res
-      character*4 atom
-      character*6 rec
-      character*8 chem
-      b1=.1
-      b2=0
-      b3=0
-      b4=0
-      b5=0
-      b6=0
-      btype=7.
-      id1=0
-      id2=0
-      it=2 
-c     ***** read the pdb file *****
-      read (iu,201) rec,iserno,atom,res,chain,id2,x1,x2,x3,occ,tf
-  201 format(a6,i5,1x,a4,1x,a3,1x,a1,i4,4x,3f8.0,2f6.0)
-      id1=9
-      if (atom.eq.' N  ') id1=1
-      if (atom.eq.' CA ') id1=2
-      if (atom.eq.' C  ') id1=3
-      if (atom.eq.' O  ') then
-         id1=4
-         b1=.15
-      end if
-      chem=atom(2:4)//res
-      is=0 
-      read (iu,202,end=203) rec
-  202 format(a6)
-      backspace(iu)
-      return
-  203 is=1
-      return  
-      end
-      SUBROUTINE recycle
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
-     2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
-      COMMON /QUEUE/ NED,NQUE,NEXT,NBACK,INQ,QUE(96),hque(96)
-      CHARACTER*73 INQ,QUE,hque
-      common /ns/ npf,ndraw,norient,nvar
-  
-      if (ndraw.eq.2 .or. ndraw.eq.3) call getpap
-
-c *** find 201(203) instruction
-      do 545 i=1,nque
-         if (que(i)(7:9).eq.'201' .or. que(i)(7:9).eq.'203') then
-            next=i
-            go to 570
-         end if
-  545 continue
-C *** ZERO ATOMS ARRAY AND RETURN TO EXECUTE NEXT INSTRUCTION ***
-  570 LATM=0
-      DO 580 I=1,500
-      ATOMID(I)=0.
-      DO 580 J=1,3
-  580 ATOMS(J,I)=0.
-      RETURN
-      END
       SUBROUTINE SCRIBE(Y,NPEN)
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION Y(2),YO(2)
-      SAVE NPO, YO 
 C     ***** SUBROUTINE WHICH LINKS WITH THE PLOTTER-SPECIFIC SUBROUTINES
       IF(NPEN-3)210,205,205
 C     ***** KEEP TRACK OF COORDINATES FOR LAST PEN-UP LOCATION *****
@@ -4388,76 +3830,61 @@
       RETURN
       END
       SUBROUTINE SEARC
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION NW(6),DX(3),S1D(200),S2(200),U(3),V(3),W(2,4),WW(2,3)
       DIMENSION X(4),Y(3),Z(3)
-      REAL*8 DZMIN,DZMAX,DZSTO,S1D,TD1,TD2,TD3,TD4,D10K,D100K
-      REAL*8 TD
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
       CHARACTER*8 CHEM
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
-      INTEGER*2 IDENT           
-      COMMON /PARMS/ CHEM(505),EV(3,505),P(3,505),PA(3,3,505)        
-     1 ,IDENT(2,505),MAXATM
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
+      CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
+      COMMON /PARMS/ EV(3,2525),P(3,2525),PA(3,3,2525),IDENT(2,2525),
+     1 MAXATM
+      COMMON /PARMSA/ CHEM(2525)
       logical featur
       featur=.false.
-      ifeat=ain(6)
+      ifeat=int(ain(6))
       if ((ifeat.eq.1 .or. ifeat.eq.2) .and.
      &    (mod(nj2,10).eq.5 .or. mod(nj2,10).eq.6)) featur=.true.
 C     ***** OBTAIN PROBLEM PARAMETERS *****
-      D10K=10000.
-      D100K=100000.
-      IF (NOUT.GE.0)
-     &WRITE (NOUT,20)
-   20 FORMAT(1H0,9X,82H        FROM ATOMS    TO ATOMS     WITH RADIUS OR
-     1, IF A BOX, WITH SEMIDIMENSIONS  /11X,46HCODE   (MIN  MAX)   (MIN 
-     2 MAX)                ,7X,1HA,8X,1HB,8X,1HC)
+      D10K=1d4
+      D100K=1d5
       IF(AIN(1)-D10K)100,100,101
-  100 ITOM1=AIN(1)
-      SYITOM=55501.
+  100 ITOM1=int(AIN(1))
+      SYITOM=55501d0
       GO TO 103
-  101 ITOM1=AIN(1)/D100K  
+  101 ITOM1=int(AIN(1)/D100K)
       SYITOM=DMOD(AIN(1),D100K)
   102 IF(DABS(AIN(2))-D10K)103,103,104
-  103 ITOM2 = DABS(AIN(2))
+  103 ITOM2 = int(DABS(AIN(2)))
       SYITO2=SYITOM
       GO TO 105
-  104 ITOM2=DABS(AIN(2))/D100K
+  104 ITOM2=int(DABS(AIN(2))/D100K)
       SYITO2=DMOD(DABS(AIN(2)),D100K)
-  105 ITAR1=AIN(3)
+  105 ITAR1=int(AIN(3))
       IF(ITAR1)108,108,110
   108 ITAR1=1
-  110 ITAR2=AIN(4)
+  110 ITAR2=int(AIN(4))
       DMAX=AIN(5)
       IF(DMAX)115,115,120
-  115 DMAX=4.
+  115 DMAX=4d0
       AIN(5)=DMAX
   120 DMX=DMAX*DMAX
-      TEM=.01
+      TEM=.01d0
       KFUN=NJ*100+MOD(NJ2,10)
       K=NJ*100+NJ2
-      I0=SYITOM
-      I02=SYITO2
+      I0=int(SYITOM)
+      I02=int(SYITO2)
       LATOM=LATM
-  121 FORMAT(1H0,10X,2I3,I5,I4,I5,2I4,18X,3F9.3/1H )
-      IF (NOUT.GE.0)
-     &WRITE (NOUT,121)K,ITOM1,I0,ITOM2,I02,
-     1ITAR1,ITAR2,(AIN(J),J=5,7)
-  124 FORMAT(1H ,15X,2I5,I8,I5,2F9.3)
-      IF(NCD)130,130,125
-  125 IF (NOUT.GE.0)
-     &WRITE (NOUT,124) ((KD(J,I),J=1,4),(CD(J,I),J=1,2) ,I=1,
-     1NCD)
+  125 continue
   130 DO 135 J=1,4
-      W(1,J)=99.
-  135 W(2,J)=-99.
+      W(1,J)=99d0
+  135 W(2,J)=-99d0
       DO 153 KI=ITAR1,ITAR2
       inum=0
       i=ki
@@ -4466,7 +3893,7 @@
          i=inum
          if (ident(ifeat,i).ne.ki) go to 154
       end if
-      TD=FLOAT(I)*D100K
+      TD=dble(I)*D100K
       CALL ATOM(TD,X)
       IF(NG)140,145,140
   140 CALL ERPNT(TD,KFUN)
@@ -4489,15 +3916,15 @@
       GO TO 170
 C     ***** FIND PARALLELEPIPED WHICH ENCLOSES RECTANGULAR BOX *****
   160 DO 162 J=1,3
-      DX(J)=0.
+      DX(J)=0d0
       DO 162 I=1,3
       T9=AIN(I+4)
   162 DX(J)=DX(J)+ABS(REFV(J,I)*T9)
       GO TO 170
 C     ***** FIND PARALLELEPIPED WHICH ENCLOSES DMAX SPHERE *****
-  165 T1=1.-A(4)*A(4)-A(5)*A(5)-A(6)*A(6)+2.*A(4)*A(5)*A(6)
+  165 T1=1d0-A(4)*A(4)-A(5)*A(5)-A(6)*A(6)+2d0*A(4)*A(5)*A(6)
       DO 168 J=1,3
-  168 DX(J)=SQRT((1.-A(J+3)**2)/T1)*DMAX/A(J)
+  168 DX(J)=SQRT((1d0-A(J+3)**2)/T1)*DMAX/A(J)
 C     ***** START SEARCH AROUND REFERENCE ATOMS *****
   170 LIST=0
       LAST=0
@@ -4530,7 +3957,7 @@
       ATOMID(J)=ATOMID(LIST)
       ATOMID(LIST)=TD1 
   182 CONTINUE
-  184 ITOM=TD1/D100K  
+  184 ITOM=int(TD1/D100K)
       if (featur) then
          if (ident(ifeat,itom).lt.itom1 .or.
      &       ident(ifeat,itom).gt.itom2) go to 178
@@ -4542,14 +3969,14 @@
       M1=ITOM
       N1=ITOM
 C     ***** SET INITIAL RUN PARAMETERS *****
-  186 M2=AMOD(SYITOM,100.)
-      M5=AMOD(SYITOM/100.,1000.)
+  186 M2=int(dmod(SYITOM,1d2))
+      M5=int(dmod(SYITOM/1d2,1d3))
       M3=M5/100
       M4=MOD(M5/10,10)
       M5=MOD(M5,10)
 C     ***** SET TERMINAL RUN PARAMETERS *****
-      N2=AMOD(SYITO2,100.)
-      N5=AMOD(SYITO2/100.,1000.)
+      N2=int(dmod(SYITO2,1d2))
+      N5=int(dmod(SYITO2/1d2,1d3))
       N3=N5/100
       N4=MOD(N5/10,10)
       N5=MOD(N5,10)
@@ -4574,7 +4001,7 @@
 C     ***** FIRST,MOVE THE BOX THROUGH THE SYMMETRY OPERATION *****
       DO 200 J=1,3
       DO 200 L=1,2
-      WW(L,J)=0.0
+      WW(L,J)=0d0
       DO 200 I=1,3
       TEM=FS(I,J,K)
       IF(TEM)194,200,196
@@ -4600,11 +4027,11 @@
       DO 235 J=1,3
       DO 225 I=1,2
       N=N+1
-      TT=(U(J)-WW(I,J))*FLOAT(I*2-3)-DX(J)
-      TEM=5.0
-  221 TEM=TEM-1.0
+      TT=(U(J)-WW(I,J))*dble(I*2-3)-DX(J)
+      TEM=5d0
+  221 TEM=TEM-1d0
       IF(TEM+TT)225,225,221
-  225 NW(N)=TEM*FLOAT(I*2-3)+5.
+  225 NW(N)=int(TEM*dble(I*2-3))+5
 C     ***** IF NO POSSIBILITY OF A HIT, GO TO NEXT SYMMETRY OPER *****
       IF(NW(N)-NW(N-1))400,235,235
   235 CONTINUE
@@ -4616,13 +4043,13 @@
       NU=NW(6)
 C     ***** L CELL TRANSLATIONS IN X *****
       DO 396 L=LL,LU
-      V(1)=U(1)+FLOAT(L-5)
+      V(1)=U(1)+dble(L-5)
 C     ***** M CELL TRANSLATIONS IN Y *****
       DO 396 M=ML,MU
-      V(2)=U(2)+FLOAT(M-5)
+      V(2)=U(2)+dble(M-5)
 C     ***** N CELL TRANSLATIONS IN Z *****
       DO 396 NN=NL,NU
-      V(3)=U(3)+FLOAT(NN-5)
+      V(3)=U(3)+dble(NN-5)
 C     ***** I = TARGET ATOM *****
       DO 396 KI=ITAR1,ITAR2
       inum=0
@@ -4633,7 +4060,7 @@
          if (ident(ifeat,i).ne.ki) go to 395
       end if
       DO 250 J=1,3
-      TEM=0.0
+      TEM=0d0
       DO 245 II=1,3
   245 TEM=TEM+FS(II,J,K)*P(II,I)
 C     ***** SEE IF WITHIN PARALLELEPIPED*****
@@ -4650,7 +4077,7 @@
 C     ***** SEE IF WITHIN SPHERE *****
   255 DSQ=VMV(X,AA,X)
       IF(DMX-DSQ)395,256,256
-  256 IF(DSQ-.0001)258,260,260
+  256 IF(DSQ-1d-4)258,260,260
   258 IF(KFUN-402)395,260,260
   260 TEM=SQRT(DSQ)
       IF(AIN(8))265,265,261
@@ -4669,7 +4096,7 @@
   265 if(ncd.le.0) go to 277
 c     if logc=0, screening conditions are ORed
 c     if logc=1, screening conditions are ANDed
-      logc=ain(9)
+      logc=int(ain(9))
   268 DO 275 J=1,NCD
       norg=itom
       ntar=i
@@ -4715,7 +4142,7 @@
   278 IF(NUM)317,317,279
   279 DO 315 II=1,NUM
       TT=S2(II)-TEM
-      IF(ABS(TT)-0.0001)297,297,281
+      IF(ABS(TT)-1d-4)297,297,281
   281 IF(TT)315,297,283
 C     ***** MOVE LONGER VECTORS TOWARD END OF TABLE *****
   283 IF(200-NUM)287,287,289
@@ -4729,7 +4156,7 @@
 C     ***** CHECK FOR DUPLICATE VECTORS IF DISTANCES ARE EQUAL *****
   297 CALL ATOM(S1D(II),Z)
       DO 305 J=1,3
-      IF(ABS(X(J)+Y(J)-Z(J))-0.0001)305,305,315
+      IF(ABS(X(J)+Y(J)-Z(J))-1d-4)305,305,315
   305 CONTINUE
       GO TO 395
   315 CONTINUE
@@ -4748,59 +4175,39 @@
   396 CONTINUE
   400 CONTINUE
 C     ***** PRINT OUT DISTANCES *****
-  421 FORMAT(1H0,10X,20HVECTORS FROM ATOM  (,I3,1H,,I5,1H),6X,
-     18HTO ATOMS,I4,8H THROUGH,I4)
-      I0 = DMOD(TD3,D100K)
-      IF (NOUT.GE.0)
-     &WRITE (NOUT,421)ITOM,I0,ITAR1,ITAR2
+      I0 = int(DMOD(TD3,D100K))
       IF(NUM)500,500,423
   423 DO 435 I=1,NUM
       TD2=S1D(I)
-      I1=TD2/D100K
-      I2=TD2-DBLE(I1)*D100K
+      I1=int(TD2/D100K)
+      I2=int(TD2-DBLE(I1)*D100K)
       CALL ATOM(TD2,Z)
-      IF(I-1)432,432,434
-  427 FORMAT(1H ,13X,2(A6,1X),39X,1H(,I3,1H,,I5,1H),3F7.4,7X,3HD =,F6.3)
-  429 FORMAT(1H ,13X,2(A6,1X),2(3H  (,I3,1H,,I5,1H),3F7.4,3X),4X,3HD =,
-     1F6.3)
-  432 IF (NOUT.GE.0)
-     &WRITE (NOUT,429)CHEM(ITOM),CHEM(I1),ITOM,I0,(Y(J),J=1,3
-     1),I1,I2,(Z(J),J=1,3),S2(I)
-      GO TO 435
-  434 IF (NOUT.GE.0)
-     &WRITE (NOUT,427)CHEM(ITOM),CHEM(I1),I1,I2,(Z(J),J=1,3),
-     1S2(I)
+  432 continue
+  434 continue
   435 CONTINUE
 C     ***** CALCULATE ANGLES ABOUT REF ATOM IF CODE IS 102 *****
   437 IF(KFUN-102)500,451,500
-  441 FORMAT(1H0,10X,18HANGLES AROUND ATOM,I5)
-  451 IF (NOUT.GE.0)
-     &WRITE (NOUT,441)ITOM
+  451 continue
       L=NUM-1
       IF(L)500,500,457
   457 DO 465 I=1,L
       TD2=S1D(I)
       T3=S2(I)
-      I1=TD2/D100K
-      I2=TD2-DBLE(I1)*D100K
+      I1=int(TD2/D100K)
+      I2=int(TD2-DBLE(I1)*D100K)
       CALL ATOM(TD2,X)
       CALL DIFV(X,Y,U)
       CALL MV(AA,U,V2)
       M=I+1
       DO 465 J=M,NUM
       TD4=S1D(J)
-      J1=TD4/D100K
-      J2=TD4-DBLE(J1)*D100K
+      J1=int(TD4/D100K)
+      J2=int(TD4-DBLE(J1)*D100K)
       CALL ATOM(TD4,Z)
       CALL DIFV(Z,Y,V)
       F=ARCCOS(VV(V,V2)/(T3*S2(J)))
       CALL DIFV(X,Z,V3)
       F1=SQRT(VMV(V3,AA,V3))
-  460 FORMAT(1H ,13X,3(A6,1X),7X,3(2H (,I3,1H,,I5,1H)),12X,3HD =,F6.3,
-     17X,3HA =,F6.2)
-      IF (NOUT.GE.0)
-     &WRITE (NOUT,460)CHEM(I1),CHEM(ITOM),CHEM(J1),I1,I2,ITOM
-     1,I0,J1,J2,F1,F
   465 CONTINUE
   495 CONTINUE
   500 CONTINUE
@@ -4811,10 +4218,11 @@
   610 RETURN
       END
       SUBROUTINE SIMBOL(W,W2,HGT,ITXT,THT,N)
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION W(3),ITXT(72),DS(10),DC(10)
       DIMENSION IPTR(90),NKNT(90),IXYT(556)
       CHARACTER*1 ITXT
-      common /ns/ npf,ndraw,norient,nvar
+      common /ns/ npf,ndraw,NORIEN,nvar
       common /trfac/ xtrans,ytrans
       DATA IPTR
      1/312, 32, 41, 54, 47, 20, 20, 54, 64, 70,103,108, 17,115,118,128
@@ -4855,7 +4263,8 @@
      G,24,64,54,53,57,56,66,26,36,37,33,66,57,47,36,35,44,54,65,67
      H,58,38,27,24,33,53,64,57,49,59,57,99,37,29,39,37,22,32,12,22
      I,23,21,22,31,13,22,33,11,22/
-      DATA (IXYT(I),I=350,464)
+c 349
+      DATA (IXYT(I),I=350,509)
      a/62,67,66,57,37,26,23,32,52,63
      b,22,29,26,37,57,66,63,52,32,23
      c,63,52,32,23,26,37,57,66
@@ -4868,14 +4277,15 @@
      j,32,41,51,62,67,99,68,69
      k,22,29,24,57,35,62 
      l,32,52,42,49,39
-     m,22,27,26,37,46,42,46,57,66,62/
-      DATA (IXYT(I),I=465,556)
-     n/22,27,26,37,57,66,62
+     m,22,27,26,37,46,42,46,57,66,62 
+     n,22,27,26,37,57,66,62
      o,63,52,32,23,26,37,57,66,63,99,67,45
      p,21,27,26,37,57,66,64,53,33,24
      q,61,67,66,57,37,26,24,33,53,64
-     r,22,27,26,37,57,66
-     s,23,32,52,63,64,55,35,26,37,57,66
+     r,22,27,26,37,57,66/
+c 509
+      DATA (IXYT(I),I=510,556)
+     s/23,32,52,63,64,55,35,26,37,57,66
      t,42,49,47,27,67 
      u,67,62,63,52,32,23,27
      v,27,42,67
@@ -4883,9 +4293,9 @@
      x,22,67,99,27,62 
      y,27,43,67,31
      z,62,22,67,27,99,35,55/
-      DATA RAD/0.01745329/
+      DATA RAD/1.745329252d-2/
       if (ndraw.eq.9) then
-         write (npf,21) n,nvar,w(1)+xtrans,w(2)+ytrans,8.*hgt,tht
+         write (npf,21) n,nvar,w(1)+xtrans,w(2)+ytrans,8d0*hgt,tht
   21     format('TXT',i2,1x,i2,' 1',4(1x,f10.6))
          write (npf,22) (itxt(k),k=1,n)
   22     format(80a1)
@@ -4899,9 +4309,9 @@
       ST=SIN(TH)
       CT=COS(TH)
       GO TO 130
-  120 ST=0.0
-      CT=1.0
-  130 D=HGT/7.0
+  120 ST=0d0
+      CT=1d0
+  130 D=HGT/7d0
       DST=D*ST
       DCT=D*CT
       DS(1)=-DST
@@ -4911,8 +4321,8 @@
       DC(I)=DC(I-1)+DCT
   145 CONTINUE
 C-----START LOOP THROUGH THE N CHARACTERS OF ITXT
-      XO=0.0
-      YO=0.0
+      XO=0d0
+      YO=0d0
       DO 370 J=1,N
       ITXTJ=ICHAR(ITXT(J))
       if (itxtj.ge.97.and.itxtj.le.122) then
@@ -4949,9 +4359,9 @@
       RETURN
 c *** Only one centered symbol (*) is available in ORTEP-III.
 C-----PLOT ONE SPECIFIC CENTERED SYMBOL. SET UP TABLE OF INCREMENTS
-  400 DCT=HGT/2.0
+  400 DCT=HGT/2d0
       DC(1)=-DCT
-      DC(2)= 0.0
+      DC(2)= 0d0
       DC(3)= DCT
 C-----MOVE TO SYMBOL WITH PEN UP OR DOWN, DEPENDING ON N
       IPEN=3
@@ -4973,25 +4383,24 @@
       END
       SUBROUTINE STOR(TD1)
 C     ***** STORE IN OR REMOVE FROM ATOMS ARRAY *****
-      REAL*8 TD1
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      implicit integer (I-N), double precision(A-H, O-Z)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
+      CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
       IF(LATM)481,481,450
-  450 IF(500-LATM)455,455,460
+  450 IF(2500-LATM)455,455,460
   455 IF(NJ2-10)490,490,460
   460 L=LATM
 C     ***** CHECK FOR POSITIONAL DUPLICATION *****
       DO 480 K=1,L
       DO 465 J=1,3
-      IF(ABS(V1(J)-ATOMS(J,K))-0.001)465,465,480
+      IF(ABS(V1(J)-ATOMS(J,K))-1d-3)465,465,480
   465 CONTINUE
       IF(NJ2-10)490,490,470
 C     ***** ATOM REMOVAL BY TABLE PUSHDOWN *****
@@ -5004,7 +4413,7 @@
   480 CONTINUE
   481 IF(NJ2-10)482,490,490
 C     ***** STORE ATOM *****
-  482 IF(499-LATM)490,483,485
+  482 IF(2499-LATM)490,483,485
   483 NG=16
       CALL ERPNT (TD1,400)
   485 LATM=LATM+1
@@ -5016,16 +4425,16 @@
       subroutine tepsym(txt,num,kk)
 c *** parses character string representation of symmetry operators
 c *** and stores information
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      implicit integer (I-N), double precision(A-H, O-Z)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
+      CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
       character*24 txt
       logical twodig
 
@@ -5036,7 +4445,7 @@
   101 continue
 
 c *** default value of ts if no fraction specified
-  202 ts(kk,num)=0.
+  202 ts(kk,num)=0d0
 
 c *** look for and interpret a/b style fraction
       n=index(txt,'/')
@@ -5069,7 +4478,7 @@
             inum=ksign * k
          end if
 
-         ts(kk,num)=float(inum)/float(iden)
+         ts(kk,num)=dble(inum)/dble(iden)
       end if
 
 c *** look for and interpret decimal style fraction
@@ -5080,9 +4489,9 @@
          k=ichar(txt(n+1:n+1))-48
          m=ichar(txt(n+2:n+2))-48
          if (m.ge.0 .and. m.le.9) then
-            ts(kk,num)=float(k) * .1 + float(m) * .01
+            ts(kk,num)=dble(k) * .1d0 + dble(m) * .01d0
          else
-            ts(kk,num)=float(k) * .1
+            ts(kk,num)=dble(k) * .1d0
          end if
 
 c        get sign
@@ -5094,36 +4503,37 @@
             if (txt(n-2:n-2).eq.'-') ksign=-1
          end if
 
-         ts(kk,num)=float(ksign) * ts(kk,num)
+         ts(kk,num)=dble(ksign) * ts(kk,num)
       end if
 
 c *** interpret xyz portion of symmetry operation
       do 303 i=1,24
          if (txt(i:i).eq.'X') then
-            fs(1,kk,num)=1.
+            fs(1,kk,num)=1d0
             if (i.ge.2) then
-               if(txt(i-1:i-1).eq.'-') fs(1,kk,num)=-1.
+               if(txt(i-1:i-1).eq.'-') fs(1,kk,num)=-1d0
             end if
          end if
          if (txt(i:i).eq.'Y') then
-            fs(2,kk,num)=1.
+            fs(2,kk,num)=1d0
             if (i.ge.2) then
-               if(txt(i-1:i-1).eq.'-') fs(2,kk,num)=-1.
+               if(txt(i-1:i-1).eq.'-') fs(2,kk,num)=-1d0
             end if
          end if
          if (txt(i:i).eq.'Z') then
-            fs(3,kk,num)=1.
+            fs(3,kk,num)=1d0
             if (i.ge.2) then
-               if(txt(i-1:i-1).eq.'-') fs(3,kk,num)=-1.
+               if(txt(i-1:i-1).eq.'-') fs(3,kk,num)=-1d0
             end if
          end if
-303   continue
+  303 continue
 
       return
       end
       SUBROUTINE TMM(X,Y,Z)
 C     Z = TRANSPOSED (TRANSPOSE(X) * (Y) ) 
 C     Z(3,3)=X(3,3)*Y(3,3)
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION X(3,3),Y(3,3),Z(3,3)
       X11=X(1,1)
       X12=X(1,2)
@@ -5154,168 +4564,18 @@
       Z(3,3)=X13*Y13+X23*Y23+X33*Y33
       RETURN
       END
-      subroutine uinput(in,nout)
-c *** user input routine
-      common /ns/ npf,ndraw,norient,nvar
-      common /dfl/ infile,idraw,iorient,iout,ext,atomfi,fpaplen
-      character*60 fname,txtans,infile,atomfi
-      character*4 ext
-      character*1 answer
-
-      call dflts
-      iflag=0
-c *** get the input file name and open the file or "exit" ***
-  110 fname=infile
-      ipos=index(fname,' ')
-      write (*,115) fname(1:ipos-1)
-  115 format(' Enter instruction set file name or "exit" [',a,']:  ',$)
-      read (*,120) txtans
-  120 format(a)
-      if (txtans(1:4).eq.'exit' .or. txtans(1:4).eq.'EXIT') 
-     *    call exitng(0)      
-      if (txtans(1:1) .ne. ' ') fname=txtans
-      open(in,file=fname,status='old',err=125)
-      go to 135
-  125 ipos=index(fname,' ')
-      fname=fname(1:ipos-1)
-      write (*,130) fname(1:ipos-1)
-  130 format(/' "',a,'" does not exist'/)
-      go to 110  
-c *** determine where ortep drawing should go ***
-  135 write (*,140) idraw
-  140 format(' Drawing to (1) Screen, (2) Postscript file, (3) HPGL file
-     *, or (0) Omit [',i1,']:  ',$)
-      read (*,145) answer
-  145 format(a)
-      if (answer .eq. ' ') then
-         ndraw=idraw
-      else
-         read (answer,155) ndraw
-      end if
-      if (ndraw.lt.0.or.(ndraw.gt.3.and.ndraw.ne.9)) then
-         write(6,*) 'invalid selection'
-         go to 135
-      end if
-      if (ndraw.eq.0.or.ndraw.eq.1.or.ndraw.eq.9) go to 149
-      go to 1451
-c *** need to get this information if printing from editor
-      entry getpap
-      iflag=1
-c *** determine orientation of drawing ***
- 1451 write (*,1452) iorient
- 1452 format(' (1) Portrait or (2) Landscape orientation [',i1,']:  ',$)
-      read (*,145) answer
-      if (answer .eq. ' ') then
-         norient=iorient
-      else
-         read (answer,155) norient
-      end if
-      if (norient.lt.1.or.norient.gt.2) then
-         write(6,*) 'invalid selection'
-         go to 1451
-      end if
-c *** determine paper length for postscript landscape
-      if (ndraw.eq.2.and.norient.eq.2) then
-         write (*,1453) fpaplen
- 1453    format(' How tall is printer page in inches? [',f5.2,']:  ',$)     
-         read (*,120) txtans
-         if (txtans(1:1) .ne. ' ') read (txtans,1454) fpaplen
- 1454    format(f10.0)
-         nvar=fpaplen*1000.
-      end if
-c *** if called from recycle, return there
-      if (iflag.eq.1) return
-c *** determine where ortep output should go ***
-  149 write (*,150) iout
-  150 format(' Text output to (1) File, (2) Screen, or (0) Omit [',i1,
-     *       ']:  ',$)
-      read (*,145) answer
-      if (answer .eq. ' ') then
-      nou=iout
-      else
-      read (answer,155) nou
-      end if
-  155 format(i1)
-c *** set output unit number ***
-      nout=-4
-      if (nou .eq. 1) nout=4
-      if (nou .eq. 2) nout=6
-c *** if output goes to a file; get its name and open the file ***
-      if (nout .eq. 4) then
-         ipos=index(fname,'.')
-         if(ipos .ne. 0) then
-            fname=fname(1:ipos-1)//ext
-            go to 160
-         end if
-         ipos=index(fname,' ')
-         fname=fname(1:ipos-1)//ext
-  160    ipos=index(fname,' ')
-         write (*,165) fname(1:ipos-1)
-  165    format(' Enter output file name [',a,']:  ',$)
-         read (*,120) txtans
-         if (txtans(1:1) .ne. ' ') fname=txtans
-         open(nout,file=fname,status='old',err=170)
-         go to 175
-  170    open(nout,file=fname,status='new')
-      end if
-  175 continue
-      return
-c *** get file name of an external file containing atomic parameters
-      entry gtafil(iu)
-  210 fname=atomfi
-      ipos=index(fname,' ')
-      write (*,215) fname(1:ipos-1)
-  215 format(' Enter atom parameter file name or "exit" [',a,']:  ',$)
-      read (*,120) txtans
-      if (txtans(1:4).eq.'exit' .or. txtans(1:4).eq.'EXIT') 
-     *    call exitng(0)      
-      if (txtans(1:1) .ne. ' ') fname=txtans
-      open(iu,file=fname,status='old',err=225)
-      return
-  225 ipos=index(fname,' ')
-      write (*,130) fname(1:ipos-1)
-      go to 210  
-c *** ask user about using editor
-      entry go2edtr
-      write (*,303) 
-c 303 format(/,' Edit instruction set? (Y)es or (N)o [N]:  ',$)
-  303 format(/,' (1) Save drawing as Postscript file',/,
-     &' (2) Save drawing as HPGL file',/, 
-     &' (3) Redraw structure on screen',/, 
-     &' (4) Edit instruction set',/,
-     &' [Quit]:  ',$)
-      read (*,304) answer
-  304 format(a)
-      if (answer.eq.'1') then
-         ndraw=2
-         call recycle
-      else 
-         if (answer.eq.'2')  then
-            ndraw=3
-            call recycle
-         else
-            if (answer.eq.'3') then
-               ndraw=1
-               call recycle
-            else
-               if (answer.eq.'4') call editr
-            end if
-         end if
-      end if
-      return
-      end
       SUBROUTINE UNITY(X,Z,ITYPE)
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION X(3),Y(3),Z(3)
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
+      CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
       Y(1)=X(1)
       Y(2)=X(2)
       Y(3)=X(3)
@@ -5336,6 +4596,7 @@
       SUBROUTINE VM(Y,X,Z)
 C     TRANSPOSED VECTOR * MATRIX   
 C     Z(3)=Y(3)*X(3,3)   
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION X(3,3),Y(3),Z(3)
       Y1=Y(1)
       Y2=Y(2)
@@ -5346,6 +4607,7 @@
       RETURN
       END
       FUNCTION VMV(X1,Q,X2)
+      implicit integer (I-N), double precision(A-H, O-Z)
 C     TRANSPOSED VECTOR * MATRIX * VECTOR
 C     VMV=X1(3)*Q(3,3)*X2(3)    TO  EVALUATE QUADRATIC OR BILINEAR FORM
       DIMENSION X1(3),Q(3,3),X2(3)
@@ -5355,6 +4617,7 @@
       RETURN
       END
       FUNCTION VV(X,Y)
+      implicit integer (I-N), double precision(A-H, O-Z)
 C     TRANSPOSED VECTOR * VECTOR
 C     VV=X(3)*Y(3)
       DIMENSION X(3),Y(3)
@@ -5366,45 +4629,44 @@
 C     ***** XABSF(ITYPE) .LE.2 FOR WORKING SYSTEM *****
 C     ***** XABSF(ITYPE) .GT.2 FOR REFERENCE SYSTEM *****
 C     ***** ITYPE .LE.0 USES TRICLINIC COORD. XT *****
+      implicit integer (I-N), double precision(A-H, O-Z)
       DIMENSION X(3)
-      REAL*8 DQA
-      REAL*8 AIN,ATOMID 
-      CHARACTER*4 TITLE,TITLE2
-      COMMON NG,A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
-     1 ,AIN(140),ATOMID(500),ATOMS(3,500),BB(3,3),BRDR,CD(8,20)
+      COMMON A(9),AA(3,3),AAREV(3,3),AAWRK(3,3),AID(3,3)
+     1 ,AIN(140),ATOMID(2500),atoms(3,2500),BB(3,3),BRDR,CD(8,20)
      2 ,CONT(5),D(3,130),DA(3,3),DP(2,130),DISP,EDGE,FORE,FS(3,3,96)
-     3 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NJ,NJ2,NOUT,NSR,NSYM
-     4 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
-     5 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TITLE(18),TITLE2(18),TS(3,96)
-     6 ,VIEW,VT(3,4),V1(4),V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3)
-     7 ,XLNG(3),XO(3),XT(3)
+     3 ,ORGN(3),PAC(3,5),PAT(3,3),Q(3,3),REFV(3,3),RES(4),RMS(5),SCAL1
+     4 ,SCAL2,SCL,SYMB(3,3),TAPER,THETA,TS(3,96),VIEW,VT(3,4),V1(4)
+     5 ,V2(3),V3(3),V4(3),V5(3),V6(3),WRKV(3,3),XLNG(3),XO(3),XT(3)
+     6 ,IN,ITILT,KD(5,20),LATM,NATOM,NCD,NG,NJ,NJ2,NSR,NSYM
+      CHARACTER*4 TITLE,TITLE2
+      COMMON /BLCHAR/ TITLE(18),TITLE2(18)
       IT=IABS(ITYPE)-2
       NG1=NG
       NG=0
       IF(ITYPE)10,10,5
     5 CALL ATOM(DQA,XT)
       IF(NG)30,10,30
-   10 T1=0.
+   10 T1=0d0
       DO 15 J=1,3
       T2=XT(J)-ORGN(J)
       V1(J)=T2
    15 T1=T1+ABS(T2)
-      IF(T1-.0001)20,20,40
+      IF(T1-1d-4)20,20,40
    20 NG=NG1
    30 DO 35 J=1,3
-   35 X(J)=0.
+   35 X(J)=0d0
       GO TO 300
    40 IF(IT)45,45,60
 C     ***** RELATIVE TO WORKING SYSTEM *****
    45 DO 55 I=1,3
-      T1=0.
+      T1=0d0
       DO 50 J=1,3
    50 T1=T1+V1(J)*AAWRK(J,I)
    55 X(I)=T1*SCAL1
       GO TO 300
 C     ***** RELATIVE TO REFERENCE SYSTEM *****
    60 DO 70 I=1,3
-      T1=0.
+      T1=0d0
       DO 65 J=1,3
    65 T1=T1+V1(J)*AAREV(J,I)
    70 X(I)=T1*SCAL1
@@ -5419,6 +4681,7 @@
       end
 
       subroutine penwsc(penw)
+      double precision penw
       return
       end
 
@@ -5427,6 +4690,7 @@
       end
 
       subroutine pensc(x,y,ipen)
+      double precision x, y
       return
       end
 
@@ -5437,223 +4701,21 @@
 c *** end of dummy screen output
 c ****************************************************************
 
-c ****************************************************************
-c *** PGPLOT CODE FOR SCREEN OUTPUT
-c *** if PGPLOT is implemented, use the subroutines here
-c *** instead of the ones in the DUMMY SCREEN OUTPUT section
-c     PGPLOT is a free graphics library developed by T. J. Pearson at 
-c     the California Institute of Technology. Information about PGPLOT 
-c     can be found on the World Wide Web at
-c     http://astro.caltech.edu/~tjp/pgplot 
-c     or via e-mail to tjp@astro.caltech.edu. 
-c ****************************************************************
-
-c     subroutine initsc
-c     character*10 outdev
-c     common /ns/ npf,ndraw,norient,nvar
-c     integer pgbeg
-c     
-c     xwid=11.
-c     yhgt=8.5
-c     
-c *** The following is for PGPLOT on an X-windows system.
-c     outdev = '/XWINDOW'
-c *** The following is for PGPLOT on an MS-DOS system.
-c     outdev = '/MS'
-c *** The following is for PGPLOT on a Macintosh system.
-c     outdev = '/MAC'
-
-c     open(npf,status='scratch')
-
-c     if (pgbeg(0,' ',1,1) .ne. 1) call exitng(8)
-
-c     switch black and white
-c     call pgscr(0,1.,1.,1.)
-c     call pgscr(1,0.,0.,0.)
-
-c     set up drawing window
-c     call pgpage
-c     call pgqch(osize)
-c     call pgsch(0.)
-c     call pgvstd
-c     call pgwnad(0.,xwid,0.,yhgt)
-c     call pgsch(osize)
-c     call pgbox('BCT',1.,0,'BCT',1.,0)
-c     call pgsci(1)
-c     call pgsfs(2)
-c     call pgrect(10.4,11.,8.2,8.5)
-c     call pgtext(10.5,8.3,'EXIT')
-
-c     return
-c     end
-
-c     subroutine colrsc(icolor)
-c *** set plot color
-c *** in ORTEP icolor=0 => black
-c *** PGPLOT is set up for 1=black
-c     common /ns/ npf,ndraw,norient,nvar
-c     icol=icolor
-c     if (icol.eq.0) icol=1
-c     nvar=icol
-c     if (ndraw.eq.1) call pgsci(icol)
-c     if (ndraw.eq.9) write (npf,111) icol
-c 111 format('COL',1x,i2)
-c     return
-c     end
-
-c     subroutine penwsc(penw)
-c *** change pen width
-c *** PGPLOT measures pen width in 200ths of an inch
-c     common /ns/ npf,ndraw,norient,nvar
-c     ipenw=nint(.001*penw*200.)
-c     if (ipenw.le.0) ipenw=1
-c     if (ipenw.gt.200) ipenw=200
-c     if (ndraw.eq.1) call pgslw(ipenw)
-c     if (ndraw.eq.9) write (npf,111) ipenw
-c 111 format('WID',1x,i3)
-c     return
-c     end
-
-c     subroutine pensc(x,y,ipen)
-c *** move the pen
-c     common /trfac/ xtrans,ytrans
-c     common /ns/ npf,ndraw,norient,nvar
-
-c     if (ipen.eq.2) then
-c        if (ndraw.eq.1) call pgdraw(x+xtrans,y+ytrans)
-c        if (ndraw.eq.9) write (npf,111) x+xtrans,y+ytrans
-c 111    format('LIN',2(1x,f10.6))
-c     end if
-c     if (ipen.eq.3) then
-c        if (ndraw.eq.1) call pgmove(x+xtrans,y+ytrans)
-c        if (ndraw.eq.9) write (npf,112) x+xtrans,y+ytrans
-c 112    format('MOV',2(1x,f10.6))
-c     end if
-
-c     return
-c     end
-
-c     subroutine endsc
-c     common /ns/ npf,ndraw,norient,nvar
-
-c     call curssc
-c     close(npf)
-
-c *** tell user to hit <enter> key
-c     call pgsci(0)
-c     call pgsfs(1)
-c     call pgrect(7.5,11.,8.2,8.5)
-c     call pgsci(1)
-c     call pgsfs(2)
-c     call pgrect(7.5,11.,8.2,8.5)
-c     call pgsci(1)
-c     call pgtext(7.6,8.3,'Hit <RETURN> or <ENTER> key')
-
-c     call pgend
-
-c     return
-c     end
-
-c     subroutine curssc
-c *** correlate screen cursor position with atom positions and display results
-c     character ch
-c     character*21 str
-c     integer pgcurs
-c     character*6 label,alabel
-c     character*9 tomid,atomid
-c     common /trfac/ xtrans,ytrans
-c     common /ns/ npf,ndraw,norient,nvar
-
-c     call pgsfs(1)
-c     call pgscf(1)
-c     call pgsch(1.)
-
-c *** get cursor position
-c 1   junk = pgcurs(x,y,ch)
-
-c     if (ch.eq.'x' .or. ch.eq.'X') return
-c     if (ch.eq.'d' .or. ch.eq.'D') return
-c     if (x.ge.10.4 .and. x.le.11. .and. y.ge.8.2 .and. y.le.8.5) return
-c     if (ichar(ch).eq.13) return
-
-c *** initial values for variables
-c     xpt = x
-c     ypt = y
-c     adiffx = .0625
-c     adiffy = .0625
-c     odiffx = adiffx
-c     odiffy = adiffy
-c     atomid = '         '
-c     alabel = '      '
-c     iflag = 0
-c     nflag = 0
-
-c     rewind(npf)
-
-c 2   read(npf,3,end=4) label,tomid,xx,yy
-c 3   format(11x,a6,3x,a9,4x,2f8.0)
-c     diffx = abs(xx-xpt)
-c     diffy = abs(yy-ypt)
-c     if (diffx.le.adiffx .and. diffy.le.adiffy) nflag=nflag+1
-c     if (diffx.le.odiffx .and. diffy.le.odiffy) then
-c        atomid = tomid
-c        alabel = label
-c        odiffx = diffx
-c        odiffy = diffy
-c     end if
-c     go to 2
-
-c 4   if (nflag.eq.0) write(str,5) 
-c     if (nflag.eq.1) write(str,6) alabel,atomid
-c     if (nflag.gt.1) write(str,7) alabel,atomid
-c 5   format('Not near atom center')
-c 6   format(a6,1x,a9)
-c 7   format(a6,1x,a9,' + ??')
-
-c *** erase rectangle
-c     call pgsci(0)
-c     call pgsfs(1)
-c     call pgrect(0.,2.8,8.2,8.5)
-c *** redraw empty rectangle
-c     call pgsci(1)
-c     call pgsfs(2)
-c     call pgrect(0.,2.8,8.2,8.5)
-
-c *** print atom information in rectangle
-c     call pgtext(0.1,8.3,str)
-
-c     go to 1
-
-c     end
-
-c *** end of PGPLOT specific routines
-c ****************************************************************
 
 c ****************************************************************
 c *** HPGL FILE OUTPUT
 c ****************************************************************
 
       subroutine inithp
-      common /ns/ npf,ndraw,norient,nvar
+      common /ns/ npf,ndraw,NORIEN,nvar
       character ESC
-      character*10 fname
-
-      do 11 i=1,999
-         write (fname, 10) i
-   10    format('TEP',i3.3,'.PRN')
-         open(unit=npf,file=fname,status='old',err=12)
-         close(npf)
-   11 continue
-   12 open(unit=npf,file=fname,status='new')
-      write (*,13) fname
-   13 format(/,' HPGL file name:  ',a)
 
       ESC=char(27)
 
       write (npf,21) ESC
       write (npf,22) ESC
       write (npf,23)
-      if (norient.eq.2) write (npf,24)
+      if (NORIEN.eq.2) write (npf,24)
    21 format(a1,'E')
    22 format(a1,'%0B')
    23 format('IN;'/'SP1;'/'PW.15;')
@@ -5662,7 +4724,7 @@
       end
 
       subroutine colrhp(icolor)
-      common /ns/ npf,ndraw,norient,nvar
+      common /ns/ npf,ndraw,NORIEN,nvar
 c *** set plot color
 c *** in ORTEP icolor=0 => black
 c *** plotter pen 1=black
@@ -5674,11 +4736,12 @@
       end
 
       subroutine penwhp(penw)
-      common /ns/ npf,ndraw,norient,nvar
-      if (penw.eq.0.) then
-         penw=.15
+      double precision penw
+      common /ns/ npf,ndraw,NORIEN,nvar
+      if (penw.eq.0d0) then
+         penw=1.5d-1
       else      
-         penw=penw*.0252
+         penw=penw*2.52d-2
       end if
       write (npf,21) penw
    21 format('PW',f5.2,';')
@@ -5686,11 +4749,12 @@
       end
 
       subroutine penhp(x,y,ipen)
-      common /ns/ npf,ndraw,norient,nvar
+      implicit integer (I-N), double precision(A-H, O-Z)
+      common /ns/ npf,ndraw,NORIEN,nvar
       common /trfac/ xtrans,ytrans
 
-      ix = nint((x + xtrans) * 1000.)
-      iy = nint((y + ytrans) * 1000.)
+      ix = nint((x + xtrans) * 1d3)
+      iy = nint((y + ytrans) * 1d3)
 
       if (ipen.eq.2) write (npf,101) ix,iy
   101 format('PD',i4,',',i4,';')
@@ -5701,7 +4765,7 @@
 
 
       subroutine endhp
-      common /ns/ npf,ndraw,norient,nvar
+      common /ns/ npf,ndraw,NORIEN,nvar
       character ESC
 
       ESC=char(27)
@@ -5711,7 +4775,6 @@
    34 format(a1,'%0A')
       write (npf,35) ESC
    35 format(a1,'E')
-      close(npf)
       return
       end
 
@@ -5723,9 +4786,8 @@
 c ****************************************************************
 
       subroutine initps
-      common /ns/ npf,ndraw,norient,nvar
+      common /ns/ npf,ndraw,NORIEN,nvar
       common /ps/ ixmin,ixmax,iymin,iymax,ixt,iyt
-      character*10 fname
 
 c *** initialize variables to calculate bounding box
       ixmin=20000
@@ -5733,99 +4795,81 @@
       iymin=20000
       iymax=0
 
-      do 11 i=1,999
-         write (fname, 10) i
-   10    format('TEP',i3.3,'.PRN')
-         open(unit=npf,file=fname,status='old',err=12)
-         close(npf)
-   11 continue
-   12 open(unit=npf,file=fname,status='new')
-      write (*,13) fname
-   13 format(/,' Postscript file name:  ',a)
-
       ixt=0
       iyt=0
-      write (npf,21)
-      write (npf,22)
-      write (npf,23)
-      if (norient.eq.2) then
-         write (npf,24)
+      write (npf,'(''%!PS-Adobe-3.0 EPSF-3.0'')')
+      write (npf,'(''%%DocumentData: Clean7Bit'')')
+      write (npf,'(''%%LanguageLevel: 1'')')
+      write (npf,'(''%%Creator: ORTEP-III'')')
+      write (npf,'(''%%BoundingBox: (atend)'',/,''%%Pages: 1'')')
+      if (NORIEN.eq.2) then
+         write (npf,'(''%%Orientation: Landscape'')')
          iyt=nvar
       else
-         write (npf,25)
+         write (npf,'(''%%Orientation: Portrait'')')
       end if
-      write (npf,26)
-      write (npf,27)
-      write (npf,28)
-      write (npf,29)
-      write (npf,30)
-      write (npf,31)
-      write (npf,32) ixt,iyt
-      if (norient.eq.2) write (npf,33)
-      write (npf,34)
-      write (npf,35)
-   21 format('%!PS-Adobe-3.0 EPSF-3.0')
-   22 format('%%Creator: ORTEP-III Version 1.0.3 Jan. 31, 2000')
-   23 format('%%BoundingBox: (atend)',/,'%%Pages: 1')
-   24 format('%%Orientation: Landscape')       
-   25 format('%%Orientation: Portrait')       
-   26 format('%%BeginProlog')
-   27 format('/m {moveto} def')
-   28 format('/l {lineto} def')
-   29 format('%%EndProlog',/,'%%Page: 1 1')
-   30 format('%%BeginPageSetup')
-   31 format('0.072 0.072 scale')
-   32 format(i6,1x,i6,' translate')
-   33 format('-90 rotate')
-   34 format('0 setgray 1 setlinecap 5 setlinewidth')
-   35 format('%%EndPageSetup')
+      write (npf,'(''%%EndComments'')')
+      write (npf,'(''%%Page: 1 1'')')
+      write (npf,'(''%%BeginPageSetup'')')
+      write (npf,'(''save'')')
+      write (npf,'(''0.072 0.072 scale'')')
+      write (npf,'(i6,1x,i6,'' translate'')') ixt,iyt
+      if (NORIEN.eq.2) write (npf,'(''-90 rotate'')')
+      write (npf,'(''0 setgray 1 setlinecap 5 setlinewidth'')')
+      write (npf,'(''/m {moveto} def'')')
+      write (npf,'(''/l {lineto} def'')')
+      write (npf,'(''%%EndPageSetup'')')
       return
       end
 
       subroutine colrps(icolor)
-      common /ns/ npf,ndraw,norient,nvar
-      write(npf,101)
-  101 format('stroke')
-      if (icolor.eq.0) write(npf,1)
-      if (icolor.eq.1) write(npf,1)
-      if (icolor.eq.2) write(npf,2)
-      if (icolor.eq.3) write(npf,3)
-      if (icolor.eq.4) write(npf,4)
-      if (icolor.eq.5) write(npf,5)
-      if (icolor.eq.6) write(npf,6)
-      if (icolor.eq.7) write(npf,7)
-   1  format('0 setgray')
-   2  format('1 0 0 setrgbcolor')
-   3  format('0 1 0 setrgbcolor')
-   4  format('0 0 1 setrgbcolor')
-   5  format('0 1 1 setrgbcolor')
-   6  format('1 0 1 setrgbcolor')
-   7  format('1 1 0 setrgbcolor')
+      common /ns/ npf,ndraw,NORIEN,nvar
+      write(npf,'(''stroke'')')
+      if (icolor.eq.2) then
+         write(npf,2) 1 0 0
+      else if (icolor.eq.3) then
+         write(npf,2) 0 1 0
+      else if (icolor.eq.4) then
+         write(npf,2) 0 0 1
+      else if (icolor.eq.5) then
+         write(npf,2) 0 1 1
+      else if (icolor.eq.6) then
+         write(npf,2) 1 0 1
+      else if (icolor.eq.7) then
+         write(npf,2) 1 1 0
+      else
+         write(npf,1)
+      end if
       return
+    1 format('0 setgray')
+    2 format(i1,1x,i1,1x,i1,1x,'1 0 0 setrgbcolor')
       end
 
       subroutine penwps(penw)
-      common /ns/ npf,ndraw,norient,nvar
+      double precision penw
+      common /ns/ npf,ndraw,NORIEN,nvar
       write(npf,101)
   101 format('stroke')
-      if (penw.eq.0.) penw=5.
+      if (penw.eq.0d0) penw=5d0
       write(npf,102) penw
   102 format(f10.2,1x,'setlinewidth')
       return
       end
 
       subroutine penps(x,y,ipen)
+      implicit integer (I-N), double precision(A-H, O-Z)
       common /trfac/ xtrans,ytrans
-      common /ns/ npf,ndraw,norient,nvar
+      common /ns/ npf,ndraw,NORIEN,nvar
       common /ps/ ixmin,ixmax,iymin,iymax,ixt,iyt
 
-      ix = nint((x + xtrans) * 1000.)
-      iy = nint((y + ytrans) * 1000.)
+      ix = nint((x + xtrans) * 1d3)
+      iy = nint((y + ytrans) * 1d3)
 
-      if (ipen.eq.2) write (npf,101) ix,iy
-  101 format(i6,1x,i6,1x,'l')
-      if (ipen.eq.3) write (npf,102) ix,iy
-  102 format('stroke'/i6,1x,i6,1x,'m')
+      if (ipen.eq.2) then
+         write (npf,'(i6,1x,i6,1x,''l'')') ix,iy
+      else if (ipen.eq.3) then
+         write (npf,'(''stroke''/i6,1x,i6,1x,''m'')') ix,iy
+      end if
 
 c *** variables to calculate bounding box
       if (ix.lt.ixmin) ixmin=ix
@@ -5837,34 +4881,33 @@
       end
 
       subroutine endps
-      common /ns/ npf,ndraw,norient,nvar
+      common /ns/ npf,ndraw,NORIEN,nvar
       common /ps/ ixmin,ixmax,iymin,iymax,ixt,iyt
 
-      write (npf,25)
-   25 format('stroke'/'showpage')
+      write (npf,'(''stroke''/''restore''/''showpage'')')
 
 c *** calculate bounding box
-      if (norient.eq.1) then
-         ixmn=float(ixmin+ixt)*.072 - 2
-         iymn=float(iymin+iyt)*.072 - 2
-         ixmx=float(ixmax+ixt)*.072 + 2
-         iymx=float(iymax+iyt)*.072 + 2
+      if (NORIEN.eq.1) then
+         ixmn=int(float(ixmin+ixt)*.072) - 2
+         iymn=int(float(iymin+iyt)*.072) - 2
+         ixmx=int(float(ixmax+ixt)*.072) + 2
+         iymx=int(float(iymax+iyt)*.072) + 2
       else
-         ixmn=float(ixt+iymin)*.072 - 2
-         iymn=float(iyt-ixmax)*.072 - 2
-         ixmx=float(ixt+iymax)*.072 + 2
-         iymx=float(iyt-ixmin)*.072 + 2
+         ixmn=int(float(ixt+iymin)*.072) - 2
+         iymn=int(float(iyt-ixmax)*.072) - 2
+         ixmx=int(float(ixt+iymax)*.072) + 2
+         iymx=int(float(iyt-ixmin)*.072) + 2
       end if
       if (ixmn.lt.0) ixmn=0
       if (iymn.lt.0) iymn=0
 
 c *** put bounding box at end of postscript file
-      write (npf,26) ixmn,iymn,ixmx,iymx
-   26 format('%%BoundingBox: ',4(i6,1x))
+      write (npf,'(''%%Trailer'')')
+      write (npf,'(''%%BoundingBox: '',4(i6,1x))') ixmn,iymn,ixmx,iymx
 
-      write (npf,27)
-   27 format('%%Trailer'/'%%EOF')
-      close(npf)
+c *** indicate the end of the file
+      write (npf,'(''%%EOF'') ')
+C     close(npf)
       
       return
       end
@@ -5872,39 +4915,3 @@
 c *** end of Postscript specific routines
 c ****************************************************************
 
-c ******************************************************************
-c *** DEFAULT VALUES FOR ORTEP INPUT AND OUTPUT OPTIONS ARE SET HERE
-c *** USED IN SUBROUTINE UINPUT
-c ******************************************************************
-
-      subroutine dflts
-      common /dfl/ infile,idraw,iorient,iout,ext,atomfi,fpaplen       
-      character*60 infile,atomfi
-      character*4 ext
-
-c *** name of default input file
-      infile='TEP.IN'
-
-c *** where ortep drawing output should go
-c *** 1: Screen, 2: Postscript file, 3: HPGL file
-      idraw=1
-
-c *** orientation of drawing
-c *** 1: portrait, 2: landscape
-      iorient=1
-
-c *** height of page
-      fpaplen=11.
-
-c *** where ortep text output should go
-c *** 1: file, 2: screen, 0: omit
-      iout=0
-
-c *** text output filename extension
-      ext='.out'
-
-c *** default name of external atom parameter file
-      atomfi='ATOMS.DAT'
-
-      return
-      end
